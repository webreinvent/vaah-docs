get:
  tags:
    - Categories
  summary: Get record by category ID
  description: Retrieve a category by its unique identifier.
  operationId: getCategoryById
  parameters:
    - '$ref': '../vaahstore.yaml#/components/parameters/id'
  responses:
    '200':
      description: Category Retrieved Succesfully
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                '$ref': '../vaahstore.yaml#/components/schemas/Category'
    '404':
      description: Record Not Found
      content:
        application/json:
          schema:
            type: object  # Define the type of the response
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                example: [
                    "Record not found with ID: {id}"
                ]
            required:
              - errors  # Make errors a required field

    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
put:
  tags:
    - Categories
  summary: Update an existing record
  description: Update a category record with the specified ID using the provided details.
  operationId: updateCategory
  parameters:
    - '$ref': '../vaahstore.yaml#/components/parameters/id'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:

            name:
              type: string
              description: Name of the category
            slug:
              type: string
              description: Slug for the category
            parent_id:
              type: integer
              nullable: true
              description: Id of the parent category
            parent_category:
              type: object
              additionalProperties:
                type: boolean
              description: Object representing parent category mapping where keys are parent category IDs and values are boolean (true = valid relationship)
              example:
                15: true
            is_active:
              type: integer
              nullable: true
              description: Indicates if the category is active (1 = active, 0 = inactive, null if status is unknown or not set)
          required:
            - name
            - slug
            - parent_id
            - is_active
            - parent_category
  responses:
    '200':
      description: Saved Successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                '$ref': '../vaahstore.yaml#/components/schemas/Category'
              messages:
                type: array
                items:
                  type: string
                  example: "Saved Successfully"
    400:
      description: Bad Request, validation errors occurred.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                example: [ "This name/slug already exist." ]
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:

delete:
  tags:
    - Categories
  summary: Delete a record by ID
  description: Delete a single category by its ID.
  operationId: deleteCategoryById
  parameters:
    - '$ref': '#/components/parameters/id'
  responses:
    '200':
      description: Category Deleted
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: array
                items: { }
              messages:
                type: array
                items:
                  type: string
                  example: "Record has been deleted"
    '400':
      description: Record does not exist
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: string
                items:
                  type: string
                  example: "Record does not exist."
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:

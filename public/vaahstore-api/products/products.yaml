get:
  tags:
    - Products
  summary: Get List of all products
  description: Retrieve a list of products.
  operationId: getProductList
  parameters:
    - '$ref': '../vaahstore.yaml#/components/parameters/page'
    - '$ref': '../vaahstore.yaml#/components/parameters/rows'
    - '$ref': '../vaahstore.yaml#/components/parameters/ids_query'
    - '$ref': '../vaahstore.yaml#/components/parameters/exclude'
    - '$ref': '../vaahstore.yaml#/components/parameters/include'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_q'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_is_active'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_new_arrivals'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_from'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_to'
    - '$ref': '../vaahstore.yaml#/components/parameters/homepage_featured'
    - '$ref': '../vaahstore.yaml#/components/parameters/categorypage_featured'
    - '$ref': '../vaahstore.yaml#/components/parameters/top_sellings_filter'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_trashed'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_date'
    - '$ref': '../vaahstore.yaml#/components/parameters/min_price'
    - '$ref': '../vaahstore.yaml#/components/parameters/max_price'
    - '$ref': '../vaahstore.yaml#/components/parameters/category'
    - '$ref': '../vaahstore.yaml#/components/parameters/product_variations'
    - '$ref': '../vaahstore.yaml#/components/parameters/stores'
    - '$ref': '../vaahstore.yaml#/components/parameters/brands'
    - '$ref': '../vaahstore.yaml#/components/parameters/vendors'
    - '$ref': '../vaahstore.yaml#/components/parameters/min_quantity'
    - '$ref': '../vaahstore.yaml#/components/parameters/max_quantity'

  responses:
    '200':
      description: Products Retrieved
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      '$ref': '../vaahstore.yaml#/components/schemas/Product'
                  first_page_url:
                    type: string
                    example: "http://url/api/store/products?page=1"
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: "http://url/api/store/products?page=1"
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          nullable: true
                          example: null
                        label:
                          type: string
                          example: "&laquo; Previous"
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    nullable: true
                    example: null
                  path:
                    type: string
                    example: "http://url/api/store/products"
                  per_page:
                    type: integer
                    example: 20
                  prev_page_url:
                    type: string
                    nullable: true
                    example: null
                  to:
                    type: integer
                    example: 3
                  total:
                    type: integer
                    example: 3

    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:

post:
    tags:
      - Products
    summary: Create a new product
    description: Adds a new product to the store.
    operationId: createProduct
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: "My Product"
                description: Name of the product.
              slug:
                type: string
                example: "my-product"
                description: URL-friendly identifier for the product.
              vh_st_store_id:
                type: integer
                example: 1
                description: ID of the store the product belongs to.
              taxonomy_id_product_type:
                type: integer
                example: 1
                description: Product Type Id from the taxonomies.
              taxonomy_id_product_status:
                type: integer
                example: 1
                description: Status Id of the product.
              summary:
                type: string
                example: "My Product Summary"
                description: A brief summary of the product.
              details:
                type: string
                example: "My Product Details"
                description: Detailed information about the product.

              seo_meta_keyword:
                type: array
                items:
                  type: string
                description: SEO keywords for the product.
                example: [ "buy products", "example" ]
              available_at:
                type: string
                format: date
                example: "2024-10-10"
                description: Date when the product will be available.
              launch_at:
                type: string
                format: date
                example: "2025-04-18"
                description: Date when the product will be launched.
              categories:
                type: object
                description: Categories associated with the product, where keys are category IDs and values are booleans indicating selection.
                additionalProperties:
                  type: boolean
                example:
                  213: true
                  214: true
                  223: true
              is_active:
                type: integer
                example: 1
                description: Indicates if the product is active (1) or not (0).
              is_featured_on_home_page:
                type: boolean
                example: 1
                description: Indicates if the product is featured on the home page (1) or not (0).
              is_featured_on_category_page:
                type: boolean
                example: 1
                description: Indicates if the product is featured on the category page (1) or not (0).
              status_notes:
                type: string
                example: "Example status notes"
                description: Notes about the product's status.
              meta:
                type: object
                nullable: true  # Indicates that this field can be null
                example: null
                description: Meta information for the product.
            required:
              - name
              - slug
              - vh_st_store_id
              - taxonomy_id_product_type
              - taxonomy_id_product_status

    responses:
      '200':
        description: Product Created Successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  '$ref': '../vaahstore.yaml#/components/schemas/Product'
                messages:
                  type: array
                  items:
                    type: string
                  example: [ "Saved successfully." ]
      '400':
        description: Validation Errors
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                errors:
                  type: array
                  items:
                    type: string
                  description: List of validation error messages.
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:

delete:
    tags:
      - Products
    summary: Delete a list of products
    description: This endpoint allows you to delete multiple product records based on the provided input.
    operationId: deleteProductList
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - type
              - items
            properties:
              type:
                type: string
                description: Action type (e.g., "delete").
                example: "delete"
              items:
                type: array
                items:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: integer
                      description: The ID of the product to be deleted.
                      example: 1  # Example for a single item
                example: # Example for the entire array
                  - id: 1
                  - id: 2
                  - id: 3
    responses:
      '200':
        description: Action was successful and the specified products have been deleted.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: boolean
                  example: true
                messages:
                  type: array
                  items:
                    type: string
                    example: "Action was successful."
      '403':
        description: The user does not have permission to perform this action.
        content:
          application/json:
            schema:
              type: object
              properties:
                failed:
                  type: boolean
                  example: true
                messages:
                  type: array
                  items:
                    type: string
                    example: "Permission denied for action 'can-update-module'."
      '400':
        description: Validation failed for the input parameters.
        content:
          application/json:
            schema:
              type: object
              properties:
                failed:
                  type: boolean
                  example: true
                messages:
                  type: array
                  items:
                    type: string
                  example:
                    - "Action type is required."
                    - "Select items."

      '404':
        description: One or more specified product IDs were not found.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                errors:
                  type: array
                  items:
                    type: string
                    example: "Product not found."
      '500':
        description: An unexpected error occurred during the deletion process.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                errors:
                  type: array
                  items:
                    type: string
                    example: "An unexpected error occurred."
../vaahstore.yamlput:
    tags:
      - Products
    summary: Update a list of products
    description: This endpoint allows you to update multiple product records based on the provided input, including actions like activating, deactivating, trashing, or restoring products.
    operationId: updateProductList
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - type
              - items
            properties:
              type:
                type: string
                description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                example: "trash"
              items:
                type: array
                items:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: integer
                      description: The ID of the product to be updated.
                      example: 1  # Example for a single item
                example: # Example for the entire array
                  - id: 1
                  - id: 2
                  - id: 3
    responses:
      '200':
        description: Action was successful and the specified stores have been updated.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: boolean
                  example: true
                messages:
                  type: array
                  items:
                    type: string
                    example: "Action was successful."
      '403':
        description: The user does not have permission to perform this action.
        content:
          application/json:
            schema:
              type: object
              properties:
                failed:
                  type: boolean
                  example: true
                messages:
                  type: array
                  items:
                    type: string
                    example: "Permission denied for action 'can-update-module'."
      '400':
        description: Validation failed for the input parameters.
        content:
          application/json:
            schema:
              type: object
              properties:
                failed:
                  type: boolean
                  example: true
                messages:
                  type: array
                  items:
                    type: string
                  example:
                    - "Action type is required."
                    - "Select items."
      '404':
        description: One or more specified product IDs were not found.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                errors:
                  type: array
                  items:
                    type: string
                    example: "Prdouct not found."
      '500':
        description: An unexpected error occurred during the update process.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                errors:
                  type: array
                  items:
                    type: string
                    example: "An unexpected error occurred."

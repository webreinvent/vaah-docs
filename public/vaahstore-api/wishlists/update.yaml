get:
  tags:
    - Wishlists
  summary: Get record by wishlist ID
  description: Retrieve an wishlist by its unique identifier.
  operationId: getWishlistById
  parameters:
    - '$ref': '../vaahstore.yaml#/components/parameters/id'
  responses:
    '200':
      description: Wishlist Retrieved Successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: "Indicates if the request was successful."
              data:
                $ref: '../vaahstore.yaml#/components/schemas/Wishlist'




    '404':
      description: Record Not Found
      content:
        application/json:
          schema:
            type: object  # Define the type of the response
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                example: [
                    "Record not found with ID: {id}"
                ]
            required:
              - errors  # Make errors a required field

    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
put:
  tags:
    - Wishlists
  summary: Update an existing wishlist
  description: Update a wishlist record with the specified ID using the provided details.
  operationId: updateWishlist
  parameters:
    - '$ref': '../vaahstore.yaml#/components/parameters/id'
  requestBody:
    description: "Update an existing wishlist and its associated values."
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            name:
              type: string
              description: "The name of the wishlist."
            slug:
              type: string
              description: "The slug or URL-friendly name of the wishlist."
            type:
              type: string
              nullable: true
              description: "The type of the wishlist (nullable)."


            is_default:
              type: integer
              description: "Indicates whether the wishlist is the default wishlist for the user."



          required:
            - name
            - slug


  responses:
    '200':
      description: Saved Successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: "Indicates if the request was successful."
                example: true
              data:
                type: array
                items:
                  '$ref': '../vaahstore.yaml#/components/schemas/Wishlist'
    400:
      description: Bad Request, validation errors occurred.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                example: [
                    "The User field is required",
                    "The Address Line 1 field is required",
                    "The Type field is required",
                    "The Status field is required",

                ]
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:

delete:
  tags:
    - Wishlists
  summary: Delete a record by ID
  description: Delete a single wishlist by its ID.
  operationId: deleteWishlistById
  parameters:
    - '$ref': '#/components/parameters/id'
  responses:
    '200':
      description: Wishlist Deleted
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: array
                items: { }
              messages:
                type: array
                items:
                  type: string
                  example: "Record has been deleted"
    '400':
      description: Record does not exist
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: string
                items:
                  type: string
                  example: "Record does not exist."
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:

get:
  tags:
    - Wishlists
  summary: Get record by wishlist ID
  description: Retrieve an wishlist by its unique identifier.
  operationId: getWishlistById
  parameters:
    - '$ref': '../vaahstore.yaml#/components/parameters/id'
  responses:
    '200':
      description: Wishlist Retrieved Successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: "Indicates if the request was successful."
              data:
                type: object
                properties:
                  id:
                    type: integer
                    description: "The unique identifier of the wishlist."
                  uuid:
                    type: string
                    description: "The universally unique identifier (UUID) of the wishlist."
                  name:
                    type: string
                    description: "The name of the wishlist."
                  slug:
                    type: string
                    description: "The slug or URL-friendly name of the wishlist."
                  type:
                    type: string
                    nullable: true
                    description: "The type of the wishlist (nullable)."
                  vh_user_id:
                    type: integer
                    description: "The unique identifier of the user who owns the wishlist."
                  taxonomy_id_whishlists_status:
                    type: integer
                    description: "The status taxonomy ID associated with the wishlist."
                  taxonomy_id_whishlists_types:
                    type: string
                    nullable: true
                    description: "The type taxonomy ID associated with the wishlist (nullable)."
                  is_default:
                    type: integer
                    description: "Indicates whether the wishlist is the default wishlist for the user."
                  meta:
                    type: string
                    nullable: true
                    description: "Additional metadata for the wishlist (nullable)."
                  status_notes:
                    type: string
                    description: "Any notes related to the status of the wishlist."
                  created_by:
                    type: string
                    nullable: true
                    description: "The identifier of the user who created the wishlist (nullable)."
                  updated_by:
                    type: integer
                    description: "The identifier of the user who last updated the wishlist."
                  deleted_by:
                    type: string
                    nullable: true
                    description: "The identifier of the user who deleted the wishlist (nullable)."
                  created_at:
                    type: string
                    format: date-time
                    description: "The timestamp when the wishlist was created."
                  updated_at:
                    type: string
                    format: date-time
                    description: "The timestamp when the wishlist was last updated."
                  deleted_at:
                    type: string
                    nullable: true
                    description: "The timestamp when the wishlist was deleted (nullable)."
                  created_by_user:
                    type: string
                    nullable: true
                    description: "Details of the user who created the wishlist (nullable)."
                  updated_by_user:
                    type: object
                    description: "Details of the user who last updated the wishlist."
                    properties:
                      id:
                        type: integer
                        description: "The unique identifier of the user who updated the wishlist."
                      uuid:
                        type: string
                        description: "The UUID of the user who updated the wishlist."
                      first_name:
                        type: string
                        description: "The first name of the user who updated the wishlist."
                      last_name:
                        type: string
                        description: "The last name of the user who updated the wishlist."
                      email:
                        type: string
                        description: "The email of the user who updated the wishlist."
                      avatar:
                        type: string
                        description: "The avatar URL of the user who updated the wishlist."
                      name:
                        type: string
                        description: "The full name of the user who updated the wishlist."
                  deleted_by_user:
                    type: string
                    nullable: true
                    description: "Details of the user who deleted the wishlist (nullable)."
                  user:
                    type: object
                    description: "Details of the user who owns the wishlist."
                    properties:
                      id:
                        type: integer
                        description: "The unique identifier of the user."
                      first_name:
                        type: string
                        description: "The first name of the user."
                      username:
                        type: string
                        description: "The username of the user."
                      avatar:
                        type: string
                        description: "The avatar URL of the user."
                      name:
                        type: string
                        description: "The full name of the user."
                  status:
                    type: object
                    description: "The current status of the wishlist."
                    properties:
                      id:
                        type: integer
                        description: "The unique identifier of the status."
                      name:
                        type: string
                        description: "The name of the status."
                      slug:
                        type: string
                        description: "The slug or URL-friendly name of the status."
                  products:
                    type: array
                    description: "A list of products associated with the wishlist."
                    items:
                      type: object
                      properties:
                        is_selected:
                          type: boolean
                          description: "Indicates if the product is selected."
                        product:
                          type: object
                          description: "Details of the product in the wishlist."
                          properties:
                            id:
                              type: integer
                              description: "The unique identifier of the product."
                            name:
                              type: string
                              description: "The name of the product."



    '404':
      description: Record Not Found
      content:
        application/json:
          schema:
            type: object  # Define the type of the response
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                example: [
                    "Record not found with ID: {id}"
                ]
            required:
              - errors  # Make errors a required field

    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
put:
  tags:
    - Wishlists
  summary: Update an existing record
  description: Update a wishlist record with the specified ID using the provided details and also add a product to the wishlist.
  operationId: updateWishlist
  parameters:
    - '$ref': '../vaahstore.yaml#/components/parameters/id'
  requestBody:
    description: "Update an existing wishlist and its associated values."
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            name:
              type: string
              description: "The name of the wishlist."
            slug:
              type: string
              description: "The slug or URL-friendly name of the wishlist."
            type:
              type: string
              nullable: true
              description: "The type of the wishlist (nullable)."
            vh_user_id:
              type: integer
              description: "ID of the user creating the wishlist"
              example: 121
            taxonomy_id_whishlists_status:
              type: integer
              description: "The status taxonomy ID associated with the wishlist."

            is_default:
              type: integer
              description: "Indicates whether the wishlist is the default wishlist for the user."
            products:
              type: array
              description: "A list of products associated with the wishlist."
              items:
                type: object
                properties:
                  is_selected:
                    type: boolean
                    description: "Indicates if the product is selected."
                  product:
                    type: object
                    description: "Details of the product in the wishlist."
                    properties:
                      id:
                        type: integer
                        description: "The unique identifier of the product."
                      name:
                        type: string
                        description: "The name of the product."
                    required:
                      - id
                required:
                  - product

          required:
            - name
            - slug
            - is_default
            - taxonomy_id_whishlists_status
            - products
            - vh_user_id

  responses:
    '200':
      description: Saved Successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: "Indicates if the request was successful."
                example: true
              data:
                type: array
                items:
                  '$ref': '../vaahstore.yaml#/components/schemas/Wishlist'
    400:
      description: Bad Request, validation errors occurred.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                example: [
                    "The User field is required",
                    "The Address Line 1 field is required",
                    "The Type field is required",
                    "The Status field is required",

                ]
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:

delete:
  tags:
    - Wishlists
  summary: Delete a record by ID
  description: Delete a single wishlist by its ID.
  operationId: deleteWishlistById
  parameters:
    - '$ref': '#/components/parameters/id'
  responses:
    '200':
      description: Wishlist Deleted
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: array
                items: { }
              messages:
                type: array
                items:
                  type: string
                  example: "Record has been deleted"
    '400':
      description: Record does not exist
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: string
                items:
                  type: string
                  example: "Record does not exist."
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:

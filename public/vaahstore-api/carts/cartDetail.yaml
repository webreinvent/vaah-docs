get:
  tags:
    - Carts
  summary: Get cart details by cart Uuid
  description: Retrieve a cart items by its universal unique identifier.
  operationId: getCartById
  parameters:
    - name: uuid
      in: path
      required: true
      description: "The universally unique identifier (UUID) of the cart."
      schema:
        type: string
        example: "abcd1234-abcd1234"
  responses:
    '200':
      description: Cart details retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: object
                properties:
                  id:
                    type: integer
                    description: "Unique identifier for the cart"
                  uuid:
                    type: string
                    description: "Universally unique identifier for the cart"
                  vh_user_id:
                    type: integer
                    description: "Unique identifier for the user associated with the cart"
                  user:
                    type: object
                    description: "Details of the user who owns the cart"
                    properties:
                      id:
                        type: integer
                        description: "Unique identifier of the user"
                      uuid:
                        type: string
                        description: "Universally unique identifier of the user"
                      email:
                        type: string
                        description: "Email address of the user"
                  total_amount:
                    type: number
                    format: float
                    description: "Total amount calculated based on the sum of each item's price multiplied by its quantity in the cart."
                  products:
                    type: array
                    description: "List of products in the cart"
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: "Unique identifier of the product"
                        uuid:
                          type: string
                          description: "Universally unique identifier of the product"
                        available_stock_quantity:
                          type: integer
                          description: "Available stock quantity of the product"
                        taxonomy_id_product_type:
                          type: integer
                          description: "Product type taxonomy identifier"
                        vh_st_store_id:
                          type: integer
                          description: "Store identifier where the product is available"
                        vh_st_brand_id:
                          type: integer
                          nullable: true
                          description: "Brand identifier associated with the product, if available"
                        pivot:
                          type: object
                          description: "Details of the relationship between the cart and the product"
                          properties:
                            vh_st_cart_id:
                              type: integer
                              description: "Cart identifier for the product in the cart"
                            vh_st_product_id:
                              type: integer
                              description: "Product identifier in the cart"
                            vh_st_product_variation_id:
                              type: integer
                              description: "Product variation identifier in the cart"
                            quantity:
                              type: integer
                              description: "The quantity of the product set by the user to order"
                            vh_st_vendor_id:
                              type: integer
                              description: "Vendor identifier associated with the product"
                            is_stock_available:
                              type: integer
                              description: "Flag indicating whether the product is available in stock"
                            is_wishlisted:
                              type: integer
                              description: "Flag indicating whether the product is in the user's wishlist"
                            cart_product_variation:
                              type: string
                              description: "The variation name of the product associated with the cart"
                            price:
                              type: number
                              format: float
                              description: "Price of the product variation in the cart"
                        taxonomy_id_product_status:
                          type: integer
                          description: "Product status taxonomy identifier"
                        name:
                          type: string
                          description: "Name of the product"
                        slug:
                          type: string
                          description: "SEO-friendly URL slug for the product"
                        vh_cms_content_form_field_id:
                          type: integer
                          nullable: true
                          description: "Identifier for the CMS content form field, if applicable"
                        quantity:
                          type: integer
                          description: "Total quantity of products in the cart, including variations"
                        in_stock:
                          type: boolean
                          nullable: true
                          description: "Indicates if the product is currently in stock"
                        is_active:
                          type: boolean
                          description: "Flag indicating whether the product is active"
                  created_by_user:
                    type: object
                    description: "User who created the cart"
                    properties:
                      id:
                        type: integer
                        description: "Identifier of the user who created the cart"
                      uuid:
                        type: string
                        description: "Universally unique identifier of the user who created the cart"
                      first_name:
                        type: string
                        description: "First name of the user who created the cart"
                      last_name:
                        type: string
                        description: "Last name of the user who created the cart"
                  created_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the cart was created"
                  updated_at:
                    type: string
                    format: date-time
                    description: "Timestamp when the cart was last updated"
                  deleted_at:
                    type: string
                    format: date-time
                    nullable: true
                    description: "Timestamp when the cart was deleted, if applicable"




    '404':
      description: Record Not Found
      content:
        application/json:
          schema:
            type: object  # Define the type of the response
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                example: [
                    "Record not found with ID: {id}"
                ]
            required:
              - errors  # Make errors a required field

    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:

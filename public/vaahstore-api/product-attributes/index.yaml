get:
  tags:
    - Product Attributes
  summary: Get list of product attributes
  description: Retrieve list of all the product attributes.
  operationId: getProductAttributesList
  parameters:
    - '$ref': '../vaahstore.yaml#/components/parameters/page'
    - '$ref': '../vaahstore.yaml#/components/parameters/rows'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_q'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_is_active'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_trashed'

  responses:
    '200':
      description: List retrieved Successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      '$ref': '../vaahstore.yaml#/components/schemas/ProductAttribute'
                  first_page_url:
                    type: string
                    example: "http://url/api/store/productattributes?page=1"
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: "http://url/api/store/productattributes?page=1"
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          nullable: true
                          example: null
                        label:
                          type: string
                          example: "&laquo; Previous"
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    nullable: true
                    example: null
                  path:
                    type: string
                    example: "http://url/api/store/productattributes"
                  per_page:
                    type: integer
                    example: 20
                  prev_page_url:
                    type: string
                    nullable: true
                    example: null
                  to:
                    type: integer
                    example: 3
                  total:
                    type: integer
                    example: 3

    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:

post:
  tags:
    - Product Attributes
  summary: Create a new product attribute.
  operationId: createProductAttribute
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            vh_st_product_variation_id:
              type: integer
              description: The ID of the product variation.
            vh_st_attribute_id:
              type: integer
              description: The ID of the attribute.
            attribute_values:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the attribute value.
                  new_value:
                    type: string
                    description: The new attribute value.
                    maxLength: 100
                  default_value:
                    type: string
                    description: The default attribute value.
                required:
                  - id
                  - new_value
                  - default_value
          required:
          - vh_st_product_variation_id
          - vh_st_attribute_id
  responses:
    '200':
      description: Successfully created a product attribute.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Whether the operation was successful.
              data:
                type: array
                items:
                  '$ref': '../vaahstore.yaml#/components/schemas/ProductAttribute'
              messages:
                type: array
                items:
                  type: string
                example: [
                    "Saved successfully"
                ]
    '400':
      description: Validation error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Whether the operation was successful.
              errors:
                type: array
                items:
                  type: string
                description: A list of validation error messages.
                example:
                  - "The Product Variation field is required"
                  - "The Attribute field is required"
                  - "The Attribute Value field should not exceed 100 characters"



put:
  tags:
    - Product Attributes
  summary: Update list of product attributes
  description: This endpoint allows you to update multiple product attributes records based on the provided input, including actions like activating, deactivating, trashing, or restoring product attributes.
  operationId: updateProductAttributesList
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - type
            - items
          properties:
            type:
              type: string
              description: Action type (e.g., "activate", "deactivate", "trash", "restore").
              example: "trash"
            items:
              type: array
              items:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: integer
                    description: The ID of the product attributes to be updated.
                    example: 1  # Example for a single item
              example: # Example for the entire array
                - id: 1
                - id: 2
                - id: 3
  responses:
    '200':
      description: Action was successful and the specified product attributes have been updated.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: boolean
                example: true
              messages:
                type: array
                items:
                  type: string
                  example: "Action was successful."
    '403':
      description: The user does not have permission to perform this action.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              messages:
                type: array
                items:
                  type: string
                  example: "Permission denied for action 'can-update-module'."
    '400':
      description: Validation failed for the input parameters.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              messages:
                type: array
                items:
                  type: string
                example:
                  - "Action type is required."

    '500':
      description: An unexpected error occurred during the update process.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                  example: "An unexpected error occurred."

delete:
  tags:
    - Product Attributes
  summary: Delete list of product attributes
  description: This endpoint allows you to delete multiple product attribute records based on the provided input.
  operationId: deleteProductAttributesList
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - type
            - items
          properties:
            type:
              type: string
              description: Action type (e.g., "delete").
              example: "delete"
            items:
              type: array
              items:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: integer
                    description: The ID of the payments to be deleted.
                    example: 1  # Example for a single item
              example: # Example for the entire array
                - id: 1
                - id: 2
                - id: 3
  responses:
    '200':
      description: Action was successful and the specified payments have been deleted.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: boolean
                example: true
              messages:
                type: array
                items:
                  type: string
                  example: "Action was successful."
    '403':
      description: The user does not have permission to perform this action.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              messages:
                type: array
                items:
                  type: string
                  example: "Permission denied for action 'can-update-module'."
    '400':
      description: Validation failed for the input parameters.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              messages:
                type: array
                items:
                  type: string
                example:
                  - "Action type is required."
                  - "Select items."


    '500':
      description: An unexpected error occurred during the deletion process.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                  example: "An unexpected error occurred."

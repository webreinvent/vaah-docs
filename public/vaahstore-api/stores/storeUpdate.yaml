get:
  tags:
    - Stores
  summary: Get a Store by ID
  description: Retrieve a single store by its ID.
  operationId: getStoreById
  parameters:
    - name: id
      in: path
      required: true
      description: ID of the store to retrieve
      schema:
        type: integer
        format: int64
  responses:
    '200':
      description: Store Retrieved
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                '$ref': '../vaahstore.yaml#/components/schemas/Store'
    '404':
      description: Store Not Found
      content:
        application/json:
          schema:
            type: object  # Define the type of the response
            properties:
              errors:
                type: array
                items:
                  type: string
                example: [
                    "Record not found with ID: {id}"
                ]
            required:
              - errors  # Make errors a required field
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:


put:
  tags:
    - Stores
  summary: Update an existing Store
  description: Update a store with the specified ID using the provided details.
  operationId: updateStore
  parameters:
    - '$ref': '../vaahstore.yaml#/components/parameters/id'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - name
            - taxonomy_id_store_status
            - slug
            - is_multi_currency
            - is_multi_lingual
            - is_multi_vendor
            - allowed_ips
            - is_default
            - is_active
          properties:
            name:
              type: string
              example: "Updated Store Name"
            taxonomy_id_store_status:
              type: integer
              example: 1
            slug:
              type: string
              example: "updated-store"
            notes:
              type: string
              nullable: true
              example: "Updated notes about the store"
            is_multi_currency:
              type: integer
              enum: [0, 1]
              example: 1
            is_multi_lingual:
              type: integer
              enum: [0, 1]
              example: 0
            is_multi_vendor:
              type: integer
              enum: [0, 1]
              example: 1
            allowed_ips:
              type: array
              items:
                type: string
                format: ipv4
                example: "192.168.1.2"
            status_notes:
              type: string
              nullable: true
              example: "Store is now active"
            is_default:
              type: integer
              enum: [0, 1]
              example: 0
            is_active:
              type: integer
              enum: [0, 1]
              example: 1
  responses:
    '200':
      description: Saved Successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                '$ref': '../vaahstore.yaml#/components/schemas/Store'
              messages:
                type: array
                items:
                  type: string
                  example: "Saved Successfully"
    '400':
      description: Bad Request
      content:
        application/json:
          schema:

    '404':
      description: Store Not Found
      content:
        application/json:
          schema:

    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:

delete:
  tags:
    - Stores
  summary: Delete a Store by ID
  description: Delete a single store by its ID.
  operationId: deleteStoreById
  parameters:
    - name: id
      in: path
      required: true
      description: ID of the store to delete
      schema:
        type: integer
        format: int64
  responses:
    '200':
      description: Store Deleted
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: array
                items: { }
              messages:
                type: array
                items:
                  type: string
                  example: "Record has been deleted"
    '404':
      description: Store Not Found
      content:
        application/json:
          schema:
            type: object  # Define the type of the response
            properties:
              errors:
                type: array
                items:
                  type: string
                example: [
                    "Record not found with ID: {id}"
                ]
            required:
              - errors  # Make errors a required field
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:



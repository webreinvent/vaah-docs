get:
  tags:
    - Stores
  summary: Get list of all stores
  description: |
    This endpoint retrieves a list of stores with optional pagination and filtering.
    You can filter the results using various parameters.
  operationId: getStores
  parameters:
    - '$ref': '../vaahstore.yaml#/components/parameters/page'
    - '$ref': '../vaahstore.yaml#/components/parameters/rows'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_q'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_is_active'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_trashed'
    - '$ref': '../vaahstore.yaml#/components/parameters/filter_date'

  responses:
    '200':
      description: List of stores retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      '$ref': '../vaahstore.yaml#/components/schemas/Store'
                  first_page_url:
                    type: string
                    example: "http://url/api/store/stores?page=1"
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: "http://url/api/store/stores?page=1"
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          nullable: true
                          example: null
                        label:
                          type: string
                          example: "&laquo; Previous"
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    nullable: true
                    example: null
                  path:
                    type: string
                    example: "http://url/api/store/stores"
                  per_page:
                    type: integer
                    example: 20
                  prev_page_url:
                    type: string
                    nullable: true
                    example: null
                  to:
                    type: integer
                    example: 3
                  total:
                    type: integer
                    example: 3




post:
  tags:
    - Stores
  summary: Create a new Store
  description: Create a new store with the provided details.
  operationId: createStore
  requestBody:
    '$ref': '../vaahstore.yaml#/components/requestBodies/StoreRequestBody'
  responses:
    '200':
      description: Store Created Successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                '$ref': '../vaahstore.yaml#/components/schemas/Store'
              messages:
                type: array
                items:
                  type: string
                example: [ "Saved successfully." ]

    '400':
      description: Bad Request
      content:
        application/json:
          schema:

    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:


put:
  tags:
    - Stores
  summary: Update a list of stores
  description: This endpoint allows you to update multiple store records based on the provided input, including actions like activating, deactivating, trashing, or restoring stores.
  operationId: updateStoreList
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - type
            - items
          properties:
            type:
              type: string
              description: Action type (e.g., "activate", "deactivate", "trash", "restore").
              example: "trash"
            items:
              type: array
              items:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: integer
                    description: The ID of the store to be updated.
                    example: 1  # Example for a single item
              example: # Example for the entire array
                - id: 1
                - id: 2
                - id: 3
  responses:
    '200':
      description: Action was successful and the specified stores have been updated.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: boolean
                example: true
              messages:
                type: array
                items:
                  type: string
                  example: "Action was successful."
    '403':
      description: The user does not have permission to perform this action.
      content:
        application/json:
          schema:
            type: object
            properties:
              failed:
                type: boolean
                example: true
              messages:
                type: array
                items:
                  type: string
                  example: "Permission denied for action 'can-update-module'."
    '400':
      description: Validation failed for the input parameters.
      content:
        application/json:
          schema:
            type: object
            properties:
              failed:
                type: boolean
                example: true
              messages:
                type: array
                items:
                  type: string
                example:
                  - "Action type is required."
                  - "Select items."
    '404':
      description: One or more specified store IDs were not found.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                  example: "Store not found."
    '500':
      description: An unexpected error occurred during the update process.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                  example: "An unexpected error occurred."

delete:
  tags:
    - Stores
  summary: Delete a list of stores
  description: This endpoint allows you to delete multiple store records based on the provided input.
  operationId: deleteStoreList
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - type
            - items
          properties:
            type:
              type: string
              description: Action type (e.g., "delete").
              example: "delete"
            items:
              type: array
              items:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: integer
                    description: The ID of the store to be deleted.
                    example: 1  # Example for a single item
              example: # Example for the entire array
                - id: 1
                - id: 2
                - id: 3
  responses:
    '200':
      description: Action was successful and the specified stores have been deleted.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: boolean
                example: true
              messages:
                type: array
                items:
                  type: string
                  example: "Action was successful."
    '403':
      description: The user does not have permission to perform this action.
      content:
        application/json:
          schema:
            type: object
            properties:
              failed:
                type: boolean
                example: true
              messages:
                type: array
                items:
                  type: string
                  example: "Permission denied for action 'can-update-module'."
    '400':
      description: Validation failed for the input parameters.
      content:
        application/json:
          schema:
            type: object
            properties:
              failed:
                type: boolean
                example: true
              messages:
                type: array
                items:
                  type: string
                example:
                  - "Action type is required."
                  - "Select items."

    '404':
      description: One or more specified store IDs were not found.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                  example: "Store not found."
    '500':
      description: An unexpected error occurred during the deletion process.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                  example: "An unexpected error occurred."

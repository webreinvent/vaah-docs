get:
  tags:
    - Customers
  summary: Get record by customer ID
  description: Retrieve a customer by its unique identifier.
  operationId: getCustomerById
  parameters:
    - '$ref': '../vaahstore.yaml#/components/parameters/id'
    - name: x-xsrf-token
      in: header
      required: true
      description: The XSRF token for security.
      schema:
        type: string

  responses:
    '200':
      description: Customer Retrieved Succesfully
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                '$ref': '../vaahstore.yaml#/components/schemas/Customer'
    '404':
      description: Record Not Found
      content:
        application/json:
          schema:
            type: object  # Define the type of the response
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                example: [
                    "Record not found with ID: {id}"
                ]
            required:
              - errors  # Make errors a required field

    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
put:
  tags:
    - Customers
  summary: Update an existing record
  description: Update a customer record with the specified ID using the provided details.
  operationId: updateBrand
  parameters:
    - '$ref': '../vaahstore.yaml#/components/parameters/id'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            email:
              type: string
              format: email
              description: "The user's email address."
              maxLength: 150
            first_name:
              type: string
              description: "The user's first name."
              maxLength: 150
            username:
              type: string
              description: "User username"
            password:
              type: string
              description: "The user's password."
            status:
              type: string
              description: "The user's status."
            is_active:
              type: integer
              description: "Indicates whether the user is active or not."
          required:
            - email
            - first_name
            - status
            - is_active
            - password
            - username
  responses:
    '200':
      description: Saved Successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                '$ref': '../vaahstore.yaml#/components/schemas/Customer'
              messages:
                type: array
                items:
                  type: string
                  example: "Saved Successfully"
    400:
      description: Bad Request, validation errors occurred.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: string
                example: [ "This name/slug already exist." ]
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:

delete:
  tags:
    - Customers
  summary: Delete a record by ID
  description: Delete a single customer by its ID.
  operationId: deleteCustomerById
  parameters:
    - '$ref': '#/components/parameters/id'
  responses:
    '200':
      description: Customer Deleted
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: array
                items: { }
              messages:
                type: array
                items:
                  type: string
                  example: "Record has been deleted"
    '400':
      description: Record does not exist
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: string
                items:
                  type: string
                  example: "Record does not exist."
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:

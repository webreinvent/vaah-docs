openapi: 3.0.0
info:
  title: VaahStore
  description: |
    VaahStore is an e-commerce module that provides an API specification for user authentication and store management.
        To get started, [sign up here](#tag/Authentication/POST/user/signup).
  version: 1.0.0
  contact:
    name: Webreinvent Team
    url: https://webreinvent.com/
    email: we@webreinvent.com
servers:
  - url: http://127.0.0.1:8000/api/store
security:
  - bearerAuth: []
  - basicAuth: []
tags:
  - name: Stores
    description: Everything about Stores
  - name: Products
    description: Everything about Products in VaahStore
  - name: Vendors
    description: Everything about Vendors in VaahStore
  - name: Product Variations
    description: Everything about Product Variations in VaahStore
  - name: Vendor Products
    description: Everything about Vendor Products in VaahStore
  - name: Product Stocks
    description: Everything about Product Stocks in VaahStore
  - name: Carts
    description: Everything about Cart Process in VaahStore
  - name: Orders
    description: Everything about Order Process in VaahStore
  - name: Payments
    description: Everything about Payments in VaahStore
  - name: Product Attributes
    description: Everything about Product Attributes in VaahStore
paths:
  /stores:
    get:
      tags:
        - Stores
      summary: Get list of all stores
      description: |
        This endpoint retrieves a list of stores with optional pagination and filtering.
        You can filter the results using various parameters.
      operationId: getStores
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
      responses:
        '200':
          description: List of stores retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Store'
                  first_page_url:
                    type: string
                    example: http://127.0.0.1:8000/api/store/stores?page=1
    post:
      tags:
        - Stores
      summary: Create a new Store
      description: Create a new store with the provided details.
      operationId: createStore
      requestBody:
        $ref: '#/components/requestBodies/StoreRequestBody'
      responses:
        '201':
          description: Store Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
        '400':
          description: Bad Request
          content:
            application/json:
              schema: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Stores
      summary: Update a list of stores
      description: This endpoint allows you to update multiple store records based on the provided input, including actions like activating, deactivating, trashing, or restoring stores.
      operationId: updateStoreList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the store to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified stores have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified store IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Store not found.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Stores
      summary: Delete a list of stores
      description: This endpoint allows you to delete multiple store records based on the provided input.
      operationId: deleteStoreList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the store to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified stores have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified store IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Store not found.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /stores/{id}/action/{action}:
    patch:
      tags:
        - Stores
      summary: Perform an action on a store
      description: |
        This endpoint allows you to perform various actions on a store item, such as activating, deactivating, trashing, or restoring a store.
      operationId: itemAction
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Store'
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Store Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Store not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /stores/{id}:
    get:
      tags:
        - Stores
      summary: Get a Store by ID
      description: Retrieve a single store by its ID.
      operationId: getStoreById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the store to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Store Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
        '404':
          description: Store Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Stores
      summary: Update an existing Store
      description: Update a store with the specified ID using the provided details.
      operationId: updateStore
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - taxonomy_id_store_status
                - slug
                - is_multi_currency
                - is_multi_lingual
                - is_multi_vendor
                - allowed_ips
                - is_default
                - is_active
              properties:
                name:
                  type: string
                  example: Updated Store Name
                taxonomy_id_store_status:
                  type: integer
                  example: 1
                slug:
                  type: string
                  example: updated-store
                notes:
                  type: string
                  nullable: true
                  example: Updated notes about the store
                is_multi_currency:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 1
                is_multi_lingual:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 0
                is_multi_vendor:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 1
                allowed_ips:
                  type: array
                  items:
                    type: string
                    format: ipv4
                    example: 192.168.1.2
                status_notes:
                  type: string
                  nullable: true
                  example: Store is now active
                is_default:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 0
                is_active:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 1
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Store'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema: null
        '404':
          description: Store Not Found
          content:
            application/json:
              schema: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Stores
      summary: Delete a Store by ID
      description: Delete a single store by its ID.
      operationId: deleteStoreById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the store to delete
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Store Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '404':
          description: Store Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /stores/action/{action}:
    put:
      tags:
        - Stores
      summary: Perform bulk actions on stores
      description: This endpoint allows various bulk actions to be performed on stores based on the provided action type.
      operationId: performStoreAction
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '404':
          description: Store Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Store not found.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /products:
    get:
      tags:
        - Products
      summary: Get List of all products
      description: Retrieve a list of products.
      operationId: getProductList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/min_price'
        - $ref: '#/components/parameters/max_price'
        - $ref: '#/components/parameters/category'
        - $ref: '#/components/parameters/product_variations'
        - $ref: '#/components/parameters/stores'
        - $ref: '#/components/parameters/vendors'
        - $ref: '#/components/parameters/min_quantity'
        - $ref: '#/components/parameters/max_quantity'
      responses:
        '200':
          description: Products Retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  first_page_url:
                    type: string
                    example: http://127.0.0.1:8000/backend/store/products?page=1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Products
      summary: Create a new product
      description: Adds a new product to the store.
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My Product
                  description: Name of the product.
                slug:
                  type: string
                  example: my-product
                  description: URL-friendly identifier for the product.
                vh_st_store_id:
                  type: integer
                  example: 1
                  description: ID of the store the product belongs to.
                taxonomy_id_product_type:
                  type: integer
                  example: 1
                  description: Product Type Id from the taxonomies.
                taxonomy_id_product_status:
                  type: integer
                  example: 1
                  description: Status Id of the product.
                summary:
                  type: string
                  example: My Product Summary
                  description: A brief summary of the product.
                details:
                  type: string
                  example: My Product Details
                  description: Detailed information about the product.
                seo_meta_keyword:
                  type: array
                  items:
                    type: string
                  description: SEO keywords for the product.
                  example:
                    - buy products
                    - example
                available_at:
                  type: string
                  format: date
                  example: '2024-10-10'
                  description: Date when the product will be available.
                launch_at:
                  type: string
                  format: date
                  example: '2025-04-18'
                  description: Date when the product will be launched.
                categories:
                  type: object
                  description: Categories associated with the product, where keys are category IDs and values are booleans indicating selection.
                  additionalProperties:
                    type: boolean
                  example:
                    '213': true
                    '214': true
                    '223': true
                is_active:
                  type: integer
                  example: 1
                  description: Indicates if the product is active (1) or not (0).
                is_featured_on_home_page:
                  type: boolean
                  example: 1
                  description: Indicates if the product is featured on the home page (1) or not (0).
                is_featured_on_category_page:
                  type: boolean
                  example: 1
                  description: Indicates if the product is featured on the category page (1) or not (0).
                status_notes:
                  type: string
                  example: Example status notes
                  description: Notes about the product's status.
                meta:
                  type: object
                  nullable: true
                  example: null
                  description: Meta information for the product.
              required:
                - name
                - slug
                - vh_st_store_id
                - taxonomy_id_product_type
                - taxonomy_id_product_status
      responses:
        '200':
          description: Product Created Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    $ref: '#/components/schemas/Product'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    description: List of validation error messages.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Products
      summary: Delete a list of products
      description: This endpoint allows you to delete multiple product records based on the provided input.
      operationId: deleteProductList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified products have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified product IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Product not found.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    ../vaahstore.yamlput:
      tags:
        - Products
      summary: Update a list of products
      description: This endpoint allows you to update multiple product records based on the provided input, including actions like activating, deactivating, trashing, or restoring products.
      operationId: updateProductList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified stores have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified product IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Prdouct not found.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /products/{id}:
    get:
      tags:
        - Products
      summary: Get Product by ID
      description: Retrieve a product by its unique identifier.
      operationId: getProductById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Products
      summary: Update an existing Product
      description: Update a product with the specified ID using the provided details.
      operationId: updateProduct
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My Product
                  description: Name of the product.
                slug:
                  type: string
                  example: my-product
                  description: URL-friendly identifier for the product.
                vh_st_store_id:
                  type: integer
                  example: 1
                  description: ID of the store the product belongs to.
                taxonomy_id_product_type:
                  type: integer
                  example: 1
                  description: Product Type Id from the taxonomies.
                taxonomy_id_product_status:
                  type: integer
                  example: 1
                  description: Status Id of the product.
                summary:
                  type: string
                  example: My Product Summary
                  description: A brief summary of the product.
                details:
                  type: string
                  example: My Product Details
                  description: Detailed information about the product.
                seo_meta_keyword:
                  type: array
                  items:
                    type: string
                  description: SEO keywords for the product.
                  example:
                    - buy products
                    - example
                available_at:
                  type: string
                  format: date
                  example: '2024-10-10'
                  description: Date when the product will be available.
                launch_at:
                  type: string
                  format: date
                  example: '2025-04-18'
                  description: Date when the product will be launched.
                categories:
                  type: object
                  description: Categories associated with the product, where keys are category IDs and values are booleans indicating selection.
                  additionalProperties:
                    type: boolean
                  example:
                    '213': true
                    '214': true
                    '223': true
                is_active:
                  type: integer
                  example: 1
                  description: Indicates if the product is active (1) or not (0).
                is_featured_on_home_page:
                  type: boolean
                  example: 1
                  description: Indicates if the product is featured on the home page (1) or not (0).
                is_featured_on_category_page:
                  type: boolean
                  example: 1
                  description: Indicates if the product is featured on the category page (1) or not (0).
                status_notes:
                  type: string
                  example: Example status notes
                  description: Notes about the product's status.
                meta:
                  type: object
                  nullable: true
                  example: null
                  description: Meta information for the product.
              required:
                - name
                - slug
                - vh_st_store_id
                - taxonomy_id_product_type
                - taxonomy_id_product_status
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema: null
        '404':
          description: Product Not Found
          content:
            application/json:
              schema: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Products
      summary: Delete a Product by ID
      description: Delete a single product by its ID.
      operationId: deleteProductById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '404':
          description: Record does not exist
          content:
            application/json:
              schema: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /products/{id}/action/{action}:
    patch:
      tags:
        - Products
      summary: Perform an action on a product
      description: |
        This endpoint allows you to perform various actions on a product item, such as activating, deactivating, trashing, or restoring a product.
      operationId: itemAction
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /products/action/{action}:
    put:
      tags:
        - Products
      summary: Perform bulk actions on products
      description: This endpoint allows various bulk actions to be performed on products based on the provided action type.
      operationId: performStoreAction
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '404':
          description: Product Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Product not found.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /products/vendor:
    post:
      tags:
        - Products
      summary: Attach Product with Vendors
      description: |
        This endpoint allows you to create or attach vendors to a specific product.
        By providing the product ID and vendor details, you can associate one or more vendors
        with a product. This operation also verifies if the vendor already exists for the given product
        and includes validation for required fields.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - vh_st_store_id
                - vendors
              properties:
                id:
                  type: integer
                  description: The ID of the product.
                  example: 1
                vh_st_store_id:
                  type: integer
                  description: The ID of the store to which this vendor associated.
                  example: 2
                vendors:
                  type: array
                  items:
                    type: object
                    required:
                      - vendor
                      - can_update
                    properties:
                      vendor:
                        type: object
                        required:
                          - id
                          - name
                        properties:
                          id:
                            type: integer
                            description: The ID of the vendor.
                            example: 3
                          name:
                            type: string
                            description: The name of the vendor.
                            example: Vendor Name
                      can_update:
                        type: boolean
                        description: Indicates if the vendor can update the product.
                        example: true
                      status:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: integer
                            description: The status ID of the vendor relationship.
                            example: 1
                      status_notes:
                        type: string
                        description: Optional notes about the vendor status.
                        example: Vendor approved.
      responses:
        '200':
          description: Vendors attached successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - saved successfully.
                  data:
                    type: object
                    description: The product data.
                    additionalProperties: true
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Vendor required
                      - Can Update required
                      - This Vendor {vendor_name} already exists.
        '401':
          description: Unauthorized, user does not have permission to create vendor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Permission denied.
  /products/get-vendors-list/{id}:
    get:
      tags:
        - Products
      summary: Get Vendors List for Product By Product ID
      description: |
        This endpoint retrieves a list of vendors associated with a specific product.
        It returns vendor details, including the quantity available and their price range.
        Additionally, it checks for any missing default vendors and includes them in the response.
      operationId: getVendorsListForProduct
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product for which to retrieve the vendors.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved the list of vendors.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 109
                        name:
                          type: string
                          example: Vendor 1
                        slug:
                          type: string
                          example: vendor-1
                        is_default:
                          type: integer
                          example: 1
                        quantity:
                          type: integer
                          example: 0
                        product_price_range:
                          type: array
                          items:
                            type: number
                          example: []
                        pivot_id:
                          type: integer
                          example: 79
                        is_preferred:
                          type: boolean
                          nullable: true
                          example: null
                  message:
                    type: boolean
                    example: false
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid product ID.
        '404':
          description: Product not found or no vendors associated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Product not found or no vendors associated.
  /products/{id}/action-for-vendor/{action}:
    patch:
      tags:
        - Products
      summary: Set Vendor as Preferred or Not Preferred
      description: |
        This endpoint allows you to mark a specific vendor for a product as preferred or not preferred.
        When setting a vendor as preferred, all other vendors for the same product will be marked as not preferred.
      operationId: vendorPreferredAction
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product vendor to update.
          schema:
            type: integer
            example: 1
        - name: action
          in: path
          required: true
          description: The action to perform.
          examples:
            preferred: Mark as preferred.
            notpreferred: Mark as not preferred.
          schema:
            type: string
            enum:
              - preferred
              - notpreferred
            example: preferred
      responses:
        '200':
          description: Successfully updated the vendor preference status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: string
                    example: Success
                  data:
                    type: object
                    description: The product data.
                    additionalProperties: true
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid request.
        '404':
          description: Product vendor not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Product vendor not found.
  /products/getAttributeList:
    post:
      tags:
        - Products
      summary: Get Attribute List
      description: |
        This endpoint retrieves a list of attributes or attribute groups based on the provided attribute type.
        It can return either a list of all attributes or the attributes from a specific attribute group.
      operationId: getAttributeList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attribute_type:
                  type: string
                  description: The type of attribute to retrieve. Can be "attribute" or "attribute_group".
                  example: attribute_group
                get_attribute_from_group:
                  type: boolean
                  description: Indicates whether to retrieve attributes from a specific group.
                  example: false
                product_id:
                  type: integer
                  description: The ID of the product related to the attributes.
                  example: 23
                selected_attribute:
                  type: object
                  nullable: true
                  description: The selected attribute for retrieving attributes from a group. Null if not applicable.
                  example: null
      responses:
        '200':
          description: Successful response with attribute list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The ID of the attribute or attribute group.
                          example: 1
                        name:
                          type: string
                          description: The name of the attribute or attribute group.
                          example: Color
                        type:
                          type: string
                          description: The type of the attribute (only applicable for attributes).
                          example: string
  /products/getAttributeValue:
    post:
      tags:
        - Products
      summary: Get Attribute Values
      description: |
        This endpoint retrieves attribute values for a specified product and attribute list.
        It generates variations if the method is set to "generate" or returns a structured list of attribute values otherwise.
      operationId: getAttributeValue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attribute:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: color
                      type:
                        type: string
                        example: branded
                method:
                  type: string
                  example: generate
                product_id:
                  type: integer
                  example: 23
              required:
                - attribute
                - product_id
      responses:
        '200':
          description: Successful retrieval of attribute values
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      all_attribute_name:
                        type: array
                        items:
                          type: string
                        example:
                          - Color
                      structured_variation:
                        type: array
                        items:
                          type: object
                          properties:
                            variation_name:
                              type: string
                              example: Sony-Blue
                            is_selected:
                              type: boolean
                              example: false
                            Color:
                              type: object
                              properties:
                                value:
                                  type: string
                                  example: Blue
                                vh_st_attribute_id:
                                  type: integer
                                  example: 1
                                id:
                                  type: integer
                                  example: 1
                example:
                  data:
                    structured_variation:
                      - variation_name: Sony-Blue
                        is_selected: false
                        Color:
                          value: Blue
                          vh_st_attribute_id: 1
                          id: 1
                    all_attribute_name:
                      - Color
  /products/variation:
    post:
      tags:
        - Products
      summary: Create Product Variation
      description: |
        This endpoint allows you to create variations for a specific product.
        Each variation can have different attributes and settings.
        If a variation with the same name already exists for the product, an error will be returned.
      operationId: createVariation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - all_variation
              properties:
                id:
                  type: integer
                  example: 23
                  description: The ID of the product for which the variation is being created.
                all_variation:
                  type: object
                  required:
                    - structured_variation
                    - all_attribute_name
                  properties:
                    structured_variation:
                      type: array
                      items:
                        type: object
                        properties:
                          variation_name:
                            type: string
                            example: attribute 1 - attribute value
                            description: The name of the variation, typically a combination of attributes and their values.
                          is_default:
                            type: boolean
                            example: 1
                            description: Indicates whether this variation is selected as default.
                          attribute 1:
                            description: This is the name of the attribute.
                            type: object
                            properties:
                              value:
                                type: string
                                example: attribute value
                              vh_st_attribute_id:
                                type: integer
                                example: 7
                              id:
                                type: integer
                                example: 16
                          attribute 2:
                            type: object
                            properties:
                              value:
                                type: string
                                example: attribute value
                              vh_st_attribute_id:
                                type: integer
                                example: 6
                              id:
                                type: integer
                                example: 15
                    all_attribute_name:
                      type: array
                      items:
                        type: string
                      example:
                        - attribute 1
                        - attribute 2
                      description: An array of names of all attributes associated with the variations.
      responses:
        '200':
          description: Variation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    description: Indicates if the operation was successful.
                  data:
                    type: object
                    $ref: '#/components/schemas/Product'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - saved successfully.
                    description: Message after successful creation.
        '400':
          description: Error in creating variation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                    description: Indicates if the operation failed.
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This Variation name 'Color - Blue' already exists.
                    description: A list of error messages detailing the issues encountered.
  /products/add/product-to-cart:
    post:
      tags:
        - Products
      summary: Add a product to the cart
      description: |
        This endpoint allows users to add a product to their cart. It requires user information and the product ID. If the product is out of stock or no user information is provided, an error message will be returned.
      operationId: addProductToCart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_info:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                product:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    product_price_range:
                      type: object
                      properties:
                        selected_vendor:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
      responses:
        '200':
          description: Product added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved successfully.
                  data:
                    type: object
                    properties:
                      example: Response data will include user information.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                      example: Please enter valid user.
        '404':
          description: Product Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                      example: This product is out of stock if no vendor is selected or quantity is zero. No product variation is default if there is no default variation for this product.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                      example: An error occurred while adding the product to the cart.
  /vendors:
    get:
      tags:
        - Vendors
      summary: Get List of all vendors
      operationId: getVendorsList
      parameters:
        - name: filter[q]
          in: query
          required: false
          description: Search query for vendor by name, slug, or id.
          schema:
            type: string
        - name: filter[is_active]
          in: query
          required: false
          schema:
            type: boolean
        - name: filter[trashed]
          in: query
          required: false
          description: Include or exclude trashed vendors.
          schema:
            type: string
            enum:
              - include
              - exclude
              - only
        - name: filter[date][]
          in: query
          required: false
          description: Filter vendors by date range (start and end dates).
          schema:
            type: array
            items:
              type: string
              format: date
        - name: filter[vendor_status][]
          in: query
          required: false
          description: Filter vendors by status.
          schema:
            type: array
            items:
              type: string
        - name: filter[store][]
          in: query
          required: false
          description: Filter vendors by associated store name.
          schema:
            type: array
            items:
              type: string
            example:
              - store1
              - store2
        - name: filter[product][]
          in: query
          required: false
          description: Filter vendors by associated products slug.
          schema:
            type: array
            items:
              type: string
            example:
              - product-1
              - product-2
        - name: rows
          in: query
          required: false
          description: Number of rows to return per page.
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: A list of vendors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
        '400':
          description: Bad request. Invalid filter parameters.
        '500':
          description: Internal server error.
    post:
      tags:
        - Vendors
      summary: Create a new vendor
      operationId: createVendors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My vendor
                  description: Name of the vendor.
                slug:
                  type: string
                  example: my-vendor
                  description: URL-friendly identifier for the vendor.
                vh_st_store_id:
                  type: integer
                  example: 1
                  description: ID of the store the vendor belongs to.
                is_default:
                  type: boolean
                  example: 1
                  description: Is vendor is default.
                approved_by:
                  type: integer
                  example: 1
                  description: Id of the user who gone to aprove.
                owned_by:
                  type: integer
                  example: 1
                  description: id of the vendor owner.
                taxonomy_id_vendor_status:
                  type: integer
                  example: 1
                  description: Status Id of the vendor.
                store:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: id of the store.
                    is_multi_vendor:
                      type: enum
                      required: true
                      example: 1
              required:
                - name
                - slug
                - vh_st_store_id
                - approved_by
                - owned_by
                - is_default
                - taxonomy_id_vendor_status
      responses:
        '200':
          description: Vendor Created Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Vendor'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    description: List of validation error messages.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Vendors
      summary: Delete a list of vendors
      description: This endpoint allows you to delete multiple vendor records based on the provided input.
      operationId: deleteVendorList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified Vendors have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified Vendor IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Vendors not found.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    put:
      tags:
        - Vendors
      summary: Update a list of vendors
      description: This endpoint allows you to update multiple vendor records based on the provided input, including actions like activating, deactivating, trashing, or restoring vendors.
      operationId: updateVendorList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the vendor to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified vendors have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified vendor IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Vendor not found.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /vendors/{id}:
    get:
      tags:
        - Vendors
      summary: Get vendor by ID
      description: Retrieve a vendor by its unique identifier.
      operationId: getVendorById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Vendor Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
        '404':
          description: Vendor Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Vendors
      summary: Update an existing vendor
      description: Update a vendor with the specified ID using the provided details.
      operationId: updateVendor
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My vendor
                  description: Name of the vendor.
                slug:
                  type: string
                  example: my-vendor
                  description: URL-friendly identifier for the vendor.
                vh_st_store_id:
                  type: integer
                  example: 1
                  description: ID of the store the vendor belongs to.
                is_default:
                  type: boolean
                  example: true
                  description: Indicates whether the vendor is the default vendor.
                approved_by:
                  type: integer
                  example: 1
                  description: ID of the user who approved the vendor.
                owned_by:
                  type: integer
                  example: 1
                  description: ID of the vendor owner.
                taxonomy_id_vendor_status:
                  type: integer
                  example: 1
                  description: Status ID of the vendor.
                store:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: ID of the store.
                    is_multi_vendor:
                      type: boolean
                      example: true
                      description: Indicates if the store supports multiple vendors.
              required:
                - name
                - slug
                - vh_st_store_id
                - approved_by
                - owned_by
                - is_default
                - taxonomy_id_vendor_status
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vendor'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema: null
        '404':
          description: Vendor Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Vendors
      summary: Delete a vendor by ID
      description: Delete a single vendor by its ID.
      operationId: deleteVendorById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Vendor Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Details of the deleted vendor (optional).
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Record has been deleted
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /vendors/{id}/action/{action}:
    patch:
      tags:
        - Vendors
      summary: Perform an action on a vendor
      description: |
        This endpoint allows you to perform various actions on a vendor item, such as activating, deactivating, trashing, or restoring a vendor.
      operationId: itemAction
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example:
                        - Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example:
                        - An error occurred
  /vendors/action/{action}:
    put:
      tags:
        - Vendors
      summary: Perform bulk actions on list of vendors
      description: This endpoint allows various bulk actions to be performed on vendors based on the provided action type.
      operationId: performVendorAction
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '404':
          description: Vendor Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Vendor not found.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /vendors/add/product:
    post:
      tags:
        - Vendors
      summary: Attach products with vendor
      description: This endpoint allows adding products to a specific vendor.
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - products
              properties:
                id:
                  type: integer
                  description: The ID of the vendor.
                  example: 6
                products:
                  type: array
                  items:
                    type: object
                    required:
                      - product
                      - can_update
                      - status
                    properties:
                      product:
                        type: object
                        required:
                          - id
                          - name
                          - vh_st_store_id
                        properties:
                          id:
                            type: integer
                            description: The ID of the product.
                            example: 3
                          name:
                            type: string
                            description: The name of the product.
                            example: Sony
                          is_default:
                            type: integer
                            description: Whether the product is the default (0 or 1).
                            example: 0
                          vh_st_store_id:
                            type: integer
                            description: The store ID associated with the product.
                            example: 1
                      can_update:
                        type: boolean
                        description: Determines if the product can be updated by the vendor.
                        example: false
                      status:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: integer
                            description: The status ID of the product.
                            example: 18
                      status_notes:
                        type: string
                        description: Optional notes about the status of the product.
                        example: Product is under review
      responses:
        '200':
          description: Product added successfully with vendor
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    $ref: '#/components/schemas/Vendor'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Product added successfully.
        '400':
          description: Bad Request. Validation failed or product already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - '''Sample Product'' already exists for this vendor.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An error occurred while adding the product.
  /vendors/add/user:
    post:
      tags:
        - Vendors
      summary: Attach products with vendor
      description: This endpoint allows adding products to a specific vendor.
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - products
              properties:
                id:
                  type: integer
                  description: The ID of the vendor.
                  example: 6
                products:
                  type: array
                  items:
                    type: object
                    required:
                      - product
                      - can_update
                      - status
                    properties:
                      product:
                        type: object
                        required:
                          - id
                          - name
                          - vh_st_store_id
                        properties:
                          id:
                            type: integer
                            description: The ID of the product.
                            example: 3
                          name:
                            type: string
                            description: The name of the product.
                            example: Sony
                          is_default:
                            type: integer
                            description: Whether the product is the default (0 or 1).
                            example: 0
                          vh_st_store_id:
                            type: integer
                            description: The store ID associated with the product.
                            example: 1
                      can_update:
                        type: boolean
                        description: Determines if the product can be updated by the vendor.
                        example: false
                      status:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: integer
                            description: The status ID of the product.
                            example: 18
                      status_notes:
                        type: string
                        description: Optional notes about the status of the product.
                        example: Product is under review
      responses:
        '200':
          description: Product added successfully with vendor
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    $ref: '#/components/schemas/Vendor'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Product added successfully.
        '400':
          description: Bad Request. Validation failed or product already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - '''Sample Product'' already exists for this vendor.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An error occurred while adding the product.
  /productvariations:
    get:
      tags:
        - Product Variations
      summary: Get List of all variations
      description: Retrieve a list of all the product variations.
      operationId: getProductVariationList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/min_quantity'
        - $ref: '#/components/parameters/max_quantity'
        - name: filter[products][]
          in: query
          required: false
          description: Filter by associated products slug.
          schema:
            type: array
            items:
              type: string
            example:
              - product-1
              - product-2
        - name: filter[stock_status][]
          in: query
          required: false
          description: Filter by stock status
          schema:
            type: string
            enum:
              - in_stock
              - out_of_stock
              - low_stock
        - name: filter[default]
          in: query
          required: false
          description: Filter by default variations
          schema:
            type: boolean
      responses:
        '200':
          description: Product Variations Retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductVariation'
                  first_page_url:
                    type: string
                    example: http://127.0.0.1:8000/backend/store/products?page=1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      summary: Create a new product variation
      operationId: createProductVariation
      tags:
        - Product Variations
      requestBody:
        $ref: '#/components/requestBodies/ProductVariationRequestBody'
      responses:
        '200':
          description: Successful response with created product variation data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
                  data:
                    $ref: '#/components/schemas/ProductVariation'
        '400':
          description: Validation error or slug/name already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - This name already exists.
                      - Validation failed.
        '403':
          description: Permission denied.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Permission denied: can-update-module.'
    put:
      tags:
        - Product Variations
      summary: Update a list of product variations
      description: This endpoint allows you to update multiple product records based on the provided input, including actions like activating, deactivating, trashing, or restoring product variations.
      operationId: updateProductVariationList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product variations to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified variations have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Product Variations
      summary: Delete a list of product variations
      description: This endpoint allows you to delete multiple product variation records based on the provided input.
      operationId: deleteProductVariationList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product variation to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified products have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /productvariations/{id}:
    get:
      tags:
        - Product Variations
      summary: Get variation by ID
      description: Retrieve a product variation by its unique identifier.
      operationId: getProductVariationById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product Variation Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariation'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Product Variations
      summary: Update an existing  variation
      description: Update a product variation with the specified ID using the provided details.
      operationId: updateProduct
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/ProductVariationRequestBody'
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProductVariation'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Product Variations
      summary: Delete a variation by ID
      description: Delete a single product variation by its ID.
      operationId: deleteProductVariationById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product Variation Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /productvariations/{id}/action/{action}:
    patch:
      tags:
        - Product Variations
      summary: Perform an action on a product variation
      description: |
        This endpoint allows you to perform various actions on a variation item, such as activating, deactivating, trashing, or restoring a product.
      operationId: itemAction
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /productvariations/action/{action}:
    put:
      tags:
        - Product Variations
      summary: Perform bulk actions on variations
      description: This endpoint allows various bulk actions to be performed on product variations based on the provided action type.
      operationId: performBulkAction
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /productvariations/add/variation-to-cart:
    post:
      tags:
        - Product Variations
      summary: Add product variation to cart
      description: |
        This endpoint adds a product variation to a user's cart based on the selected variation and vendor.
      operationId: addVariationToCart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_info:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: integer
                      example: 119
                product_variation:
                  type: object
                  required:
                    - id
                    - quantity
                  properties:
                    id:
                      type: integer
                    quantity:
                      type: integer
                      description: The available total quantity of the variation
                    vh_st_product_id:
                      type: integer
      responses:
        '200':
          description: Added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved successfully.
                  data:
                    type: object
                    properties:
                      example: Response data will include user information.
        '400':
          description: Error occurred while adding variation to cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example:
                        - Please enter valid user
                        - This product variation is out of stock for selected vendor
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /productvariations/disable/active-cart:
    post:
      tags:
        - Product Variations
      summary: Disable active cart session
      description: |
        This endpoint disables the active cart session by removing the 'vh_user_id' from the current session.
        It is used to clear the active cart for the user.
      operationId: disableActiveCart
      responses:
        '200':
          description: Cart session disabled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Cart disabled successfully
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Something went wrong
                  hint:
                    type: string
                    description: Error trace when APP_DEBUG is true
                    example: Error trace stack...
  /productvendors:
    get:
      tags:
        - Vendor Products
      summary: Get list of all vendor products
      description: Retrieve a list of all the vendor products.
      operationId: getProductVendorsList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/products'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductVendor'
                  first_page_url:
                    type: string
                    example: http://127.0.0.1:8000/backend/store/productvendors?page=1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      summary: Create a new vendor product
      operationId: createVendorProduct
      tags:
        - Vendor Products
      requestBody:
        $ref: '#/components/requestBodies/ProductVendorRequestBody'
      responses:
        '200':
          description: Successful response with created product vendor data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
                  data:
                    $ref: '#/components/schemas/ProductVendor'
        '400':
          description: Validation error or slug/name already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - This name already exists.
                      - Validation failed.
        '403':
          description: Permission denied.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Permission denied: can-update-module.'
    put:
      tags:
        - Vendor Products
      summary: Update a list of product vendors
      description: This endpoint allows you to update multiple product vendors records based on the provided input, including actions like activating, deactivating, trashing, or restoring product vendors.
      operationId: updateProductVendorsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product vendors to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified product vendors have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Vendor Products
      summary: Delete a list of product vendors
      description: This endpoint allows you to delete multiple product vendors records based on the provided input.
      operationId: deleteProductVendorsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product vendors to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified product vendors have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /productvendors/{id}:
    get:
      tags:
        - Vendor Products
      summary: Get record by vendor-product ID
      description: Retrieve a product vendor by its unique identifier.
      operationId: getProductVendorsById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product-vendor Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVendor'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Vendor Products
      summary: Update an existing record
      description: Update a product vednor record with the specified ID using the provided details.
      operationId: updateProductVendor
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/ProductVendorUpdateRequestBody'
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProductVendor'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Vendor Products
      summary: Delete a record by ID
      description: Delete a single product vendor by its ID.
      operationId: deleteProductVendorById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product vendor Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /productvendors/{id}/action/{action}:
    patch:
      tags:
        - Vendor Products
      summary: Perform an action on a vendor-product
      description: |
        This endpoint allows you to perform various actions on a vendor-product item, such as activating, deactivating, trashing, or restoring a vendor product.
      operationId: itemActionVendorProducts
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /productvendors/action/{action}:
    put:
      tags:
        - Vendor Products
      summary: Perform bulk actions on vendor-products
      description: This endpoint allows various bulk actions to be performed on vendor products based on the provided action type.
      operationId: bulkActionsVendorProducts
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /productvendors/product/price:
    post:
      tags:
        - Vendor Products
      summary: Add product price by vendor
      description: This endpoint allows create the product price according to the specefic vendor.
      operationId: vendorProductPrice
      requestBody:
        description: Request body for adding product price by vendor
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: Unique identifier for the vendor product
                vh_st_vendor_id:
                  type: string
                  description: Unique identifier for the vendor
                vh_st_product_id:
                  type: string
                  description: Unique identifier for the product
                product_variation:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        required: true
                        description: Unique identifier for the product variation
                      name:
                        type: string
                        description: Name of the product variation
                      amount:
                        type: number
                        required: true
                        description: Price amount for the product variation. Set to null to delete.
              required:
                - id
                - vh_st_vendor_id
                - vh_st_product_id
                - product_variation
      responses:
        '200':
          description: Product price added or updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ProductVendor'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The Product field is required
                      - The product_variation.0.amount field is required.
  /productstocks:
    get:
      tags:
        - Product Stocks
      summary: Get list of all product stocks
      description: Retrieve list of all the product stocks.
      operationId: getProductStocksList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/min_quantity'
        - $ref: '#/components/parameters/max_quantity'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/products'
        - $ref: '#/components/parameters/product_variations'
        - $ref: '#/components/parameters/vendors'
        - $ref: '#/components/parameters/warehouses'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductStock'
                  first_page_url:
                    type: string
                    example: http://127.0.0.1:8000/backend/store/productstocks?page=1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Product Stocks
      summary: Create Product Stock
      operationId: createItem
      requestBody:
        $ref: '#/components/requestBodies/ProductStocksRequestBody'
      responses:
        '200':
          description: Product stock created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
                  data:
                    $ref: '#/components/schemas/ProductStock'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Product Stock already exists for this variation.
        '409':
          description: Conflict error if product stock already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Product Stock already exists for this variation.
    put:
      tags:
        - Product Stocks
      summary: Update a list of product stocks
      description: This endpoint allows you to update multiple product stocks records based on the provided input, including actions like activating, deactivating, trashing, or restoring product stocks.
      operationId: updateProductStocksList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product stocks to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified product stocks have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Product Stocks
      summary: Delete a list of product stocks
      description: This endpoint allows you to delete multiple product stocks records based on the provided input.
      operationId: deleteProductStocksList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product stocks to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified product stocks have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /productstocks/{id}:
    get:
      tags:
        - Product Stocks
      summary: Get record by product stock ID
      description: Retrieve a product stock by its unique identifier.
      operationId: getProductStockById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product-stock Retrieved Succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductStock'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Product Stocks
      summary: Update an existing record
      description: Update a product vednor record with the specified ID using the provided details.
      operationId: updateProductStock
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/ProductStocksRequestBody'
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProductStock'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Product Stocks
      summary: Delete a record by ID
      description: Delete a single product stock by its ID.
      operationId: deleteProductStockById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product vendor Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /productstocks/{id}/action/{action}:
    patch:
      tags:
        - Product Stocks
      summary: Perform an action on a product stock
      description: |
        This endpoint allows you to perform various actions on a product stock item, such as activating, deactivating, trashing, or restoring a product stock.
      operationId: itemActionProductStock
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /productstocks/action/{action}:
    put:
      tags:
        - Product Stocks
      summary: bulk actions on product stocks
      description: This endpoint allows various bulk actions to be performed on product stocks list based on the provided action type.
      operationId: bulkActionsVendorProducts
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /carts:
    get:
      tags:
        - Carts
      summary: Get list of all carts
      description: Retrieve list of all the carts.
      operationId: getProductStocksList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
      responses:
        '200':
          description: Cart list retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cart'
                  first_page_url:
                    type: string
                    example: http://127.0.0.1:8000/backend/store/carts?page=1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /carts/{id}:
    get:
      tags:
        - Carts
      summary: Get cart details by cart ID
      description: Retrieve a cart items by its unique identifier.
      operationId: getCartById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Cart details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Unique identifier for the cart
                  uuid:
                    type: string
                    description: Universally unique identifier for the cart
                  vh_user_id:
                    type: integer
                    description: Unique identifier for the user associated with the cart
                  user:
                    type: object
                    description: Details of the user who owns the cart
                    properties:
                      id:
                        type: integer
                        description: Unique identifier of the user
                      uuid:
                        type: string
                        description: Universally unique identifier of the user
                      email:
                        type: string
                        description: Email address of the user
                  total_amount:
                    type: number
                    format: float
                    description: Total amount calculated based on the sum of each item's price multiplied by its quantity in the cart.
                  products:
                    type: array
                    description: List of products in the cart
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Unique identifier of the product
                        uuid:
                          type: string
                          description: Universally unique identifier of the product
                        available_stock_quantity:
                          type: integer
                          description: Available stock quantity of the product
                        taxonomy_id_product_type:
                          type: integer
                          description: Product type taxonomy identifier
                        vh_st_store_id:
                          type: integer
                          description: Store identifier where the product is available
                        vh_st_brand_id:
                          type: integer
                          nullable: true
                          description: Brand identifier associated with the product, if available
                        pivot:
                          type: object
                          description: Details of the relationship between the cart and the product
                          properties:
                            vh_st_cart_id:
                              type: integer
                              description: Cart identifier for the product in the cart
                            vh_st_product_id:
                              type: integer
                              description: Product identifier in the cart
                            vh_st_product_variation_id:
                              type: integer
                              description: Product variation identifier in the cart
                            quantity:
                              type: integer
                              description: The quantity of the product set by the user to order
                            vh_st_vendor_id:
                              type: integer
                              description: Vendor identifier associated with the product
                            is_stock_available:
                              type: integer
                              description: Flag indicating whether the product is available in stock
                            is_wishlisted:
                              type: integer
                              description: Flag indicating whether the product is in the user's wishlist
                            cart_product_variation:
                              type: string
                              description: The variation name of the product associated with the cart
                            price:
                              type: number
                              format: float
                              description: Price of the product variation in the cart
                        taxonomy_id_product_status:
                          type: integer
                          description: Product status taxonomy identifier
                        name:
                          type: string
                          description: Name of the product
                        slug:
                          type: string
                          description: SEO-friendly URL slug for the product
                        vh_cms_content_form_field_id:
                          type: integer
                          nullable: true
                          description: Identifier for the CMS content form field, if applicable
                        quantity:
                          type: integer
                          description: Total quantity of products in the cart, including variations
                        in_stock:
                          type: boolean
                          nullable: true
                          description: Indicates if the product is currently in stock
                        is_active:
                          type: boolean
                          description: Flag indicating whether the product is active
                  created_by_user:
                    type: object
                    description: User who created the cart
                    properties:
                      id:
                        type: integer
                        description: Identifier of the user who created the cart
                      uuid:
                        type: string
                        description: Universally unique identifier of the user who created the cart
                      first_name:
                        type: string
                        description: First name of the user who created the cart
                      last_name:
                        type: string
                        description: Last name of the user who created the cart
                  created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the cart was created
                  updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the cart was last updated
                  deleted_at:
                    type: string
                    format: date-time
                    nullable: true
                    description: Timestamp when the cart was deleted, if applicable
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /carts/cart-check-out/{id}:
    get:
      tags:
        - Carts
      summary: Get cart items for checkout by cart ID
      description: Fetches the items available for checkout based on the specified cart ID. Only items with available stock will be included.
      operationId: getItemsAtCheckOutById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Cart items retrieved successfully at checkout
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      product_details:
                        type: array
                        items:
                          type: object
                          properties:
                            product_id:
                              type: integer
                            name:
                              type: string
                            description:
                              type: string
                              nullable: true
                            image_urls:
                              type: array
                              items:
                                type: string
                            pivot:
                              type: object
                              properties:
                                cart_product_variation:
                                  type: string
                                product_variation_id:
                                  type: integer
                                price:
                                  type: number
                                  format: float
                                quantity:
                                  type: integer
                                subtotal:
                                  type: number
                                  format: float
                                selected_vendor_id:
                                  type: integer
                      user_addresses:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            uuid:
                              type: string
                            vh_user_id:
                              type: integer
                            taxonomy_id_address_types:
                              type: integer
                            taxonomy_id_address_status:
                              type: integer
                            address_line_1:
                              type: string
                            address_line_2:
                              type: string
                              nullable: true
                            name:
                              type: string
                              nullable: true
                            phone:
                              type: string
                            pin_code:
                              type: string
                            city:
                              type: string
                            state:
                              type: string
                            country:
                              type: string
                            meta:
                              type: object
                              nullable: true
                            status_notes:
                              type: string
                              nullable: true
                            is_default:
                              type: boolean
                              nullable: true
                            created_by:
                              type: integer
                            updated_by:
                              type: integer
                            deleted_by:
                              type: integer
                              nullable: true
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                            deleted_at:
                              type: string
                              format: date-time
                              nullable: true
                            address:
                              type: string
                      user_billing_addresses:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            uuid:
                              type: string
                            vh_user_id:
                              type: integer
                            taxonomy_id_address_types:
                              type: integer
                            taxonomy_id_address_status:
                              type: integer
                            address_line_1:
                              type: string
                            address_line_2:
                              type: string
                              nullable: true
                            name:
                              type: string
                              nullable: true
                            phone:
                              type: string
                            pin_code:
                              type: string
                            city:
                              type: string
                            state:
                              type: string
                            country:
                              type: string
                            meta:
                              type: object
                              nullable: true
                            status_notes:
                              type: string
                              nullable: true
                            is_default:
                              type: boolean
                              nullable: true
                            created_by:
                              type: integer
                            updated_by:
                              type: integer
                            deleted_by:
                              type: integer
                              nullable: true
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                            deleted_at:
                              type: string
                              format: date-time
                              nullable: true
                            address:
                              type: string
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          uuid:
                            type: string
                          email:
                            type: string
                          username:
                            type: string
                          display_name:
                            type: string
                          title:
                            type: string
                          designation:
                            type: string
                          first_name:
                            type: string
                          middle_name:
                            type: string
                            nullable: true
                          last_name:
                            type: string
                          gender:
                            type: string
                          country_calling_code:
                            type: string
                          phone:
                            type: string
                          bio:
                            type: string
                          website:
                            type: string
                          timezone:
                            type: string
                          alternate_email:
                            type: string
                            nullable: true
                          avatar_url:
                            type: string
                          birth:
                            type: string
                            format: date
                          country:
                            type: string
                          country_code:
                            type: string
                            nullable: true
                          mfa_methods:
                            type: string
                            nullable: true
                          last_login_at:
                            type: string
                            format: date-time
                            nullable: true
                          last_login_ip:
                            type: string
                            nullable: true
                          is_active:
                            type: integer
                          activated_at:
                            type: string
                            format: date-time
                            nullable: true
                          status:
                            type: string
                          security_code:
                            type: string
                            nullable: true
                          security_code_expired_at:
                            type: string
                            format: date-time
                            nullable: true
                          affiliate_code:
                            type: string
                            nullable: true
                          affiliate_code_used_at:
                            type: string
                            format: date-time
                            nullable: true
                          reset_password_code_sent_at:
                            type: string
                            format: date-time
                            nullable: true
                          reset_password_code_used_at:
                            type: string
                            format: date-time
                            nullable: true
                          registration_id:
                            type: integer
                            nullable: true
                          foreign_user_id:
                            type: integer
                          meta:
                            type: object
                            properties:
                              '0':
                                type: string
                              custom_fields:
                                type: object
                                properties:
                                  state:
                                    type: string
                                    nullable: true
                          created_ip:
                            type: string
                          created_by:
                            type: integer
                          updated_by:
                            type: integer
                          deleted_by:
                            type: integer
                            nullable: true
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                          deleted_at:
                            type: string
                            format: date-time
                            nullable: true
                          avatar:
                            type: string
                          name:
                            type: string
                      total_mrp:
                        type: number
                        format: float
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  data:
                    type: object
                    nullable: true
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /carts/update/quantity:
    post:
      tags:
        - Carts
      summary: Update cart item quantity
      description: Updates the quantity of a specified product in the cart. If the new quantity is less than 1, the product will be removed from the cart.
      operationId: updateQuantity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cart_product_details:
                  type: object
                  properties:
                    vh_st_cart_id:
                      type: integer
                      example: 1
                      description: The ID of the cart.
                    vh_st_product_id:
                      type: integer
                      example: 1
                      description: The ID of the product.
                    vh_st_product_variation_id:
                      type: integer
                      example: 1
                      description: The ID of the product variation.
                    vh_st_vendor_id:
                      type: integer
                      example: 1
                      description: The ID of the vendor.
                  required:
                    - vh_st_cart_id
                    - vh_st_product_id
                    - vh_st_product_variation_id
                    - vh_st_vendor_id
                quantity:
                  type: integer
                  example: 3
                  description: The new quantity for the product.
              required:
                - quantity
                - cart_product_details
      responses:
        '200':
          description: Cart item quantity updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cart'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved successfully.
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Invalid input.
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Cart not found.
  /carts/delete-cart-item:
    post:
      tags:
        - Carts
      summary: Delete cart item
      description: Removes a specified product or product variation from the cart. If no variation ID is provided, the entire product will be removed.
      operationId: deleteCartItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cart_product_details:
                  type: object
                  properties:
                    vh_st_cart_id:
                      type: integer
                      example: 1
                      description: The ID of the cart.
                    vh_st_product_id:
                      type: integer
                      example: 1
                      description: The ID of the product to be deleted.
                    vh_st_product_variation_id:
                      type: integer
                      example: 1
                      description: The ID of the product variation to be deleted (optional).
                    vh_st_vendor_id:
                      type: integer
                      example: 1
                      description: The ID of the vendor associated with the product.
                  required:
                    - vh_st_cart_id
                    - vh_st_product_id
                    - vh_st_vendor_id
      responses:
        '200':
          description: Cart item deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      cart:
                        type: object
                        description: The updated cart object.
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record deleted.
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Invalid input.
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Cart not found.
  /carts/add-to-wishlist:
    post:
      tags:
        - Carts
      summary: Add an item to the wishlist
      description: Adds a specified product from the cart to the user's wishlist. If the item is already wishlisted, it will not be added again.
      operationId: addToWishlist
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_detail:
                  type: object
                  description: |
                    Contains details about the product in the cart that will be added to or removed from the wishlist.
                    Includes information such as the cart ID, product ID, product variation ID, quantity, vendor ID, and wishlist status.
                  properties:
                    vh_st_cart_id:
                      type: integer
                      example: 3
                      description: The ID of the cart containing the product.
                    vh_st_product_id:
                      type: integer
                      example: 1
                      description: The ID of the product to add to the wishlist.
                    vh_st_product_variation_id:
                      type: integer
                      example: 2
                      description: The ID of the product variation.
                    quantity:
                      type: integer
                      example: 1
                      description: The quantity of the product.
                    vh_st_vendor_id:
                      type: integer
                      example: 1
                      description: The ID of the vendor for the product.
                    is_wishlisted:
                      type: integer
                      example: 0
                      description: Indicates if the product is already in the wishlist.Set to 1 for adding the product to the wishlist, and 0 if you want to remove the product from the wishlist.
                  required:
                    - vh_st_cart_id
                    - vh_st_product_id
                    - vh_st_product_variation_id
                    - quantity
                    - vh_st_vendor_id
                    - is_wishlisted
                user_detail:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 121
                      description: The ID of the user.
                    username:
                      type: string
                      example: 58a55727-2084-448c-89bd-c3146f8d52f8
                      description: The username of the user, it is for the purpose making new wishlist also.
                  required:
                    - id
                    - username
              required:
                - item_detail
                - user_detail
      responses:
        '200':
          description: Item added to wishlist successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    description: Indicates the operation was successful.
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved successfully.
                  data:
                    type: object
                    properties:
                      cart:
                        $ref: '#/components/schemas/Cart'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Invalid input.
        '404':
          description: User or product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: User or product not found.
  /carts/save/cart-user-address:
    post:
      tags:
        - Carts
      summary: Save cart user address
      description: Saves the shipping or billing address of the user for a cart. The type of address (shipping or billing) is determined by the provided input.
      operationId: saveCartUserAddress
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_address:
                  type: object
                  description: Contains the address details to be saved for the user.
                  properties:
                    country:
                      type: string
                      example: India
                      description: The country of the user's address.
                    name:
                      type: string
                      example: Example Name
                      description: The name of the user to which the record is saved in the cart.
                    phone:
                      type: string
                      example: '1111111111'
                      description: The phone number of the user.
                    address_line_1:
                      type: string
                      example: 123 Main St
                      description: The street address of the user.
                    pin_code:
                      type: string
                      example: '10001'
                      description: The postal code of the user's address.
                    city:
                      type: string
                      example: New York
                      description: The city of the user's address.
                    state:
                      type: string
                      example: NY
                      description: The state of the user's address.
                  required:
                    - name
                    - phone
                    - address_line_1
                    - city
                    - state
                    - pin_code
                    - country
                user_data:
                  type: object
                  description: Information about the user.
                  properties:
                    id:
                      type: integer
                      example: 121
                      description: The ID of the user.
                  required:
                    - id
                type:
                  type: string
                  example: shipping
                  description: If 'billing', the address is saved as billing. Defaults to shipping.
              required:
                - user_address
                - user_data
                - type
      responses:
        '200':
          description: User address saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved successfully.
                  data:
                    type: object
                    properties:
                      cart_id:
                        type: integer
                        example: 1
                        description: The ID of the cart.
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: The Name field is required.
                    description: |
                      List of validation error messages. Possible errors include:
                        - The Name field is required.
                        - The Phone field is required.
                        - The Country field is required.
                        - The Address field is required.
                        - The Pin Code field is required.
                        - The City field is required.
                        - The State field is required.
                        - The Name field may not be greater than 100 characters.
                        - The Phone field must be numeric.
                        - The Address field may not be greater than 100 characters.
                        - The City field may not be greater than 100 characters.
                        - The Pin Code field may not be greater than 10 digits.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Error saving address.
  /carts/remove/cart-user-address:
    post:
      tags:
        - Carts
      summary: Remove cart-user address
      description: Deletes the user's address linked to the cart by the address ID.
      operationId: removeCartUserAddress
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_address:
                  type: object
                  description: Contains details of the address to be deleted.
                  properties:
                    id:
                      type: integer
                      example: 123
                      description: The ID of the address to be deleted.
                    vh_user_id:
                      type: integer
                      example: 1
                      description: The ID of the user owning the cart.
                  required:
                    - id
                    - vh_user_id
              required:
                - user_address
      responses:
        '200':
          description: Address deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: string
                      example: Successfully deleted.
                  data:
                    type: object
                    properties:
                      cart_id:
                        type: integer
                        example: 5
                        description: The ID of the cart associated with the user.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Invalid address ID.
  /carts/update/user-shipping-address:
    post:
      tags:
        - Carts
      summary: Update cart-user saved address
      description: Updates the cart user's address based on the provided address details and user information.
      operationId: updateUserShippingAddress
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address_detail:
                  type: object
                  description: Contains details of the address to be updated.
                  properties:
                    id:
                      type: integer
                      example: 101
                      description: The ID of the address to update.
                    country:
                      type: string
                      example: United States
                      description: The country of the updated address.
                    name:
                      type: string
                      example: John Doe
                      description: The updated name associated with the address.
                    phone:
                      type: string
                      example: +1-555-555-5555
                      description: The updated phone number associated with the address.
                    address_line_1:
                      type: string
                      example: 123 Main St
                      description: The updated street address.
                    city:
                      type: string
                      example: Los Angeles
                      description: The updated city.
                    state:
                      type: string
                      example: CA
                      description: The updated state.
                    pin_code:
                      type: string
                      example: '90001'
                      description: The updated postal code.
                  required:
                    - id
                    - country
                    - name
                    - phone
                    - address_line_1
                    - city
                    - state
                    - pin_code
                user_detail:
                  type: object
                  description: Contains details about the user making the request.
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: The ID of the user associated with the cart.
                  required:
                    - id
              required:
                - address_detail
                - user_detail
      responses:
        '200':
          description: Address updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    description: Indicates if the operation was successful.
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved successfully.
                  data:
                    type: object
                    properties:
                      cart_id:
                        type: integer
                        example: 1
                        description: The ID of the cart associated with the user.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Request data is incomplete.
  /carts/place-order:
    post:
      tags:
        - Carts
      summary: Place an order
      description: Places an order for the items in the cart and updates stock levels accordingly.
      operationId: placeOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_details:
                  type: object
                  description: Contains details of the order to be placed.
                  properties:
                    cart_id:
                      type: integer
                      example: 1
                      description: The ID of the user's cart.
                    total_amount:
                      type: number
                      format: float
                      example: 150
                      description: The total amount for the order.
                    payable:
                      type: number
                      format: float
                      example: 150
                      description: The amount that needs to be paid.
                    discounts:
                      type: number
                      format: float
                      example: 10
                      description: The total discount applied to the order.
                    taxes:
                      type: number
                      format: float
                      example: 5
                      description: The total taxes applied to the order.
                    delivery_fee:
                      type: number
                      format: float
                      example: 5
                      description: The delivery fee for the order.
                    shipping_address:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 101
                          description: The ID of the shipping address.
                        vh_user_id:
                          type: integer
                          example: 1
                          description: The ID of the user associated with the order.
                      required:
                        - id
                        - vh_user_id
                    billing_address:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 102
                          description: The ID of the billing address.
                        vh_user_id:
                          type: integer
                          example: 1
                          description: The ID of the user associated with the order.
                      required:
                        - id
                        - vh_user_id
                    payment_method:
                      type: string
                      example: COD
                      description: The payment method selected for the order.
                    order_items:
                      type: array
                      items:
                        type: object
                        properties:
                          product_id:
                            type: integer
                            example: 1
                            description: The ID of the product.
                          name:
                            type: string
                            example: product name
                            description: The name of the product.
                          pivot:
                            type: object
                            properties:
                              cart_product_variation:
                                type: string
                                example: variation name
                                description: The name of the product variation.
                              product_variation_id:
                                type: integer
                                example: 2
                                description: The ID of the product variation.
                              selected_vendor_id:
                                type: integer
                                example: 1
                                description: The ID of the selected vendor.
                              quantity:
                                type: integer
                                example: 1
                                description: The quantity of the product ordered.
                              price:
                                type: number
                                format: float
                                example: 50
                                description: The price of the product.
                              subtotal:
                                type: number
                                format: float
                                example: 50
                                description: The total as quantity * price for the item.
                            required:
                              - cart_product_variation
                              - product_variation_id
                              - selected_vendor_id
                              - quantity
                              - price
                        required:
                          - product_id
                          - name
                          - pivot
                  required:
                    - cart_id
                    - total_amount
                    - payable
                    - discounts
                    - taxes
                    - delivery_fee
                    - shipping_address
                    - billing_address
                    - payment_method
                    - order_items
              required:
                - order_details
      responses:
        '200':
          description: Order placed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    description: Indicates if the operation was successful.
                  messages:
                    type: array
                    items:
                      type: string
                      example: Order placed successfully.
                  data:
                    type: object
                    properties:
                      order:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                            description: The ID of the placed order.
                          amount:
                            type: number
                            format: float
                            example: 150
                            description: The total amount for the order.
                          order_status:
                            type: string
                            example: Placed
                            description: The current status of the order.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example:
                        - Provide shipping details
                        - Provide billing details
                        - Select payment type
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred while placing the order.
  /carts/get-order-details/{order_id}:
    get:
      summary: Get order details after placing an order
      operationId: getOrderDetails
      tags:
        - Carts
        - Orders
      parameters:
        - name: order_id
          in: path
          required: true
          description: The ID of the order to retrieve details for.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved order details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      order:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                            description: The ID of the order.
                          uuid:
                            type: string
                            example: some-unique-order-uuid
                            description: The unique identifier for the order.
                      user:
                        type: object
                        description: User details related to the order.
                      ordered_at:
                        type: string
                        format: date-time
                        example: '2024-10-03T12:34:56Z'
                        description: The date and time when the order was placed.
                      unique_order_id:
                        type: string
                        example: some-unique-order-uuid
                        description: The unique order ID.
                      product_details:
                        type: array
                        items:
                          type: object
                          properties:
                            product_id:
                              type: integer
                              example: 1
                              description: The ID of the product.
                            name:
                              type: string
                              example: Product Name
                              description: The name of the product.
                            description:
                              type: string
                              example: Detailed description of the product.
                              description: A description of the product.
                            image_urls:
                              type: array
                              items:
                                type: string
                                example: http://example.com/image.jpg
                                description: URL(s) of the product images.
                            pivot:
                              type: object
                              properties:
                                cart_product_variation:
                                  type: string
                                  example: Variation Name
                                  description: The name of the product variation.
                                product_variation_id:
                                  type: integer
                                  example: 2
                                  description: The ID of the product variation.
                                price:
                                  type: number
                                  format: float
                                  example: 50
                                  description: The price of the product.
                                quantity:
                                  type: integer
                                  example: 1
                                  description: The quantity of the product ordered.
                                selected_vendor_id:
                                  type: integer
                                  example: 1
                                  description: The ID of the selected vendor.
                      order_items_shipping_address:
                        type: object
                        description: Shipping address details for the order.
                        properties:
                          id:
                            type: integer
                            example: 101
                          vh_user_id:
                            type: integer
                            example: 1
                      order_items_billing_address:
                        type: object
                        description: Billing address details for the order.
                        properties:
                          id:
                            type: integer
                            example: 102
                          vh_user_id:
                            type: integer
                            example: 1
                      total_mrp:
                        type: number
                        format: float
                        example: 150
                        description: Total amount for all products in the order.
                      order_paid_amount:
                        type: number
                        format: float
                        example: 150
                        description: Total amount paid for the order.
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Order not found.
                  data:
                    type: null
  /orders:
    get:
      tags:
        - Orders
      summary: Get list of all orders
      description: Retrieve list of all the orders.
      operationId: getOrdersList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  first_page_url:
                    type: string
                    example: http://127.0.0.1:8000/backend/store/orders?page=1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Orders
      summary: Update list of orders
      description: This endpoint allows you to update multiple product stocks records based on the provided input, including actions like activating, deactivating, trashing, or restoring orders.
      operationId: updateOrdersList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the orders to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified orders have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Orders
      summary: Delete list of orders
      description: This endpoint allows you to delete multiple order records based on the provided input.
      operationId: deleteOrdersList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the orders to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified orders have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Get record by order ID
      description: Retrieve a order by its unique identifier.
      operationId: getOrderById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Order Retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 6
                              description: The ID of the order.
                            uuid:
                              type: string
                              example: b067e5fa-bfbc-4e91-beb2-ca0b1000cd53
                              description: A unique identifier for the order.
                            vh_user_id:
                              type: integer
                              example: 121
                              description: The ID of the user associated with the order.
                            order_status:
                              type: string
                              example: Placed
                              description: The current status of the order.
                            taxonomy_id_payment_status:
                              type: integer
                              description: The ID of the order payment status.
                            order_shipment_status:
                              type: string
                              example: Pending
                              description: The current shipment status of the order.
                            amount:
                              type: number
                              format: float
                              example: 25
                              description: The total amount for the order.
                            delivery_fee:
                              type: number
                              format: float
                              example: 0
                              description: The delivery fee associated with the order.
                            taxes:
                              type: number
                              format: float
                              example: 0
                              description: The total taxes applied to the order.
                            discount:
                              type: number
                              format: float
                              example: 0
                              description: The total discount applied to the order.
                            payable:
                              type: number
                              format: float
                              example: 25
                              description: The total amount that needs to be paid for the order.
                            paid:
                              type: number
                              format: float
                              example: 0
                              description: The amount that has been paid for the order.
                            is_paid:
                              type: integer
                              nullable: true
                              example: 1
                              description: Indicates if the order has been paid for.
                            is_active:
                              type: integer
                              example: 1
                              description: Indicates if the order is currently active.
                            items_count:
                              type: integer
                              example: 2
                              description: The total number of items in the order.
                            payment_method:
                              type: string
                              nullable: true
                              example: null
                              description: The payment method used for the order.
                            order_payment_status:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 64
                                  description: The ID of the payment status.
                                name:
                                  type: string
                                  example: Pending
                                  description: The name of the payment status.
                                slug:
                                  type: string
                                  example: pending
                                  description: A URL-friendly version of the payment status name.
                            status:
                              type: string
                              nullable: true
                              example: null
                              description: Additional status information for the order.
                            status_notes:
                              type: string
                              nullable: true
                              example: null
                              description: Any notes related to the status of the order.
                            user:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 121
                                  description: The ID of the user.
                                first_name:
                                  type: string
                                  example: Olin
                                  description: The first name of the user.
                                email:
                                  type: string
                                  example: shivam1@zieme.org
                                  description: The email address of the user.
                                phone:
                                  type: string
                                  example: '2509077310'
                                  description: The phone number of the user.
                                display_name:
                                  type: string
                                  example: shivam
                                  description: The display name of the user.
                            payments:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                  uuid:
                                    type: string
                                  vh_st_payment_method_id:
                                    type: integer
                                    nullable: true
                                  transaction_id:
                                    type: string
                                  taxonomy_id_payment_status:
                                    type: integer
                                  amount:
                                    type: string
                                  status_notes:
                                    type: string
                                  notes:
                                    type: string
                                    nullable: true
                                  payment_gate_response:
                                    type: string
                                    nullable: true
                                  payment_gate_status:
                                    type: string
                                    nullable: true
                                  is_active:
                                    type: integer
                                    nullable: true
                                  date:
                                    type: string
                                    format: date-time
                                  meta:
                                    type: object
                                    additionalProperties: true
                                  created_by:
                                    type: integer
                                  updated_by:
                                    type: integer
                                  deleted_by:
                                    type: integer
                                    nullable: true
                                  created_at:
                                    type: string
                                    format: date-time
                                  updated_at:
                                    type: string
                                    format: date-time
                                  deleted_at:
                                    type: string
                                    nullable: true
                                  pivot:
                                    type: object
                                    properties:
                                      vh_st_order_id:
                                        type: integer
                                      vh_st_payment_id:
                                        type: integer
                                      payment_amount:
                                        type: string
                                      payable_amount:
                                        type: string
                                      remaining_payable_amount:
                                        type: string
                                      created_at:
                                        type: string
                                        format: date-time
                                  created_by_user:
                                    type: object
                                    properties:
                                      id:
                                        type: integer
                                      uuid:
                                        type: string
                                      first_name:
                                        type: string
                                      last_name:
                                        type: string
                                      email:
                                        type: string
                                      avatar:
                                        type: string
                                      name:
                                        type: string
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Orders
      summary: Update an existing record
      description: Update a order status notes with the specified ID using the provided details.
      operationId: updateOrderById
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status_notes:
                  type: string
                  description: Notes related to the status of the order.
                  maxLength: 100
                paid:
                  type: number
                  format: float
                  description: The amount that has been paid for the order for set the is paid flag.
                  example: 25
              required:
                - status_notes
                - paid
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Order'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Orders
      summary: Delete a record by ID
      description: Delete a single order by its ID.
      operationId: deleteOrderById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Order Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /orders/{id}/action/{action}:
    patch:
      tags:
        - Orders
      summary: Perform an action on a order
      description: |
        This endpoint allows you to perform various actions on a order item, such as activating, deactivating, trashing, or restoring a order.
      operationId: itemActiOnOrder
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /orders/action/{action}:
    put:
      tags:
        - Orders
      summary: bulk actions on orders
      description: This endpoint allows various bulk actions to be performed on orders list based on the provided action type.
      operationId: bulkActionsVendorProducts
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /orders/get-order-items/{id}:
    get:
      summary: Get shipped order items by ID
      description: Retrieve order items shipment details for a specified order ID, including product variations, vendor information, and quantities shipped.
      operationId: getShippedOrderItems
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the order to retrieve shipped items for.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved shipped order items
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The ID of the order item.
                          example: 1
                        product:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the product.
                              example: 2
                            name:
                              type: string
                              description: The name of the product.
                              example: Sample Product
                        product_variation:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the product variation.
                              example: 3
                            variation_name:
                              type: string
                              description: The name of the product variation.
                              example: Red - Large
                        vendor:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the vendor.
                              example: 4
                            name:
                              type: string
                              description: The name of the vendor.
                              example: Vendor Name
                        quantity:
                          type: integer
                          description: The quantity of the product ordered.
                          example: 2
                        shipped_quantity:
                          type: integer
                          description: The total quantity shipped for this order item.
                          example: 1
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Order not found.
                  data:
                    type: null
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An unexpected error occurred.
                  data:
                    type: null
  /payments:
    get:
      tags:
        - Payments
      summary: Get list of payments
      description: Retrieve list of all the payments.
      operationId: getPaymentsList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Payment'
                  first_page_url:
                    type: string
                    example: http://127.0.0.1:8000/backend/store/payments?page=1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      summary: Create a new payment
      description: This endpoint handles creating a new payment for one or more orders. Only Cash on Delivery (COD) payments are currently supported.
      operationId: createPaymentItem
      tags:
        - Payments
      requestBody:
        description: Data required to create a payment
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vh_st_payment_method_id:
                  type: integer
                  description: The payment method ID.
                  example: 1
                amount:
                  type: number
                  format: float
                  example: 50
                  description: The total amount provide for the payment.
                orders:
                  type: array
                  description: List of orders to be paid
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the order.
                        example: 1
                      user_name:
                        type: string
                        description: Name of the user placing the order.
                        example: John Doe
                      pay_amount:
                        type: number
                        format: float
                        description: The amount to be paid for the order.
                        example: 50
                      payable_amount:
                        type: number
                        format: float
                        description: The total amount payable for the order.
                        example: 50
                    required:
                      - id
                      - user_name
                      - pay_amount
                      - payable_amount
                payment_method:
                  type: object
                  properties:
                    slug:
                      type: string
                      description: The slug of the payment method (e.g., 'cod').
                      example: cod
                  required:
                    - slug
                notes:
                  type: string
                  description: Additional notes for the payment.
              required:
                - orders
                - vh_st_payment_method_id
                - payment_method
                - amount
      responses:
        '200':
          description: Successfully created a payment item
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      uuid:
                        type: string
                        nullable: true
                      transaction_id:
                        type: string
                        description: The unique transaction ID.
                      amount:
                        type: string
                      vh_st_payment_method_id:
                        type: integer
                      payment_method:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          slug:
                            type: string
                      taxonomy_id_payment_status:
                        type: integer
                      status:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          slug:
                            type: string
                      status_notes:
                        type: string
                        description: Notes regarding payment status.
                      date:
                        type: string
                        format: date-time
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
                        nullable: true
                      created_by:
                        type: integer
                        nullable: true
                      created_by_user:
                        type: object
                        nullable: true
                      updated_by:
                        type: integer
                        nullable: true
                      updated_by_user:
                        type: object
                        nullable: true
                      deleted_by:
                        type: integer
                        nullable: true
                      deleted_by_user:
                        type: object
                        nullable: true
                      order_payments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            uuid:
                              type: string
                              nullable: true
                            vh_st_payment_id:
                              type: integer
                            vh_st_order_id:
                              type: integer
                            taxonomy_id_order_payment_status:
                              type: integer
                            payable_amount:
                              type: string
                            payment_amount:
                              type: string
                            remaining_payable_amount:
                              type: string
                            date:
                              type: string
                              format: date-time
                              nullable: true
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                              nullable: true
                            taxonomy_order_payment_status:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                slug:
                                  type: string
                            order:
                              type: object
                              properties:
                                id:
                                  type: integer
                                uuid:
                                  type: string
                                vh_user_id:
                                  type: integer
                                order_status:
                                  type: string
                                amount:
                                  type: number
                                payable:
                                  type: number
                                paid:
                                  type: number
                                is_paid:
                                  type: integer
                                is_active:
                                  type: integer
                                created_at:
                                  type: string
                                  format: date-time
                                updated_at:
                                  type: string
                                  format: date-time
                                user:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                    first_name:
                                      type: string
                                    email:
                                      type: string
                                    phone:
                                      type: string
                                    display_name:
                                      type: string
                                    avatar:
                                      type: string
                                    name:
                                      type: string
        '400':
          description: Invalid input or validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: The payment amount for order 'John Doe' must be greater than 0.
        '422':
          description: Validation error for orders or payment method
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: The orders field is required.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An unexpected error occurred.
    put:
      tags:
        - Payments
      summary: Update list of payments
      description: This endpoint allows you to update multiple payments records based on the provided input, including actions like activating, deactivating, trashing, or restoring payments.
      operationId: updatePaymentsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the payments to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified payments have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Payments
      summary: Delete list of payments
      description: This endpoint allows you to delete multiple payment records based on the provided input.
      operationId: deletePaymentsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the payments to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified payments have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /payments/{id}:
    get:
      tags:
        - Payments
      summary: Get record by payment ID
      description: Retrieve a payment by its unique identifier.
      operationId: getPaymentById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Successfully created a payment item
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      uuid:
                        type: string
                        nullable: true
                      transaction_id:
                        type: string
                        description: The unique transaction ID.
                      amount:
                        type: string
                      vh_st_payment_method_id:
                        type: integer
                      payment_method:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          slug:
                            type: string
                      taxonomy_id_payment_status:
                        type: integer
                      status:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          slug:
                            type: string
                      status_notes:
                        type: string
                        description: Notes regarding payment status.
                      date:
                        type: string
                        format: date-time
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
                        nullable: true
                      created_by:
                        type: integer
                        nullable: true
                      created_by_user:
                        type: object
                        nullable: true
                      updated_by:
                        type: integer
                        nullable: true
                      updated_by_user:
                        type: object
                        nullable: true
                      deleted_by:
                        type: integer
                        nullable: true
                      deleted_by_user:
                        type: object
                        nullable: true
                      order_payments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            uuid:
                              type: string
                              nullable: true
                            vh_st_payment_id:
                              type: integer
                            vh_st_order_id:
                              type: integer
                            taxonomy_id_order_payment_status:
                              type: integer
                            payable_amount:
                              type: string
                            payment_amount:
                              type: string
                            remaining_payable_amount:
                              type: string
                            date:
                              type: string
                              format: date-time
                              nullable: true
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                              nullable: true
                            taxonomy_order_payment_status:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                slug:
                                  type: string
                            order:
                              type: object
                              properties:
                                id:
                                  type: integer
                                uuid:
                                  type: string
                                vh_user_id:
                                  type: integer
                                order_status:
                                  type: string
                                amount:
                                  type: number
                                payable:
                                  type: number
                                paid:
                                  type: number
                                is_paid:
                                  type: integer
                                is_active:
                                  type: integer
                                created_at:
                                  type: string
                                  format: date-time
                                updated_at:
                                  type: string
                                  format: date-time
                                user:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                    first_name:
                                      type: string
                                    email:
                                      type: string
                                    phone:
                                      type: string
                                    display_name:
                                      type: string
                                    avatar:
                                      type: string
                                    name:
                                      type: string
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Payments
      summary: Update an existing record
      description: Update a payment notes with the specified ID using the provided details.
      operationId: updatePaymentById
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
                  description: Notes related to the status of the payment.
                  maxLength: 100
              required:
                - notes
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Payment'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Payments
      summary: Delete a record by ID
      description: Delete a single payment by its ID.
      operationId: deletePaymentById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Payment Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /payments/{id}/action/{action}:
    patch:
      tags:
        - Payments
      summary: Perform an action on a payment
      description: |
        This endpoint allows you to perform various actions on a payment item, such as activating, deactivating, trashing, or restoring a payment.
      operationId: itemActiOnOrder
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /payments/action/{action}:
    put:
      tags:
        - Payments
      summary: bulk actions on orders
      description: This endpoint allows various bulk actions to be performed on orders list based on the provided action type.
      operationId: bulkActionsVendorProducts
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /payments/search/orders:
    post:
      tags:
        - Payments
      summary: Search active orders with unpaid balances.
      operationId: searchOrders
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: The search query to filter orders based on the user's display name, first name, or email.
          required: false
      responses:
        '200':
          description: A list of orders matching the search criteria.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the search was successful.
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The order ID.
                        amount:
                          type: number
                          format: float
                          description: The total amount of the order.
                        paid:
                          type: number
                          format: float
                          description: The amount already paid for the order.
                        payable_amount:
                          type: number
                          format: float
                          description: The remaining amount to be paid for the order.
                        user_name:
                          type: string
                          description: The display name of the user who placed the order.
                        vh_user_id:
                          type: integer
                          description: The user ID which the order belongs to.
                        created_at:
                          type: string
                          format: date-time
                          description: The date and time the order was created.
                        updated_at:
                          type: string
                          format: date-time
                          description: The date and time the order was last updated.
  /productattributes:
    get:
      tags:
        - Product Attributes
      summary: Get list of product attributes
      description: Retrieve list of all the product attributes.
      operationId: getProductAttributesList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductAttribute'
                  first_page_url:
                    type: string
                    example: http://127.0.0.1:8000/backend/store/productattributes?page=1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Product Attributes
      summary: Create a new product attribute.
      operationId: createProductAttribute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vh_st_product_variation_id:
                  type: integer
                  description: The ID of the product variation.
                vh_st_attribute_id:
                  type: integer
                  description: The ID of the attribute.
                attribute_values:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the attribute value.
                      new_value:
                        type: string
                        description: The new attribute value.
                        maxLength: 100
                      default_value:
                        type: string
                        description: The default attribute value.
                    required:
                      - id
                      - new_value
                      - default_value
              required:
                - vh_st_product_variation_id
                - vh_st_attribute_id
      responses:
        '200':
          description: Successfully created a product attribute.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the operation was successful.
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductAttribute'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the operation was successful.
                  errors:
                    type: array
                    items:
                      type: string
                    description: A list of validation error messages.
                    example:
                      - The Product Variation field is required
                      - The Attribute field is required
                      - The Attribute Value field should not exceed 100 characters
    put:
      tags:
        - Product Attributes
      summary: Update list of payments
      description: This endpoint allows you to update multiple payments records based on the provided input, including actions like activating, deactivating, trashing, or restoring payments.
      operationId: updatePaymentsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the payments to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified payments have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Product Attributes
      summary: Delete list of product attributes
      description: This endpoint allows you to delete multiple product attribute records based on the provided input.
      operationId: deleteProductAttributesList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the payments to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified payments have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    basicAuth:
      type: http
      scheme: basic
  parameters:
    id:
      name: id
      description: The unique identifier of the item
      in: path
      required: true
    action:
      name: action
      in: path
      required: true
      description: The action to perform on the item (activate, deactivate, trash, restore)
      schema:
        type: string
        items:
          example:
            - activate
            - deactivate
            - trash
            - restore
    bulk_action:
      name: action
      in: path
      required: true
      description: The action to perform (e.g., activate-all, deactivate-all, trash-all, restore-all, delete-all).
      schema:
        type: string
        items:
          example:
            - activate-all
            - deactivate-all
            - trash-all
            - restore-all
    limit:
      name: limit
      in: query
      description: The number of items to return
      required: false
      schema:
        type: integer
        format: int64
        default: 10
    offset:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result set
      required: false
      schema:
        type: integer
        format: int64
        default: 0
    page:
      name: page
      in: query
      required: false
      description: The page number to retrieve.
      schema:
        type: integer
        example: 1
    rows:
      name: rows
      in: query
      required: false
      description: Number of rows per page.
      schema:
        type: integer
      example: 20
    filter_q:
      name: filter[q]
      in: query
      required: false
      description: Search by name, slug, or id.
      schema:
        type: string
    filter_is_active:
      name: filter[is_active]
      in: query
      required: false
      schema:
        type: boolean
    filter_trashed:
      name: filter[trashed]
      in: query
      required: false
      description: Include, exclude, or only show trashed.
      schema:
        type: string
        enum:
          - include
          - exclude
          - only
    filter_date:
      name: filter[date][]
      in: query
      required: false
      description: Filter by date range.
      schema:
        type: array
        items:
          type: string
          format: date
      example:
        - '2024-09-03'
        - '2024-09-11'
    min_price:
      name: filter[min_price]
      in: query
      required: false
      description: Minimum price.
      schema:
        type: number
        format: float
      example: 10.5
    max_price:
      name: filter[max_price]
      in: query
      required: false
      description: Maximum price.
      schema:
        type: number
        format: float
      example: 100
    category:
      name: filter[category][]
      in: query
      required: false
      description: Filter by category slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - category-1
        - category-2
    product_variations:
      name: filter[product_variations][]
      in: query
      required: false
      description: Filter by product variation slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - variation-1
        - variation-2
    min_quantity:
      name: filter[min_quantity]
      in: query
      required: false
      description: Minimum quantity.
      schema:
        type: integer
      example: 5
    max_quantity:
      name: filter[max_quantity]
      in: query
      required: false
      description: Maximum quantity.
      schema:
        type: integer
      example: 50
    vendors:
      name: filter[vendors][]
      in: query
      required: false
      description: Filter by vendor slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - vendor-1
        - vendor-2
    stores:
      name: filter[stores][]
      in: query
      required: false
      description: Filter by store slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - store-1
        - store-2
    status:
      name: filter[status][]
      in: query
      required: false
      description: Filter by status slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - pending
        - approved
    products:
      name: filter[products][]
      in: query
      required: false
      description: Filter by associated products slug.
      schema:
        type: array
        items:
          type: string
        example:
          - product-1
          - product-2
    warehouses:
      name: filter[warehouses][]
      in: query
      required: false
      description: Filter by warehouse slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - warehouses-1
  requestBodies:
    StoreRequestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - taxonomy_id_store_status
              - slug
              - is_multi_currency
              - is_multi_lingual
              - is_multi_vendor
              - allowed_ips
              - is_default
              - is_active
            properties:
              name:
                type: string
                description: The name of the store.
                example: My Store
              taxonomy_id_store_status:
                type: integer
                description: The taxonomy ID representing the store's status.
                example: 1
              slug:
                type: string
                description: A URL-friendly version of the store name.
                example: my-store
              notes:
                type: string
                description: Optional notes about the store.
                nullable: true
                example: Optional notes about the store
              is_multi_currency:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if the store supports multiple currencies.
                example: 1
              is_multi_lingual:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if the store supports multiple languages.
                example: 0
              is_multi_vendor:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if the store supports multiple vendors.
                example: 1
              allowed_ips:
                type: array
                items:
                  type: string
                  format: ipv4
                description: List of allowed IP addresses.
                example:
                  - 192.168.1.1
                  - 192.168.1.2
              status_notes:
                type: string
                description: Notes regarding the store's status.
                nullable: true
                example: Store is in review
              is_default:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if this is the default store.
                example: 0
              is_active:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if the store is active.
                example: 1
    ProductVariationRequestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the product variation.
              slug:
                type: string
                description: Slug for the product variation.
              price:
                type: number
                example: 59545
                description: Price of the product variation.
              taxonomy_id_variation_status:
                type: integer
                description: Taxonomy ID for the variation's status.
              vh_st_product_id:
                type: integer
                description: Product ID for the variation belongs to.
              sku:
                type: string
                example: Rerum sed ut eum aut.
                description: Stock Keeping Unit (SKU) of the product variation.
              product:
                type: object
                properties:
                  id:
                    type: integer
                    required: true
                  uuid:
                    type: string
                description: Product information to which the variation belongs.
              is_active:
                type: integer
                example: 1
                description: Whether the product variation is active.
              is_default:
                type: integer
                example: 0
                description: Flag indicating if the product variation is the default.
              description:
                type: string
                description: Description of the product variation.
              meta_title:
                type: string
                description: Meta title for SEO purposes.
              meta_description:
                type: string
                description: Meta description for SEO purposes.
              meta_keywords:
                type: array
                items:
                  type: string
                description: Meta keywords for SEO purposes.
              status_notes:
                type: string
                description: Notes related to the status.
              has_media:
                type: boolean
                example: false
                description: Flag indicating if the variation has associated media.
            required:
              - name
              - slug
              - price
              - sku
              - taxonomy_id_variation_status
              - vh_st_product_id
              - is_active
              - is_default
              - product
    ProductVendorRequestBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - vh_st_product_id
              - vh_st_vendor_id
              - added_by
              - can_update
              - product
              - vendor
              - taxonomy_id_product_vendor_status
              - store_vendor_product
            properties:
              vh_st_product_id:
                type: integer
                description: ID of the product being associated with the vendor.
              vh_st_vendor_id:
                type: integer
                description: ID of the vendor being associated with the product.
              added_by:
                type: integer
                description: ID of the user responsible for attaching the product to the vendor.
              can_update:
                type: integer
                example: 0
                description: Indicates whether the product can be updated by the user. A value of `0` means the product cannot be updated, while `1` means it can.
              is_active:
                type: integer
                example: 1
                description: Flag indicating if the product is active. A value of `1` means active, `0` means inactive.
              product:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    description: Unique identifier of the product.
                  name:
                    type: string
                    description: Name of the product.
                  vh_st_store_id:
                    type: integer
                    description: ID of the store associated with the product.
              vendor:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    description: Unique identifier of the vendor.
                  name:
                    type: string
                    description: Name of the vendor.
              store_vendor_product:
                type: array
                items:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: integer
                      description: ID of the store to which the product is linked.
              taxonomy_id_product_vendor_status:
                type: integer
                description: ID representing the product vendor status based on the taxonomy.
              status_notes:
                type: string
                description: Notes related to the status of the product-vendor relationship.
    ProductVendorUpdateRequestBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - id
              - vh_st_product_id
              - vh_st_vendor_id
              - added_by
              - can_update
              - product
              - vendor
              - taxonomy_id_product_vendor_status
              - store_vendor_product
            properties:
              id:
                type: string
                description: Unique identifier for the product vendor
              vh_st_product_id:
                type: integer
                description: ID of the product being associated with the vendor.
              vh_st_vendor_id:
                type: integer
                description: ID of the vendor being associated with the product.
              added_by:
                type: integer
                description: ID of the user responsible for attaching the product to the vendor.
              can_update:
                type: integer
                example: 0
                description: Indicates whether the product can be updated by the user. A value of `0` means the product cannot be updated, while `1` means it can.
              is_active:
                type: integer
                example: 1
                description: Flag indicating if the product is active. A value of `1` means active, `0` means inactive.
              product:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    description: Unique identifier of the product.
                  name:
                    type: string
                    description: Name of the product.
                  vh_st_store_id:
                    type: integer
                    description: ID of the store associated with the product.
              vendor:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    description: Unique identifier of the vendor.
                  name:
                    type: string
                    description: Name of the vendor.
              store_vendor_product:
                type: array
                items:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: integer
                      description: ID of the store to which the product is linked.
              taxonomy_id_product_vendor_status:
                type: integer
                description: ID representing the product vendor status based on the taxonomy.
              status_notes:
                type: string
                description: Notes related to the status of the product-vendor relationship.
    ProductStocksRequestBody:
      description: Request body for creating a new product stock
      content:
        application/json:
          schema:
            type: object
            required:
              - vh_st_vendor_id
              - vh_st_product_id
              - vh_st_product_variation_id
              - vh_st_warehouse_id
              - taxonomy_id_product_stock_status
              - is_active
              - quantity
            properties:
              vh_st_vendor_id:
                type: integer
                description: Unique identifier for the vendor
                example: 1
              vh_st_product_id:
                type: integer
                description: Unique identifier for the product
                example: 1
              vh_st_product_variation_id:
                type: integer
                description: Unique identifier for the product variation
                example: 1
              vh_st_warehouse_id:
                type: integer
                description: Unique identifier for the warehouse
              taxonomy_id_product_stock_status:
                type: integer
                description: Taxonomy status id for the product stocks
              quantity:
                type: integer
                description: Quantity of the product in stock
                example: 100
              is_active:
                type: integer
                description: Indicates if the product stock is active (default is true)
                example: 1
              status_notes:
                type: string
                description: Additional notes for the product stock
                example: Initial stock addition
  schemas:
    Credentials:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          examples:
            - we@webreinvent.com
        password:
          type: string
          examples:
            - webreinvent
    Token:
      type: object
      properties:
        token:
          type: string
          examples:
            - eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    Store:
      type: object
      required:
        - id
        - name
        - taxonomy_id_store_status
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Store Name
        slug:
          type: string
          example: store-name
        is_multi_currency:
          type: boolean
          example: 1
        is_multi_vendor:
          type: boolean
          example: 1
        is_multi_lingual:
          type: boolean
          example: 1
        allowed_ips:
          type: array
          items:
            type: string
            format: ipv4
            example: 192.168.1.1
        status:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        status_notes:
          type: string
          example: Store status notes
        created_at:
          type: string
          format: date-time
    Product:
      type: object
      required:
        - id
        - name
        - store
      properties:
        id:
          type: integer
          format: int64
          example: 1
        uuid:
          type: string
          example: 8952d982-4aca-462e-8e90-2f8340a22582
        name:
          type: string
          example: My Product
        store:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        available_at:
          type: string
          format: date-time
          example: '2024-10-23T00:00:00Z'
        brand:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Nike
        product_categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 213
              name:
                type: string
                example: Electronics
        product_price_range:
          type: object
          properties:
            price_range:
              type: array
              items:
                type: number
              example:
                - 0
                - 1
            quantity:
              type: integer
              example: 7
            selected_vendor:
              type: object
              example:
                vendor data: null
        status:
          type: object
          properties:
            id:
              type: integer
              example: 17
            name:
              type: string
              example: Approved
        updated_at:
          type: string
          format: date-time
          example: '2024-09-17T10:45:06Z'
    Vendor:
      type: object
      required:
        - id
        - name
        - slug
        - is_default
        - owned_by
        - approved_by
        - taxonomy_id_vendor_status
        - vh_st_store_id
        - store
      properties:
        id:
          type: integer
          format: int64
          example: 1
        uuid:
          type: string
          example: 8952d982-4aca-462e-8e90-2f8340a22582
        name:
          type: string
        slug:
          type: string
        store:
          type: object
          properties:
            id:
              required: true
              type: integer
            name:
              type: string
        registered_at:
          type: string
          format: date-time
          example: '2024-09-27 13:21:21'
        approvedByUser:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Admin User
        ownedByUser:
          type: object
          properties:
            id:
              type: integer
              example: 2
            name:
              type: string
              example: Owner User
        vendorProducts:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 101
              name:
                type: string
                example: Sample Product
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 3
              name:
                type: string
                example: User Name
        email:
          type: string
          nullable: true
          example: null
        phone_number:
          type: string
          nullable: true
          example: null
        address:
          type: string
          nullable: true
          example: null
        is_active:
          type: integer
          nullable: true
          example: null
        deleted_at:
          type: string
          format: date-time
          nullable: true
          example: null
        deleted_by:
          type: integer
          nullable: true
          example: null
        business_document_detail:
          type: string
          nullable: true
          example: null
        business_document_file:
          type: string
          nullable: true
          example: null
        business_document_type:
          type: string
          nullable: true
          example: null
        auto_approve_products:
          type: boolean
          nullable: true
          example: null
        meta:
          type: object
          nullable: true
          example: null
        services_offered:
          type: string
          nullable: true
          example: null
        created_at:
          type: string
          format: date-time
          example: '2024-09-27T10:00:00Z'
        approved_at:
          type: string
          format: date-time
          example: '2024-09-27 13:21:21'
        updated_at:
          type: string
          format: date-time
          example: '2024-09-27 13:21:21'
    ProductVariation:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the product variation
        uuid:
          type: string
          description: UUID for the product variation
        vh_st_product_id:
          type: integer
          description: Product ID to which the variation belongs
        name:
          type: string
          description: Name of the product variation
        price:
          type: number
          description: Price of the product variation
          format: float
        sku:
          type: string
          description: Stock Keeping Unit for the product variation
        slug:
          type: string
          description: Slug identifier for the product variation
        quantity:
          type: integer
          description: Quantity of the product variation in stock
        in_stock:
          type: boolean
          description: Flag indicating whether the product variation is in stock
        is_active:
          type: boolean
          description: Indicates if the product variation is active
        is_default:
          type: boolean
          description: Indicates if this variation is the default variation
        is_mail_sent:
          type: boolean
          description: Flag to check if email is sent regarding this variation
        is_quantity_low:
          type: boolean
          description: Flag to check if the product variation quantity is low
        low_stock_at:
          type: string
          description: Timestamp when the stock became low
          format: date-time
        status:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier of the status
            name:
              type: string
              description: Status name
            slug:
              type: string
              description: Slug identifier for the status
        status_notes:
          type: string
          description: Notes related to the status
          nullable: true
        taxonomy_id_variation_status:
          type: integer
          description: Taxonomy ID for the variation's status
        description:
          type: string
          description: Description of the product variation
          nullable: true
        meta:
          type: object
          description: Meta information for the product variation
          nullable: true
        meta_title:
          type: string
          description: Meta title for SEO purposes
          nullable: true
        meta_description:
          type: string
          description: Meta description for SEO purposes
          nullable: true
        meta_keywords:
          type: string
          description: Meta keywords for SEO purposes
          nullable: true
        has_media:
          type: boolean
          description: Flag indicating whether the variation has associated media
          nullable: true
        product:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the product
            name:
              type: string
              description: Product name
            slug:
              type: string
              description: Slug identifier for the product
            deleted_at:
              type: string
              description: Timestamp when the product was deleted
              nullable: true
              format: date-time
        created_at:
          type: string
          description: Timestamp when the variation was created
          format: date-time
        updated_at:
          type: string
          description: Timestamp when the variation was last updated
          format: date-time
        created_by:
          type: integer
          description: User ID of the creator of the variation
        updated_by:
          type: integer
          description: User ID who last updated the variation
        deleted_at:
          type: string
          description: Timestamp when the variation was deleted
          nullable: true
          format: date-time
        deleted_by:
          type: integer
          description: User ID who deleted the variation
          nullable: true
    ProductVendor:
      type: object
      properties:
        id:
          type: integer
        uuid:
          type: string
        vh_st_vendor_id:
          type: integer
        vh_st_product_id:
          type: integer
        added_by:
          type: string
          nullable: true
        added_by_user:
          type: string
          nullable: true
        can_update:
          type: integer
        created_at:
          type: string
          format: date-time
        created_by:
          type: string
          nullable: true
        deleted_at:
          type: string
          nullable: true
        deleted_by:
          type: string
          nullable: true
        is_active:
          type: integer
        meta:
          type: object
          nullable: true
        product:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            slug:
              type: string
            deleted_at:
              type: string
              nullable: true
            product_variations_for_vendor_product:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  uuid:
                    type: string
                  vh_st_product_id:
                    type: integer
        product_price_range:
          type: array
          items:
            type: integer
        status:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            slug:
              type: string
        status_notes:
          type: string
          nullable: true
        taxonomy_id_product_vendor_status:
          type: integer
        updated_at:
          type: string
          format: date-time
        updated_by:
          type: string
          nullable: true
        vendor:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            slug:
              type: string
            is_default:
              type: integer
            deleted_at:
              type: string
              nullable: true
    ProductStock:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the product stock
        uuid:
          type: string
          description: Unique identifier for the product stock instance
        vh_st_product_id:
          type: integer
          description: Unique identifier for the vendor product
        vh_st_product_variation_id:
          type: integer
          description: Unique identifier for the vendor product variation
        vh_st_vendor_id:
          type: integer
          description: Unique identifier for the vendor
        vh_st_warehouse_id:
          type: integer
          description: Unique identifier for the warehouse where the product stock is stored
        taxonomy_id_product_stock_status:
          type: integer
          description: Taxonomy ID for the product stock status
        quantity:
          type: integer
          description: Quantity of the product in stock
        is_active:
          type: integer
          description: Indicates if the product stock is active (1 for active, 0 for inactive)
        status_notes:
          type: string
          description: Additional notes regarding the status of the product stock
        status:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the stock status
            name:
              type: string
              description: Name of the stock status
            slug:
              type: string
              description: URL-friendly slug for the stock status
        meta:
          type: object
          description: Meta information about the product stock
          nullable: true
        vendor:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the vendor
            name:
              type: string
              description: Name of the vendor
            slug:
              type: string
              description: URL-friendly slug for the vendor
              nullable: true
        product:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the product
            name:
              type: string
              description: Name of the product
            slug:
              type: string
              description: URL-friendly slug for the product
            deleted_at:
              type: string
              format: date-time
              description: Timestamp when the product was deleted, if applicable
              nullable: true
        product_variation:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the product variation
            name:
              type: string
              description: Name of the product variation
            slug:
              type: string
              description: URL-friendly slug for the product variation
              nullable: true
            deleted_at:
              type: string
              format: date-time
              description: Timestamp when the product variation was deleted, if applicable
              nullable: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the product stock was last updated
        updated_by:
          type: integer
          description: ID of the user who last updated the product stock
        created_at:
          type: string
          format: date-time
          description: Timestamp when the product stock was created
        created_by:
          type: integer
          description: ID of the user who created the product stock
        deleted_at:
          type: string
          format: date-time
          description: Timestamp when the product stock was deleted, if applicable
          nullable: true
        deleted_by:
          type: integer
          description: ID of the user who deleted the product stock, if applicable
          nullable: true
      required:
        - id
        - quantity
        - product
        - product_variation
        - vendor
        - vh_st_product_id
        - vh_st_product_variation_id
        - vh_st_vendor_id
        - vh_st_warehouse_id
    Cart:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the cart
          example: 1
        uuid:
          type: string
          description: Unique UUID for the cart
          example: a1d88c58-70ed-48ea-9188-7e250fa3e815
        vh_user_id:
          type: integer
          description: Identifier of the user associated with the cart
          example: 121
        user:
          type: object
          description: Details of the user who owns the cart
          properties:
            id:
              type: integer
              description: Unique identifier for the user
              example: 121
            uuid:
              type: string
              description: Unique UUID for the user
            email:
              type: string
              description: User's email address
              example: shivam1@zieme.org
        created_at:
          type: string
          format: date-time
          description: The date and time when the cart was created
          example: '2024-10-01 16:32:56'
        updated_at:
          type: string
          format: date-time
          description: The date and time when the cart was last updated
          example: '2024-10-01 16:32:56'
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the cart was deleted (if applicable)
          example: null
        created_by:
          type: integer
          description: Identifier of the user who created the cart
          example: 1
        updated_by:
          type: integer
          description: Identifier of the user who last updated the cart
          example: 1
        deleted_by:
          type: integer
          nullable: true
          description: Identifier of the user who deleted the cart (if applicable)
          example: null
      required:
        - id
        - vh_user_id
        - user
    Order:
      type: object
      properties:
        id:
          type: integer
          example: 6
          description: The ID of the order.
        uuid:
          type: string
          example: b067e5fa-bfbc-4e91-beb2-ca0b1000cd53
          description: A unique identifier for the order.
        vh_user_id:
          type: integer
          example: 121
          description: The ID of the user associated with the order.
        order_status:
          type: string
          example: Placed
          description: The current status of the order.
        taxonomy_id_payment_status:
          type: integer
          description: The id of the order payment status.
        order_shipment_status:
          type: string
          example: Pending
          description: The current shipment status of the order.
        amount:
          type: number
          format: float
          example: 25
          description: The total amount for the order.
        delivery_fee:
          type: number
          format: float
          example: 0
          description: The delivery fee associated with the order.
        taxes:
          type: number
          format: float
          example: 0
          description: The total taxes applied to the order.
        discount:
          type: number
          format: float
          example: 0
          description: The total discount applied to the order.
        payable:
          type: number
          format: float
          example: 25
          description: The total amount that needs to be paid for the order.
        paid:
          type: number
          format: float
          example: 0
          description: The amount that has been paid for the order.
        is_paid:
          type: integer
          nullable: true
          example: 1
          description: Indicates if the order has been paid for.
        is_active:
          type: integer
          example: 1
          description: Indicates if the order is currently active.
        items_count:
          type: integer
          example: 2
          description: The total number of items in the order.
        payment_method:
          type: string
          nullable: true
          example: null
          description: The payment method used for the order.
        order_payment_status:
          type: object
          properties:
            id:
              type: integer
              example: 64
              description: The ID of the payment status.
            name:
              type: string
              example: Pending
              description: The name of the payment status.
            slug:
              type: string
              example: pending
              description: A URL-friendly version of the payment status name.
        status:
          type: string
          nullable: true
          example: null
          description: Additional status information for the order.
        status_notes:
          type: string
          nullable: true
          example: null
          description: Any notes related to the status of the order.
        user:
          type: object
          properties:
            id:
              type: integer
              example: 121
              description: The ID of the user.
            first_name:
              type: string
              example: Olin
              description: The first name of the user.
            email:
              type: string
              example: shivam1@zieme.org
              description: The email address of the user.
            phone:
              type: string
              example: '2509077310'
              description: The phone number of the user.
            display_name:
              type: string
              example: shivam
              description: The display name of the user.
        meta:
          type: object
          nullable: true
          description: Additional metadata related to the order.
        created_at:
          type: string
          format: date-time
          example: '2024-10-03T08:05:52Z'
          description: The date and time when the order was created.
        created_by:
          type: integer
          example: 1
          description: The ID of the user who created the order.
        updated_at:
          type: string
          format: date-time
          example: '2024-10-03T08:05:52Z'
          description: The date and time when the order was last updated.
        updated_by:
          type: integer
          example: 1
          description: The ID of the user who last updated the order.
    Payment:
      type: object
      properties:
        id:
          type: integer
        uuid:
          type: string
          description: Unique identifier for the payment.
        vh_st_payment_method_id:
          type: integer
          description: The ID of the payment method used.
        amount:
          type: string
          description: Total payment amount.
        transaction_id:
          type: string
          description: Unique transaction identifier.
        created_at:
          type: string
          format: date-time
          description: Date and time the payment was created.
        updated_at:
          type: string
          format: date-time
          description: Date and time the payment was last updated.
        status:
          type: object
          description: Status details of the payment.
          properties:
            id:
              type: integer
            name:
              type: string
              description: Status name of the payment.
            slug:
              type: string
              description: Slug of the payment status.
        payment_method:
          type: object
          description: Payment method details.
          properties:
            id:
              type: integer
            name:
              type: string
              description: Name of the payment method.
            slug:
              type: string
              description: Slug of the payment method.
        status_notes:
          type: string
          description: Notes regarding the payment status.
        orders_count:
          type: integer
          description: The number of orders associated with the payment.
        meta:
          type: object
          description: Additional metadata for the payment.
        is_active:
          type: boolean
          description: Whether the payment is active.
          nullable: true
        notes:
          type: string
          description: Additional notes regarding the payment.
          nullable: true
        payment_gate_status:
          type: string
          description: The status of the payment gateway.
          nullable: true
        payment_gate_response:
          type: string
          description: The response from the payment gateway.
          nullable: true
        deleted_at:
          type: string
          format: date-time
          description: The date and time the payment was deleted.
          nullable: true
        created_by:
          type: integer
          description: ID of the user who created the payment.
          nullable: true
        updated_by:
          type: integer
          description: ID of the user who last updated the payment.
          nullable: true
        deleted_by:
          type: integer
          description: ID of the user who deleted the payment.
          nullable: true
        date:
          type: string
          format: date-time
          description: The date the payment was processed.
    ProductAttribute:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the product attribute.
        uuid:
          type: string
          description: The unique UUID for the product attribute.
        vh_st_attribute_id:
          type: integer
          description: The associated attribute ID.
        vh_st_variation_id:
          type: integer
          description: The associated product variation ID.
        name:
          type: string
          description: Name of the product attribute.
        type:
          type: string
          description: Type or category of the product attribute.
        created_at:
          type: string
          format: date-time
          description: Date and time when the attribute was created.
        created_by:
          type: integer
          description: ID of the user who created the attribute.
        updated_at:
          type: string
          format: date-time
          description: Date and time when the attribute was last updated.
        updated_by:
          type: integer
          description: ID of the user who last updated the attribute.
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time when the attribute was deleted, if applicable.
        deleted_by:
          type: integer
          nullable: true
          description: ID of the user who deleted the attribute, if applicable.
        product_variation:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the product variation.
            name:
              type: string
              description: Name of the product variation.
            is_default:
              type: integer
              description: Whether this is the default variation (0 = no, 1 = yes).
            deleted_at:
              type: string
              format: date-time
              nullable: true
              description: Date and time when the variation was deleted, if applicable.
        attribute:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the attribute.
            name:
              type: string
              description: Name of the attribute.
            type:
              type: string
              description: type of the attribute.
            deleted_at:
              type: string
              format: date-time
              nullable: true
              description: Date and time when the attribute was deleted, if applicable.

openapi: 3.0.0
info:
  title: VaahStore
  description: |
    VaahStore is an e-commerce module that provides an API specification for user authentication and store management.
        To get started, [sign up here](#tag/Authentication/POST/user/signup).
  version: 1.0.0
  contact:
    name: Webreinvent Team
    url: https://webreinvent.com/
    email: we@webreinvent.com
servers:
  - url: http://127.0.0.1:8000/api/store
security:
  - bearerAuth: []
  - basicAuth: []
tags:
  - name: Stores
    description: Everything about Stores
  - name: Products
    description: Everything about Products in VaahStore
  - name: Vendors
    description: Everything about Vendors in VaahStore
  - name: Product Variations
    description: Everything about Product Variations in VaahStore
paths:
  /stores:
    get:
      tags:
        - Stores
      summary: Get list of all stores
      description: |
        This endpoint retrieves a list of stores with optional pagination and filtering.
        You can filter the results using various parameters.
      operationId: getStores
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
      responses:
        '200':
          description: List of stores retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Store'
                  first_page_url:
                    type: string
                    example: http://127.0.0.1:8000/api/store/stores?page=1
    post:
      tags:
        - Stores
      summary: Create a new Store
      description: Create a new store with the provided details.
      operationId: createStore
      requestBody:
        $ref: '#/components/requestBodies/StoreRequestBody'
      responses:
        '201':
          description: Store Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Stores
      summary: Update a list of stores
      description: This endpoint allows you to update multiple store records based on the provided input, including actions like activating, deactivating, trashing, or restoring stores.
      operationId: updateStoreList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the store to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified stores have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified store IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Store not found.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Stores
      summary: Delete a list of stores
      description: This endpoint allows you to delete multiple store records based on the provided input.
      operationId: deleteStoreList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the store to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified stores have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified store IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Store not found.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /stores/{id}/action/{action}:
    patch:
      tags:
        - Stores
      summary: Perform an action on a store
      description: |
        This endpoint allows you to perform various actions on a store item, such as activating, deactivating, trashing, or restoring a store.
      operationId: itemAction
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Store'
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Store Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Store not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /stores/{id}:
    get:
      tags:
        - Stores
      summary: Get a Store by ID
      description: Retrieve a single store by its ID.
      operationId: getStoreById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the store to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Store Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
        '404':
          description: Store Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Stores
      summary: Update an existing Store
      description: Update a store with the specified ID using the provided details.
      operationId: updateStore
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - taxonomy_id_store_status
                - slug
                - is_multi_currency
                - is_multi_lingual
                - is_multi_vendor
                - allowed_ips
                - is_default
                - is_active
              properties:
                name:
                  type: string
                  example: Updated Store Name
                taxonomy_id_store_status:
                  type: integer
                  example: 1
                slug:
                  type: string
                  example: updated-store
                notes:
                  type: string
                  nullable: true
                  example: Updated notes about the store
                is_multi_currency:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 1
                is_multi_lingual:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 0
                is_multi_vendor:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 1
                allowed_ips:
                  type: array
                  items:
                    type: string
                    format: ipv4
                    example: 192.168.1.2
                status_notes:
                  type: string
                  nullable: true
                  example: Store is now active
                is_default:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 0
                is_active:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 1
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Store'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: Store Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Stores
      summary: Delete a Store by ID
      description: Delete a single store by its ID.
      operationId: deleteStoreById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the store to delete
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Store Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '404':
          description: Store Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /stores/action/{action}:
    put:
      tags:
        - Stores
      summary: Perform bulk actions on stores
      description: This endpoint allows various bulk actions to be performed on stores based on the provided action type.
      operationId: performStoreAction
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '404':
          description: Store Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Store not found.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /products:
    get:
      tags:
        - Products
      summary: Get List of all products
      description: Retrieve a list of products.
      operationId: getProductList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/min_price'
        - $ref: '#/components/parameters/max_price'
        - $ref: '#/components/parameters/category'
        - $ref: '#/components/parameters/product_variations'
        - $ref: '#/components/parameters/stores'
        - $ref: '#/components/parameters/vendors'
        - $ref: '#/components/parameters/min_quantity'
        - $ref: '#/components/parameters/max_quantity'
      responses:
        '200':
          description: Products Retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  first_page_url:
                    type: string
                    example: http://127.0.0.1:8000/backend/store/products?page=1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Products
      summary: Create a new product
      description: Adds a new product to the store.
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My Product
                  description: Name of the product.
                slug:
                  type: string
                  example: my-product
                  description: URL-friendly identifier for the product.
                vh_st_store_id:
                  type: integer
                  example: 1
                  description: ID of the store the product belongs to.
                taxonomy_id_product_type:
                  type: integer
                  example: 1
                  description: Product Type Id from the taxonomies.
                taxonomy_id_product_status:
                  type: integer
                  example: 1
                  description: Status Id of the product.
                summary:
                  type: string
                  example: My Product Summary
                  description: A brief summary of the product.
                details:
                  type: string
                  example: My Product Details
                  description: Detailed information about the product.
                seo_meta_keyword:
                  type: array
                  items:
                    type: string
                  description: SEO keywords for the product.
                  example:
                    - buy products
                    - example
                available_at:
                  type: string
                  format: date
                  example: '2024-10-10'
                  description: Date when the product will be available.
                launch_at:
                  type: string
                  format: date
                  example: '2025-04-18'
                  description: Date when the product will be launched.
                categories:
                  type: object
                  description: Categories associated with the product, where keys are category IDs and values are booleans indicating selection.
                  additionalProperties:
                    type: boolean
                  example:
                    '213': true
                    '214': true
                    '223': true
                is_active:
                  type: integer
                  example: 1
                  description: Indicates if the product is active (1) or not (0).
                is_featured_on_home_page:
                  type: boolean
                  example: 1
                  description: Indicates if the product is featured on the home page (1) or not (0).
                is_featured_on_category_page:
                  type: boolean
                  example: 1
                  description: Indicates if the product is featured on the category page (1) or not (0).
                status_notes:
                  type: string
                  example: Example status notes
                  description: Notes about the product's status.
                meta:
                  type: object
                  nullable: true
                  example: null
                  description: Meta information for the product.
              required:
                - name
                - slug
                - vh_st_store_id
                - taxonomy_id_product_type
                - taxonomy_id_product_status
      responses:
        '200':
          description: Product Created Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    $ref: '#/components/schemas/Product'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    description: List of validation error messages.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Products
      summary: Delete a list of products
      description: This endpoint allows you to delete multiple product records based on the provided input.
      operationId: deleteProductList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified products have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified product IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Product not found.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    ../vaahstore.yamlput:
      tags:
        - Products
      summary: Update a list of products
      description: This endpoint allows you to update multiple product records based on the provided input, including actions like activating, deactivating, trashing, or restoring products.
      operationId: updateProductList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified stores have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified product IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Prdouct not found.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /products/{id}:
    get:
      tags:
        - Products
      summary: Get Product by ID
      description: Retrieve a product by its unique identifier.
      operationId: getProductById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product Not Found
          content:
            application/json:
              schema: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Products
      summary: Update an existing Product
      description: Update a product with the specified ID using the provided details.
      operationId: updateProduct
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My Product
                  description: Name of the product.
                slug:
                  type: string
                  example: my-product
                  description: URL-friendly identifier for the product.
                vh_st_store_id:
                  type: integer
                  example: 1
                  description: ID of the store the product belongs to.
                taxonomy_id_product_type:
                  type: integer
                  example: 1
                  description: Product Type Id from the taxonomies.
                taxonomy_id_product_status:
                  type: integer
                  example: 1
                  description: Status Id of the product.
                summary:
                  type: string
                  example: My Product Summary
                  description: A brief summary of the product.
                details:
                  type: string
                  example: My Product Details
                  description: Detailed information about the product.
                seo_meta_keyword:
                  type: array
                  items:
                    type: string
                  description: SEO keywords for the product.
                  example:
                    - buy products
                    - example
                available_at:
                  type: string
                  format: date
                  example: '2024-10-10'
                  description: Date when the product will be available.
                launch_at:
                  type: string
                  format: date
                  example: '2025-04-18'
                  description: Date when the product will be launched.
                categories:
                  type: object
                  description: Categories associated with the product, where keys are category IDs and values are booleans indicating selection.
                  additionalProperties:
                    type: boolean
                  example:
                    '213': true
                    '214': true
                    '223': true
                is_active:
                  type: integer
                  example: 1
                  description: Indicates if the product is active (1) or not (0).
                is_featured_on_home_page:
                  type: boolean
                  example: 1
                  description: Indicates if the product is featured on the home page (1) or not (0).
                is_featured_on_category_page:
                  type: boolean
                  example: 1
                  description: Indicates if the product is featured on the category page (1) or not (0).
                status_notes:
                  type: string
                  example: Example status notes
                  description: Notes about the product's status.
                meta:
                  type: object
                  nullable: true
                  example: null
                  description: Meta information for the product.
              required:
                - name
                - slug
                - vh_st_store_id
                - taxonomy_id_product_type
                - taxonomy_id_product_status
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: Product Not Found
          content:
            application/json:
              schema: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Products
      summary: Delete a Product by ID
      description: Delete a single product by its ID.
      operationId: deleteProductById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordNotExist'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /products/{id}/action/{action}:
    patch:
      tags:
        - Products
      summary: Perform an action on a product
      description: |
        This endpoint allows you to perform various actions on a product item, such as activating, deactivating, trashing, or restoring a product.
      operationId: itemAction
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /products/action/{action}:
    put:
      tags:
        - Products
      summary: Perform bulk actions on products
      description: This endpoint allows various bulk actions to be performed on products based on the provided action type.
      operationId: performStoreAction
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '404':
          description: Product Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Product not found.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /products/vendor:
    post:
      tags:
        - Products
      summary: Attach Product with Vendors
      description: |
        This endpoint allows you to create or attach vendors to a specific product.
        By providing the product ID and vendor details, you can associate one or more vendors
        with a product. This operation also verifies if the vendor already exists for the given product
        and includes validation for required fields.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - vh_st_store_id
                - vendors
              properties:
                id:
                  type: integer
                  description: The ID of the product.
                  example: 1
                vh_st_store_id:
                  type: integer
                  description: The ID of the store to which this vendor associated.
                  example: 2
                vendors:
                  type: array
                  items:
                    type: object
                    required:
                      - vendor
                      - can_update
                    properties:
                      vendor:
                        type: object
                        required:
                          - id
                          - name
                        properties:
                          id:
                            type: integer
                            description: The ID of the vendor.
                            example: 3
                          name:
                            type: string
                            description: The name of the vendor.
                            example: Vendor Name
                      can_update:
                        type: boolean
                        description: Indicates if the vendor can update the product.
                        example: true
                      status:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: integer
                            description: The status ID of the vendor relationship.
                            example: 1
                      status_notes:
                        type: string
                        description: Optional notes about the vendor status.
                        example: Vendor approved.
      responses:
        '200':
          description: Vendors attached successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - saved successfully.
                  data:
                    type: object
                    description: The product data.
                    additionalProperties: true
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Vendor required
                      - Can Update required
                      - This Vendor {vendor_name} already exists.
        '401':
          description: Unauthorized, user does not have permission to create vendor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Permission denied.
  /products/get-vendors-list/{id}:
    get:
      tags:
        - Products
      summary: Get Vendors List for Product By Product ID
      description: |
        This endpoint retrieves a list of vendors associated with a specific product.
        It returns vendor details, including the quantity available and their price range.
        Additionally, it checks for any missing default vendors and includes them in the response.
      operationId: getVendorsListForProduct
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product for which to retrieve the vendors.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved the list of vendors.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 109
                        name:
                          type: string
                          example: Vendor 1
                        slug:
                          type: string
                          example: vendor-1
                        is_default:
                          type: integer
                          example: 1
                        quantity:
                          type: integer
                          example: 0
                        product_price_range:
                          type: array
                          items:
                            type: number
                          example: []
                        pivot_id:
                          type: integer
                          example: 79
                        is_preferred:
                          type: boolean
                          nullable: true
                          example: null
                  message:
                    type: boolean
                    example: false
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid product ID.
        '404':
          description: Product not found or no vendors associated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Product not found or no vendors associated.
  /products/{id}/action-for-vendor/{action}:
    patch:
      tags:
        - Products
      summary: Set Vendor as Preferred or Not Preferred
      description: |
        This endpoint allows you to mark a specific vendor for a product as preferred or not preferred.
        When setting a vendor as preferred, all other vendors for the same product will be marked as not preferred.
      operationId: vendorPreferredAction
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product vendor to update.
          schema:
            type: integer
            example: 1
        - name: action
          in: path
          required: true
          description: The action to perform.
          examples:
            preferred: Mark as preferred.
            notpreferred: Mark as not preferred.
          schema:
            type: string
            enum:
              - preferred
              - notpreferred
            example: preferred
      responses:
        '200':
          description: Successfully updated the vendor preference status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: string
                    example: Success
                  data:
                    type: object
                    description: The product data.
                    additionalProperties: true
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid request.
        '404':
          description: Product vendor not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Product vendor not found.
  /products/getAttributeList:
    post:
      tags:
        - Products
      summary: Get Attribute List
      description: |
        This endpoint retrieves a list of attributes or attribute groups based on the provided attribute type.
        It can return either a list of all attributes or the attributes from a specific attribute group.
      operationId: getAttributeList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attribute_type:
                  type: string
                  description: The type of attribute to retrieve. Can be "attribute" or "attribute_group".
                  example: attribute_group
                get_attribute_from_group:
                  type: boolean
                  description: Indicates whether to retrieve attributes from a specific group.
                  example: false
                product_id:
                  type: integer
                  description: The ID of the product related to the attributes.
                  example: 23
                selected_attribute:
                  type: object
                  nullable: true
                  description: The selected attribute for retrieving attributes from a group. Null if not applicable.
                  example: null
      responses:
        '200':
          description: Successful response with attribute list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The ID of the attribute or attribute group.
                          example: 1
                        name:
                          type: string
                          description: The name of the attribute or attribute group.
                          example: Color
                        type:
                          type: string
                          description: The type of the attribute (only applicable for attributes).
                          example: string
  /products/getAttributeValue:
    post:
      tags:
        - Products
      summary: Get Attribute Values
      description: |
        This endpoint retrieves attribute values for a specified product and attribute list.
        It generates variations if the method is set to "generate" or returns a structured list of attribute values otherwise.
      operationId: getAttributeValue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attribute:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: color
                      type:
                        type: string
                        example: branded
                method:
                  type: string
                  example: generate
                product_id:
                  type: integer
                  example: 23
              required:
                - attribute
                - product_id
      responses:
        '200':
          description: Successful retrieval of attribute values
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      all_attribute_name:
                        type: array
                        items:
                          type: string
                        example:
                          - Color
                      structured_variation:
                        type: array
                        items:
                          type: object
                          properties:
                            variation_name:
                              type: string
                              example: Sony-Blue
                            is_selected:
                              type: boolean
                              example: false
                            Color:
                              type: object
                              properties:
                                value:
                                  type: string
                                  example: Blue
                                vh_st_attribute_id:
                                  type: integer
                                  example: 1
                                id:
                                  type: integer
                                  example: 1
                example:
                  data:
                    structured_variation:
                      - variation_name: Sony-Blue
                        is_selected: false
                        Color:
                          value: Blue
                          vh_st_attribute_id: 1
                          id: 1
                    all_attribute_name:
                      - Color
  /products/variation:
    post:
      tags:
        - Products
      summary: Create Product Variation
      description: |
        This endpoint allows you to create variations for a specific product.
        Each variation can have different attributes and settings.
        If a variation with the same name already exists for the product, an error will be returned.
      operationId: createVariation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - all_variation
              properties:
                id:
                  type: integer
                  example: 23
                  description: The ID of the product for which the variation is being created.
                all_variation:
                  type: object
                  required:
                    - structured_variation
                    - all_attribute_name
                  properties:
                    structured_variation:
                      type: array
                      items:
                        type: object
                        properties:
                          variation_name:
                            type: string
                            example: attribute 1 - attribute value
                            description: The name of the variation, typically a combination of attributes and their values.
                          is_default:
                            type: boolean
                            example: 1
                            description: Indicates whether this variation is selected as default.
                          attribute 1:
                            description: This is the name of the attribute.
                            type: object
                            properties:
                              value:
                                type: string
                                example: attribute value
                              vh_st_attribute_id:
                                type: integer
                                example: 7
                              id:
                                type: integer
                                example: 16
                          attribute 2:
                            type: object
                            properties:
                              value:
                                type: string
                                example: attribute value
                              vh_st_attribute_id:
                                type: integer
                                example: 6
                              id:
                                type: integer
                                example: 15
                    all_attribute_name:
                      type: array
                      items:
                        type: string
                      example:
                        - attribute 1
                        - attribute 2
                      description: An array of names of all attributes associated with the variations.
      responses:
        '200':
          description: Variation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    description: Indicates if the operation was successful.
                  data:
                    type: object
                    $ref: '#/components/schemas/Product'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - saved successfully.
                    description: Message after successful creation.
        '400':
          description: Error in creating variation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                    description: Indicates if the operation failed.
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This Variation name 'Color - Blue' already exists.
                    description: A list of error messages detailing the issues encountered.
  /products/add/product-to-cart:
    post:
      tags:
        - Products
      summary: Add a product to the cart
      description: |
        This endpoint allows users to add a product to their cart. It requires user information and the product ID. If the product is out of stock or no user information is provided, an error message will be returned.
      operationId: addProductToCart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_info:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                product:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    product_price_range:
                      type: object
                      properties:
                        selected_vendor:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
      responses:
        '200':
          description: Product added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved successfully.
                  data:
                    type: object
                    properties:
                      example: Response data will include user information.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                      example: Please enter valid user.
        '404':
          description: Product Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                      example: This product is out of stock if no vendor is selected or quantity is zero. No product variation is default if there is no default variation for this product.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                      example: An error occurred while adding the product to the cart.
  /vendors:
    get:
      tags:
        - Vendors
      summary: Get List of all vendors
      operationId: getVendorsList
      parameters:
        - name: filter[q]
          in: query
          required: false
          description: Search query for vendor by name, slug, or id.
          schema:
            type: string
        - name: filter[is_active]
          in: query
          required: false
          schema:
            type: boolean
        - name: filter[trashed]
          in: query
          required: false
          description: Include or exclude trashed vendors.
          schema:
            type: string
            enum:
              - include
              - exclude
              - only
        - name: filter[date][]
          in: query
          required: false
          description: Filter vendors by date range (start and end dates).
          schema:
            type: array
            items:
              type: string
              format: date
        - name: filter[vendor_status][]
          in: query
          required: false
          description: Filter vendors by status.
          schema:
            type: array
            items:
              type: string
        - name: filter[store][]
          in: query
          required: false
          description: Filter vendors by associated store name.
          schema:
            type: array
            items:
              type: string
            example:
              - store1
              - store2
        - name: filter[product][]
          in: query
          required: false
          description: Filter vendors by associated products slug.
          schema:
            type: array
            items:
              type: string
            example:
              - product-1
              - product-2
        - name: rows
          in: query
          required: false
          description: Number of rows to return per page.
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: A list of vendors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
        '400':
          description: Bad request. Invalid filter parameters.
        '500':
          description: Internal server error.
    post:
      tags:
        - Vendors
      summary: Create a new vendor
      operationId: createVendors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My vendor
                  description: Name of the vendor.
                slug:
                  type: string
                  example: my-vendor
                  description: URL-friendly identifier for the vendor.
                vh_st_store_id:
                  type: integer
                  example: 1
                  description: ID of the store the vendor belongs to.
                is_default:
                  type: boolean
                  example: 1
                  description: Is vendor is default.
                approved_by:
                  type: integer
                  example: 1
                  description: Id of the user who gone to aprove.
                owned_by:
                  type: integer
                  example: 1
                  description: id of the vendor owner.
                taxonomy_id_vendor_status:
                  type: integer
                  example: 1
                  description: Status Id of the vendor.
                store:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: id of the store.
                    is_multi_vendor:
                      type: enum
                      required: true
                      example: 1
              required:
                - name
                - slug
                - vh_st_store_id
                - approved_by
                - owned_by
                - is_default
                - taxonomy_id_vendor_status
      responses:
        '200':
          description: Vendor Created Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Vendor'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    description: List of validation error messages.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Vendors
      summary: Delete a list of vendors
      description: This endpoint allows you to delete multiple vendor records based on the provided input.
      operationId: deleteVendorList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified Vendors have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified Vendor IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Vendors not found.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    put:
      tags:
        - Vendors
      summary: Update a list of vendors
      description: This endpoint allows you to update multiple vendor records based on the provided input, including actions like activating, deactivating, trashing, or restoring vendors.
      operationId: updateVendorList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the vendor to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified vendors have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified vendor IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Vendor not found.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /vendors/{id}:
    get:
      tags:
        - Vendors
      summary: Get vendor by ID
      description: Retrieve a vendor by its unique identifier.
      operationId: getVendorById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Vendor Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
        '404':
          description: Vendor Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Vendors
      summary: Update an existing vendor
      description: Update a vendor with the specified ID using the provided details.
      operationId: updateVendor
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My vendor
                  description: Name of the vendor.
                slug:
                  type: string
                  example: my-vendor
                  description: URL-friendly identifier for the vendor.
                vh_st_store_id:
                  type: integer
                  example: 1
                  description: ID of the store the vendor belongs to.
                is_default:
                  type: boolean
                  example: true
                  description: Indicates whether the vendor is the default vendor.
                approved_by:
                  type: integer
                  example: 1
                  description: ID of the user who approved the vendor.
                owned_by:
                  type: integer
                  example: 1
                  description: ID of the vendor owner.
                taxonomy_id_vendor_status:
                  type: integer
                  example: 1
                  description: Status ID of the vendor.
                store:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: ID of the store.
                    is_multi_vendor:
                      type: boolean
                      example: true
                      description: Indicates if the store supports multiple vendors.
              required:
                - name
                - slug
                - vh_st_store_id
                - approved_by
                - owned_by
                - is_default
                - taxonomy_id_vendor_status
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Vendor'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: Vendor Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Vendors
      summary: Delete a vendor by ID
      description: Delete a single vendor by its ID.
      operationId: deleteVendorById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Vendor Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Details of the deleted vendor (optional).
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Record has been deleted
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /vendors/{id}/action/{action}:
    patch:
      tags:
        - Vendors
      summary: Perform an action on a vendor
      description: |
        This endpoint allows you to perform various actions on a vendor item, such as activating, deactivating, trashing, or restoring a vendor.
      operationId: itemAction
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example:
                        - Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example:
                        - An error occurred
  /vendors/action/{action}:
    put:
      tags:
        - Vendors
      summary: Perform bulk actions on list of vendors
      description: This endpoint allows various bulk actions to be performed on vendors based on the provided action type.
      operationId: performVendorAction
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '404':
          description: Vendor Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Vendor not found.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /vendors/add/product:
    post:
      tags:
        - Vendors
      summary: Attach products with vendor
      description: This endpoint allows adding products to a specific vendor.
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - products
              properties:
                id:
                  type: integer
                  description: The ID of the vendor.
                  example: 6
                products:
                  type: array
                  items:
                    type: object
                    required:
                      - product
                      - can_update
                      - status
                    properties:
                      product:
                        type: object
                        required:
                          - id
                          - name
                          - vh_st_store_id
                        properties:
                          id:
                            type: integer
                            description: The ID of the product.
                            example: 3
                          name:
                            type: string
                            description: The name of the product.
                            example: Sony
                          is_default:
                            type: integer
                            description: Whether the product is the default (0 or 1).
                            example: 0
                          vh_st_store_id:
                            type: integer
                            description: The store ID associated with the product.
                            example: 1
                      can_update:
                        type: boolean
                        description: Determines if the product can be updated by the vendor.
                        example: false
                      status:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: integer
                            description: The status ID of the product.
                            example: 18
                      status_notes:
                        type: string
                        description: Optional notes about the status of the product.
                        example: Product is under review
      responses:
        '200':
          description: Product added successfully with vendor
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    $ref: '#/components/schemas/Vendor'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Product added successfully.
        '400':
          description: Bad Request. Validation failed or product already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - '''Sample Product'' already exists for this vendor.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An error occurred while adding the product.
  /vendors/add/user:
    post:
      tags:
        - Vendors
      summary: Attach products with vendor
      description: This endpoint allows adding products to a specific vendor.
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - products
              properties:
                id:
                  type: integer
                  description: The ID of the vendor.
                  example: 6
                products:
                  type: array
                  items:
                    type: object
                    required:
                      - product
                      - can_update
                      - status
                    properties:
                      product:
                        type: object
                        required:
                          - id
                          - name
                          - vh_st_store_id
                        properties:
                          id:
                            type: integer
                            description: The ID of the product.
                            example: 3
                          name:
                            type: string
                            description: The name of the product.
                            example: Sony
                          is_default:
                            type: integer
                            description: Whether the product is the default (0 or 1).
                            example: 0
                          vh_st_store_id:
                            type: integer
                            description: The store ID associated with the product.
                            example: 1
                      can_update:
                        type: boolean
                        description: Determines if the product can be updated by the vendor.
                        example: false
                      status:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: integer
                            description: The status ID of the product.
                            example: 18
                      status_notes:
                        type: string
                        description: Optional notes about the status of the product.
                        example: Product is under review
      responses:
        '200':
          description: Product added successfully with vendor
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    $ref: '#/components/schemas/Vendor'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Product added successfully.
        '400':
          description: Bad Request. Validation failed or product already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - '''Sample Product'' already exists for this vendor.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An error occurred while adding the product.
  /productvariations:
    get:
      tags:
        - Product Variations
      summary: Get List of all variations
      description: Retrieve a list of all the product variations.
      operationId: getProductVariationList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/min_quantity'
        - $ref: '#/components/parameters/max_quantity'
        - name: filter[products][]
          in: query
          required: false
          description: Filter by associated products slug.
          schema:
            type: array
            items:
              type: string
            example:
              - product-1
              - product-2
        - name: filter[stock_status][]
          in: query
          required: false
          description: Filter by stock status
          schema:
            type: string
            enum:
              - in_stock
              - out_of_stock
              - low_stock
        - name: filter[default]
          in: query
          required: false
          description: Filter by default variations
          schema:
            type: boolean
      responses:
        '200':
          description: Product Variations Retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductVariation'
                  first_page_url:
                    type: string
                    example: http://127.0.0.1:8000/backend/store/products?page=1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      summary: Create a new product variation
      operationId: createProductVariation
      tags:
        - Product Variations
      requestBody:
        $ref: '#/components/requestBodies/ProductVariationRequestBody'
      responses:
        '200':
          description: Successful response with created product variation data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
                  data:
                    $ref: '#/components/schemas/ProductVariation'
        '400':
          description: Validation error or slug/name already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - This name already exists.
                      - Validation failed.
        '403':
          description: Permission denied.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Permission denied: can-update-module.'
    put:
      tags:
        - Product Variations
      summary: Update a list of product variations
      description: This endpoint allows you to update multiple product records based on the provided input, including actions like activating, deactivating, trashing, or restoring product variations.
      operationId: updateProductVariationList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product variations to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified variations have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Product Variations
      summary: Delete a list of product variations
      description: This endpoint allows you to delete multiple product variation records based on the provided input.
      operationId: deleteProductVariationList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product variation to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified products have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /productvariations/{id}:
    get:
      tags:
        - Product Variations
      summary: Get variation by ID
      description: Retrieve a product variation by its unique identifier.
      operationId: getProductVariationById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product Variation Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariation'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Product Variations
      summary: Update an existing  variation
      description: Update a product variation with the specified ID using the provided details.
      operationId: updateProduct
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/ProductVariationRequestBody'
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProductVariation'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Product Variations
      summary: Delete a variation by ID
      description: Delete a single product variation by its ID.
      operationId: deleteProductVariationById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product Variation Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /productvariations/{id}/action/{action}:
    patch:
      tags:
        - Product Variations
      summary: Perform an action on a product variation
      description: |
        This endpoint allows you to perform various actions on a variation item, such as activating, deactivating, trashing, or restoring a product.
      operationId: itemAction
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /productvariations/action/{action}:
    put:
      tags:
        - Product Variations
      summary: Perform bulk actions on variations
      description: This endpoint allows various bulk actions to be performed on product variations based on the provided action type.
      operationId: performBulkAction
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /productvariations/add/variation-to-cart:
    post:
      tags:
        - Product Variations
      summary: Add product variation to cart
      description: |
        This endpoint adds a product variation to a user's cart based on the selected variation and vendor.
      operationId: addVariationToCart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_info:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: integer
                      example: 119
                product_variation:
                  type: object
                  required:
                    - id
                    - quantity
                  properties:
                    id:
                      type: integer
                    quantity:
                      type: integer
                      description: The available total quantity of the variation
                    vh_st_product_id:
                      type: integer
      responses:
        '200':
          description: Added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved successfully.
                  data:
                    type: object
                    properties:
                      example: Response data will include user information.
        '400':
          description: Error occurred while adding variation to cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example:
                        - Please enter valid user
                        - This product variation is out of stock for selected vendor
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /productvariations/disable/active-cart:
    post:
      tags:
        - Product Variations
      summary: Disable active cart session
      description: |
        This endpoint disables the active cart session by removing the 'vh_user_id' from the current session.
        It is used to clear the active cart for the user.
      operationId: disableActiveCart
      responses:
        '200':
          description: Cart session disabled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Cart disabled successfully
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Something went wrong
                  hint:
                    type: string
                    description: Error trace when APP_DEBUG is true
                    example: Error trace stack...
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    basicAuth:
      type: http
      scheme: basic
  parameters:
    id:
      name: id
      description: The unique identifier of the item
      in: path
      required: true
    action:
      name: action
      in: path
      required: true
      description: The action to perform on the item (activate, deactivate, trash, restore)
      schema:
        type: string
        items:
          example:
            - activate
            - deactivate
            - trash
            - restore
    bulk_action:
      name: action
      in: path
      required: true
      description: The action to perform (e.g., activate-all, deactivate-all, trash-all, restore-all, delete-all).
      schema:
        type: string
        items:
          example:
            - activate-all
            - deactivate-all
            - trash-all
            - restore-all
    limit:
      name: limit
      in: query
      description: The number of items to return
      required: false
      schema:
        type: integer
        format: int64
        default: 10
    offset:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result set
      required: false
      schema:
        type: integer
        format: int64
        default: 0
    page:
      name: page
      in: query
      required: false
      description: The page number to retrieve.
      schema:
        type: integer
        example: 1
    rows:
      name: rows
      in: query
      required: false
      description: Number of rows per page.
      schema:
        type: integer
      example: 20
    filter_q:
      name: filter[q]
      in: query
      required: false
      description: Search by name, slug, or id.
      schema:
        type: string
    filter_is_active:
      name: filter[is_active]
      in: query
      required: false
      schema:
        type: boolean
    filter_trashed:
      name: filter[trashed]
      in: query
      required: false
      description: Include, exclude, or only show trashed.
      schema:
        type: string
        enum:
          - include
          - exclude
          - only
    filter_date:
      name: filter[date][]
      in: query
      required: false
      description: Filter by date range.
      schema:
        type: array
        items:
          type: string
          format: date
      example:
        - '2024-09-03'
        - '2024-09-11'
    min_price:
      name: filter[min_price]
      in: query
      required: false
      description: Minimum price.
      schema:
        type: number
        format: float
      example: 10.5
    max_price:
      name: filter[max_price]
      in: query
      required: false
      description: Maximum price.
      schema:
        type: number
        format: float
      example: 100
    category:
      name: filter[category][]
      in: query
      required: false
      description: Filter by category slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - category-1
        - category-2
    product_variations:
      name: filter[product_variations][]
      in: query
      required: false
      description: Filter by product variation slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - variation-1
        - variation-2
    min_quantity:
      name: filter[min_quantity]
      in: query
      required: false
      description: Minimum quantity.
      schema:
        type: integer
      example: 5
    max_quantity:
      name: filter[max_quantity]
      in: query
      required: false
      description: Maximum quantity.
      schema:
        type: integer
      example: 50
    vendors:
      name: filter[vendors][]
      in: query
      required: false
      description: Filter by vendor slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - vendor-1
        - vendor-2
    stores:
      name: filter[stores][]
      in: query
      required: false
      description: Filter by store slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - store-1
        - store-2
  requestBodies:
    StoreRequestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - taxonomy_id_store_status
              - slug
              - is_multi_currency
              - is_multi_lingual
              - is_multi_vendor
              - allowed_ips
              - is_default
              - is_active
            properties:
              name:
                type: string
                description: The name of the store.
                example: My Store
              taxonomy_id_store_status:
                type: integer
                description: The taxonomy ID representing the store's status.
                example: 1
              slug:
                type: string
                description: A URL-friendly version of the store name.
                example: my-store
              notes:
                type: string
                description: Optional notes about the store.
                nullable: true
                example: Optional notes about the store
              is_multi_currency:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if the store supports multiple currencies.
                example: 1
              is_multi_lingual:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if the store supports multiple languages.
                example: 0
              is_multi_vendor:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if the store supports multiple vendors.
                example: 1
              allowed_ips:
                type: array
                items:
                  type: string
                  format: ipv4
                description: List of allowed IP addresses.
                example:
                  - 192.168.1.1
                  - 192.168.1.2
              status_notes:
                type: string
                description: Notes regarding the store's status.
                nullable: true
                example: Store is in review
              is_default:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if this is the default store.
                example: 0
              is_active:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if the store is active.
                example: 1
    ProductVariationRequestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the product variation.
              slug:
                type: string
                description: Slug for the product variation.
              price:
                type: number
                example: 59545
                description: Price of the product variation.
              taxonomy_id_variation_status:
                type: integer
                description: Taxonomy ID for the variation's status.
              vh_st_product_id:
                type: integer
                description: Product ID for the variation belongs to.
              sku:
                type: string
                example: Rerum sed ut eum aut.
                description: Stock Keeping Unit (SKU) of the product variation.
              product:
                type: object
                properties:
                  id:
                    type: integer
                    required: true
                  uuid:
                    type: string
                description: Product information to which the variation belongs.
              is_active:
                type: integer
                example: 1
                description: Whether the product variation is active.
              is_default:
                type: integer
                example: 0
                description: Flag indicating if the product variation is the default.
              description:
                type: string
                description: Description of the product variation.
              meta_title:
                type: string
                description: Meta title for SEO purposes.
              meta_description:
                type: string
                description: Meta description for SEO purposes.
              meta_keywords:
                type: array
                items:
                  type: string
                description: Meta keywords for SEO purposes.
              status_notes:
                type: string
                description: Notes related to the status.
              has_media:
                type: boolean
                example: false
                description: Flag indicating if the variation has associated media.
            required:
              - name
              - slug
              - price
              - sku
              - taxonomy_id_variation_status
              - vh_st_product_id
              - is_active
              - is_default
              - product
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema: null
    NotFound:
      description: Not Found
      content:
        application/json:
          schema: null
    RecordNotExist:
      description: Record does not exist
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              data:
                type: array
                items: {}
              message:
                type: string
                items:
                  type: string
                  example: Record does not exist.
    Error:
      description: Generic Error Response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: An error occurred
  schemas:
    Credentials:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          examples:
            - we@webreinvent.com
        password:
          type: string
          examples:
            - webreinvent
    Token:
      type: object
      properties:
        token:
          type: string
          examples:
            - eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    Store:
      type: object
      required:
        - id
        - name
        - taxonomy_id_store_status
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Store Name
        slug:
          type: string
          example: store-name
        is_multi_currency:
          type: boolean
          example: 1
        is_multi_vendor:
          type: boolean
          example: 1
        is_multi_lingual:
          type: boolean
          example: 1
        allowed_ips:
          type: array
          items:
            type: string
            format: ipv4
            example: 192.168.1.1
        status:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        status_notes:
          type: string
          example: Store status notes
        created_at:
          type: string
          format: date-time
    Product:
      type: object
      required:
        - id
        - name
        - store
      properties:
        id:
          type: integer
          format: int64
          example: 1
        uuid:
          type: string
          example: 8952d982-4aca-462e-8e90-2f8340a22582
        name:
          type: string
          example: My Product
        store:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        available_at:
          type: string
          format: date-time
          example: '2024-10-23T00:00:00Z'
        brand:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Nike
        product_categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 213
              name:
                type: string
                example: Electronics
        product_price_range:
          type: object
          properties:
            price_range:
              type: array
              items:
                type: number
              example:
                - 0
                - 1
            quantity:
              type: integer
              example: 7
            selected_vendor:
              type: object
              example:
                vendor data: null
        status:
          type: object
          properties:
            id:
              type: integer
              example: 17
            name:
              type: string
              example: Approved
        updated_at:
          type: string
          format: date-time
          example: '2024-09-17T10:45:06Z'
    Vendor:
      type: object
      required:
        - id
        - name
        - slug
        - is_default
        - owned_by
        - approved_by
        - taxonomy_id_vendor_status
        - vh_st_store_id
        - store
      properties:
        id:
          type: integer
          format: int64
          example: 1
        uuid:
          type: string
          example: 8952d982-4aca-462e-8e90-2f8340a22582
        name:
          type: string
        slug:
          type: string
        store:
          type: object
          properties:
            id:
              required: true
              type: integer
            name:
              type: string
        registered_at:
          type: string
          format: date-time
          example: '2024-09-27 13:21:21'
        approvedByUser:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Admin User
        ownedByUser:
          type: object
          properties:
            id:
              type: integer
              example: 2
            name:
              type: string
              example: Owner User
        vendorProducts:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 101
              name:
                type: string
                example: Sample Product
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 3
              name:
                type: string
                example: User Name
        email:
          type: string
          nullable: true
          example: null
        phone_number:
          type: string
          nullable: true
          example: null
        address:
          type: string
          nullable: true
          example: null
        is_active:
          type: integer
          nullable: true
          example: null
        deleted_at:
          type: string
          format: date-time
          nullable: true
          example: null
        deleted_by:
          type: integer
          nullable: true
          example: null
        business_document_detail:
          type: string
          nullable: true
          example: null
        business_document_file:
          type: string
          nullable: true
          example: null
        business_document_type:
          type: string
          nullable: true
          example: null
        auto_approve_products:
          type: boolean
          nullable: true
          example: null
        meta:
          type: object
          nullable: true
          example: null
        services_offered:
          type: string
          nullable: true
          example: null
        created_at:
          type: string
          format: date-time
          example: '2024-09-27T10:00:00Z'
        approved_at:
          type: string
          format: date-time
          example: '2024-09-27 13:21:21'
        updated_at:
          type: string
          format: date-time
          example: '2024-09-27 13:21:21'
    ProductVariation:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the product variation
        uuid:
          type: string
          description: UUID for the product variation
        vh_st_product_id:
          type: integer
          description: Product ID to which the variation belongs
        name:
          type: string
          description: Name of the product variation
        price:
          type: number
          description: Price of the product variation
          format: float
        sku:
          type: string
          description: Stock Keeping Unit for the product variation
        slug:
          type: string
          description: Slug identifier for the product variation
        quantity:
          type: integer
          description: Quantity of the product variation in stock
        in_stock:
          type: boolean
          description: Flag indicating whether the product variation is in stock
        is_active:
          type: boolean
          description: Indicates if the product variation is active
        is_default:
          type: boolean
          description: Indicates if this variation is the default variation
        is_mail_sent:
          type: boolean
          description: Flag to check if email is sent regarding this variation
        is_quantity_low:
          type: boolean
          description: Flag to check if the product variation quantity is low
        low_stock_at:
          type: string
          description: Timestamp when the stock became low
          format: date-time
        status:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier of the status
            name:
              type: string
              description: Status name
            slug:
              type: string
              description: Slug identifier for the status
        status_notes:
          type: string
          description: Notes related to the status
          nullable: true
        taxonomy_id_variation_status:
          type: integer
          description: Taxonomy ID for the variation's status
        description:
          type: string
          description: Description of the product variation
          nullable: true
        meta:
          type: object
          description: Meta information for the product variation
          nullable: true
        meta_title:
          type: string
          description: Meta title for SEO purposes
          nullable: true
        meta_description:
          type: string
          description: Meta description for SEO purposes
          nullable: true
        meta_keywords:
          type: string
          description: Meta keywords for SEO purposes
          nullable: true
        has_media:
          type: boolean
          description: Flag indicating whether the variation has associated media
          nullable: true
        product:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the product
            name:
              type: string
              description: Product name
            slug:
              type: string
              description: Slug identifier for the product
            deleted_at:
              type: string
              description: Timestamp when the product was deleted
              nullable: true
              format: date-time
        created_at:
          type: string
          description: Timestamp when the variation was created
          format: date-time
        updated_at:
          type: string
          description: Timestamp when the variation was last updated
          format: date-time
        created_by:
          type: integer
          description: User ID of the creator of the variation
        updated_by:
          type: integer
          description: User ID who last updated the variation
        deleted_at:
          type: string
          description: Timestamp when the variation was deleted
          nullable: true
          format: date-time
        deleted_by:
          type: integer
          description: User ID who deleted the variation
          nullable: true
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema: null
    Error:
      description: Generic Error Response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: An error occurred
    NotFound:
      description: Not Found
      content:
        application/json:
          schema: null
    RecordNotExist:
      description: Record does not exist
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              data:
                type: array
                items: {}
              message:
                type: string
                items:
                  type: string
                  example: Record does not exist.

openapi: 3.0.0
info:
  title: VaahStore
  description: |
    VaahStore is  an e-commerce module that provides an API specification for user authentication and store management.
        To get started, [sign in here](#tag/authentication/POST/api/signin).
    ### Note:
        Before testing any requests, make sure to replace the URL placeholder (`{your_url}`) with your actual URL in the server configuration.

    <details>
              <summary>Example</summary>

              GET `{Your Base URL}`/api/`{path}`

    ## Resources:
       For more information and updates, visit <a href="https://github.com/webreinvent" target="_blank"><img src="https://img.icons8.com/material-outlined/24/000000/github.png" alt="GitHub" style="vertical-align: middle; margin-right: 4px;"/></a>.
  version: Under Development
  contact:
    name: Webreinvent Team
    url: https://webreinvent.com/
    email: we@webreinvent.com
servers: null
security:
  - bearerAuth: []
  - basicAuth: []
tags:
  - name: Authentication
    description: |
      Provides all the required endpoints to create an account and authorize yourself.
      Ensure that you replace the base URL with your own domain for all authentication-related requests.
  - name: Taxonomies
    description: |
      Everything about Taxonomies in VaahStore.
      From here, you can get the taxonomy ID used in VaahStore for various purposes, such as managing statuses.
      Each CRUD operation has its own associated statuses; for instance, the store entity has specific statuses like `store-status`.
      You can retrieve all the statuses associated with the store CRUD operations, allowing for better management and understanding of the state of each store.
  - name: Stores
    description: Everything about Stores
  - name: Products
    description: Everything about Products in VaahStore
  - name: Vendors
    description: Everything about Vendors in VaahStore
  - name: Product Variations
    description: Everything about Product Variations in VaahStore
  - name: Vendor Products
    description: Everything about Vendor Products in VaahStore
  - name: Product Stocks
    description: Everything about Product Stocks in VaahStore
  - name: Carts
    description: Everything about Cart Process in VaahStore
  - name: Orders
    description: Everything about Order Process in VaahStore
  - name: Payments
    description: Everything about Payments in VaahStore
  - name: Shipments
    description: Everything about Shipments in VaahStore
  - name: Product Attributes
    description: Everything about Product Attributes in VaahStore
  - name: Product Medias
    description: Everything about Product Medias in VaahStore
  - name: Categories
    description: Everything about Categories in VaahStore
  - name: Brands
    description: Everything about Brands in VaahStore
  - name: Warehouses
    description: Everything about Warehouses in VaahStore
  - name: Attributes
    description: Everything about Attributes in VaahStore
  - name: Attribute Groups
    description: Everything about Attribute Groups in VaahStore
  - name: Addresses
    description: Everything about Addresses in VaahStore
  - name: Wishlists
    description: Everything about Wishlists in VaahStore
  - name: Customers
    description: Everything about Customers in VaahStore
  - name: Customer Groups
    description: Everything about Customer Groups in VaahStore
  - name: Payment Methods
    description: Everything about Payment Methods in VaahStore
  - name: Settings
    description: |
      Everything about Settings in VaahStore. This section includes managing various settings and configurations related to VaahStore. Additionally, it covers how to create, read, update, and delete sample records for VaahStore CRUD operations.
paths:
  /api/sign-up:
    post:
      tags:
        - Authentication
      summary: Sign up as a customer
      operationId: signUp
      security:
        - api_key: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The customer's email address.
                  maxLength: 150
                first_name:
                  type: string
                  description: The customer's first name.
                  maxLength: 150
                username:
                  type: string
                  description: Customer username
                password:
                  type: string
                  description: The customer's password.
                is_active:
                  type: integer
                  description: Indicates whether the customer is active or not.
              required:
                - email
                - first_name
                - username
                - password
      responses:
        '200':
          description: User/Customer signup Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
                  data:
                    type: object
                    properties:
                      item:
                        type: object
                        description: The authenticated user data including the API token.
                        properties:
                          id:
                            type: integer
                            description: The unique identifier for the user.
                          email:
                            type: string
                            format: email
                            description: The email address of the user.
                          username:
                            type: string
                            description: Username of the customer/user.
                          first_name:
                            type: string
                            description: FIrst name of the customer/user.
                          name:
                            type: string
                            description: Customer's full name.
                          created_ip:
                            type: string
                            description: IP address of the user who created the customer record.
                          api_token:
                            type: string
                            description: The API token for authenticating future requests.
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The email field is required.
                      - The email must be a valid email address.
                      - The first name field is required.
                      - The username field is required.
                      - The password field is required.
                      - The status field is required.
        '409':
          description: Conflict error if user/customer already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Email is already registered.. '
                      - 'Username is already registered.. '
  /api/sign-in/otp:
    post:
      summary: Generate OTP for sign in
      description: |
        This endpoint allows users to request a one-time password (OTP) for logging into their account. Upon successful request, an OTP will be sent to the user's registered email. The user can then use this OTP to log in
      operationId: generateOTP
      security:
        - api_key: []
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The email address of the user.
              required:
                - email
      responses:
        '200':
          description: A one-time password (OTP) has been sent to your email.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                    example: []
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - A one time password (OTP) has been sent to your email.
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The email field is required.
        '401':
          description: Unauthorized, invalid credentials provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Invalid credentials provided.
  /api/sign-in:
    post:
      summary: Sign in
      description: |
        This endpoint allows users to sign in to their account. Upon successful authentication, a new API token will be generated for the user, which can be used for subsequent authenticated requests. Click [For signup](#tag/authentication/POST/api/signup) as a cutomer in VaahStore
      operationId: postSignIn
      security:
        - api_key: []
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address of the user or username.
                password:
                  type: string
                  description: The password for the account.
                type:
                  type: string
                  enum:
                    - otp
                  description: The type of authentication. If `otp` is provided, `login_otp` becomes required, and `password` is not required.
                login_otp:
                  type: string
                  description: The one-time password (OTP) used for authentication.
                  example: 12345
              required:
                - email
                - password
              oneOf:
                - required:
                    - password
                  not:
                    required:
                      - login_otp
                - required:
                    - login_otp
                  not:
                    required:
                      - password
      responses:
        '200':
          description: User signed in successfully and API token generated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      item:
                        type: object
                        description: The authenticated user data including the API token.
                        properties:
                          id:
                            type: integer
                            description: The unique identifier for the user.
                          email:
                            type: string
                            format: email
                            description: The email address of the user.
                          username:
                            type: string
                            description: Username of the customer/user.
                          first_name:
                            type: string
                            description: FIrst name of the customer/user.
                          name:
                            type: string
                            description: Customer's full name.
                          created_ip:
                            type: string
                            description: IP address of the user who created the customer record.
                          api_token:
                            type: string
                            description: The API token for authenticating future requests.
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The email field is required.
                      - The password field is required.
                      - The login OTP field is required.
        '401':
          description: Unauthorized, invalid credentials provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Invalid credentials provided.
  /api/password-reset-code:
    post:
      summary: Send password reset code
      description: |
        This endpoint allows users to request a reset code for reset their account password sent to their registered email. The code can be used to reset their account password.
      operationId: sendPasswordCode
      tags:
        - Authentication
      security:
        - api_key: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The email address of the user.
              required:
                - email
      responses:
        '200':
          description: A password reset code is sent to your email.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                    example: []
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - A password reset code is sent to your email.
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The email field is required.
        '401':
          description: Unauthorized, invalid credentials provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Invalid credentials provided.
  /api/password-reset:
    post:
      summary: Reset password using reset code
      description: |
        This endpoint allows users to reset their password by providing a valid reset code sent to their registered email address.
        Upon successful validation of the reset code and submission of the new password, the user's password will be updated, and they can log in with the new credentials
      operationId: resetPassword
      security:
        - api_key: []
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reset_password_code:
                  type: string
                  description: The password reset code.
                password:
                  type: string
                  description: The password for the account.
                password_confirmation:
                  type: string
                  description: Confirm password for the account.
              required:
                - password
                - password_confirmation
                - reset_password_code
      responses:
        '200':
          description: Your password has been reset successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                    example: []
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Your password has been reset successfully.
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The password field is required.
                      - The reset password code field is required.
                      - The password field must be at least 6 characters.
                      - The password confirmation does not match.
        '401':
          description: Unauthorized, invalid credentials provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Invalid credentials provided.
  /api/sign-out:
    post:
      summary: Sign out
      description: |
        This endpoint allows a user to sign out from the application, effectively invalidating their session and API token. You must provide the `api_token` in the header to authenticate the request.
      operationId: postSignOut
      tags:
        - Authentication
      responses:
        '200':
          description: User signed out successfully, and the session was terminated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: vaahcms-general.logout_success
                  data:
                    type: array
                    description: The data returned after successful signout (typically empty).
                    example: []
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Invalid session, user not logged in.
        '401':
          description: Unauthorized, the user is not authenticated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - User not authenticated or session expired.
  /api/taxonomies:
    get:
      tags:
        - Taxonomies
      summary: Get list of taxonomies
      description: Returns a list of taxonomies with various filters such as sorting, activity, trashed, search, and type filter.
      parameters:
        - in: query
          name: filter
          required: false
          schema:
            type: object
            properties:
              sorted:
                type: string
                description: Sort by specific field.
              active:
                type: boolean
                description: Filter by active/inactive status.
              trashed:
                type: boolean
                description: Filter by trashed/not trashed status.
              search:
                type: string
                description: Search by keyword.
              type:
                type: array
                items:
                  type: string
                description: Filter by taxonomy type slug, e.g `?filter[type][]=order-status`.
          style: deepObject
        - in: query
          name: rows
          required: false
          schema:
            type: integer
            description: Number of rows per page for pagination.
          example: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        description: Paginated list of taxonomies
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            parent:
                              type: object
                              description: Parent taxonomy
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                            type:
                              type: object
                              description: Taxonomy type
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                            is_active:
                              type: boolean
                            deleted_at:
                              type: string
                              format: date-time
                      first_page_url:
                        type: string
                        example: http://url/api/store/taxonomies?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/taxonomies?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/taxonomies
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '400':
          description: Invalid request
        '500':
          description: Server error
  /api/store/stores:
    get:
      tags:
        - Stores
      summary: Get list of all stores
      description: |
        This endpoint retrieves a list of stores with optional pagination and filtering.
        You can filter the results using various parameters.
      operationId: getStores
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
      responses:
        '200':
          description: List of stores retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Store'
                      first_page_url:
                        type: string
                        example: http://url/api/store/stores?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/stores?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/stores
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
    post:
      tags:
        - Stores
      summary: Create a new Store
      description: Create a new store with the provided details.
      operationId: createStore
      requestBody:
        $ref: '#/components/requestBodies/StoreRequestBody'
      responses:
        '200':
          description: Store Created Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Store'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
        '400':
          description: Bad Request
          content:
            application/json:
              schema: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Stores
      summary: Update a list of stores
      description: This endpoint allows you to update multiple store records based on the provided input, including actions like activating, deactivating, trashing, or restoring stores.
      operationId: updateStoreList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the store to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified stores have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified store IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Store not found.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Stores
      summary: Delete a list of stores
      description: This endpoint allows you to delete multiple store records based on the provided input.
      operationId: deleteStoreList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the store to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified stores have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified store IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Store not found.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/stores/default:
    get:
      tags:
        - Stores
      summary: Get default store
      description: |
        This endpoint retrieves default store available.
      operationId: defaultStore
      responses:
        '200':
          description: Default store retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Default store data.
                    properties:
                      id:
                        type: integer
                        description: Unique identifier for the store.
                        example: 1
                      uuid:
                        type: string
                        description: Universally unique identifier for the store.
                        example: 946a52e8-f04b-40a2-9589-5edbd445dd24
                      taxonomy_id_store_status:
                        type: integer
                        description: Taxonomy ID representing the store's status.
                        example: 12
                      name:
                        type: string
                        description: The name of the store.
                        example: Store 1
                      slug:
                        type: string
                        description: The URL-friendly identifier for the store.
                        example: store-1
                      notes:
                        type: string
                        nullable: true
                        description: Additional notes about the store.
                        example: null
                      is_multi_currency:
                        type: boolean
                        description: Whether the store supports multiple currencies.
                        example: true
                      is_multi_lingual:
                        type: boolean
                        description: Whether the store supports multiple languages.
                        example: true
                      is_multi_vendor:
                        type: boolean
                        description: Whether the store supports multiple vendors.
                        example: true
                      allowed_ips:
                        type: array
                        description: List of IPs allowed for the store.
                        items:
                          type: string
                        example:
                          - 1.103.89.74
                          - 26.243.219.91
                      status_notes:
                        type: string
                        description: Notes about the store's status.
                        example: Nobis et quia nam vel.
                      is_default:
                        type: boolean
                        description: Whether the store is the default store.
                        example: true
                      is_active:
                        type: boolean
                        description: Whether the store is currently active.
                        example: true
                      meta:
                        type: string
                        description: Additional metadata about the store.
                        example: Sed aut vitae eius nisi quasi.
                      created_by:
                        type: integer
                        description: ID of the user who created the store.
                        example: 1
                      updated_by:
                        type: integer
                        description: ID of the user who last updated the store.
                        example: 1
                      deleted_by:
                        type: integer
                        nullable: true
                        description: ID of the user who deleted the store, if applicable.
                        example: null
                      created_at:
                        type: string
                        format: date-time
                        description: The date and time when the store was created.
                        example: '2024-11-25 12:09:01'
                      updated_at:
                        type: string
                        format: date-time
                        description: The date and time when the store was last updated.
                        example: '2024-12-10 10:39:36'
                      deleted_at:
                        type: string
                        format: date-time
                        nullable: true
                        description: The date and time when the store was deleted, if applicable.
                        example: null
                      currencies:
                        type: array
                        description: List of currencies supported by the store.
                        items:
                          type: object
                          properties:
                            vh_st_store_id:
                              type: integer
                              description: Store ID associated with the currency.
                              example: 1
                            name:
                              type: string
                              description: Name of the currency.
                              example: Afghan Afghani
                            code:
                              type: string
                              nullable: true
                              description: Code of the currency.
                              example: null
                            symbol:
                              type: string
                              nullable: true
                              description: Symbol of the currency.
                              example: null
                            is_default:
                              type: boolean
                              description: Whether this is the default currency for the store.
                              example: true
                      languages:
                        type: array
                        description: List of languages supported by the store.
                        items:
                          type: object
                          properties:
                            vh_st_store_id:
                              type: integer
                              description: Store ID associated with the language.
                              example: 1
                            name:
                              type: string
                              description: Name of the language.
                              example: Afrikaans
                            is_default:
                              type: boolean
                              description: Whether this is the default language for the store.
                              example: true
  /api/store/stores/{id}/action/{action}:
    patch:
      tags:
        - Stores
      summary: Perform an action on a store
      description: |
        This endpoint allows you to perform various actions on a store item, such as activating, deactivating, trashing, or restoring a store.
      operationId: itemAction
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Store'
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Store Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Store not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/stores/{id}:
    get:
      tags:
        - Stores
      summary: Get a Store by ID
      description: Retrieve a single store by its ID.
      operationId: getStoreById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the store to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Store Retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Store'
        '404':
          description: Store Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Stores
      summary: Update an existing Store
      description: Update a store with the specified ID using the provided details.
      operationId: updateStore
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - taxonomy_id_store_status
                - slug
                - is_multi_currency
                - is_multi_lingual
                - is_multi_vendor
                - allowed_ips
                - is_default
                - is_active
              properties:
                name:
                  type: string
                  example: Updated Store Name
                taxonomy_id_store_status:
                  type: integer
                  example: 1
                slug:
                  type: string
                  example: updated-store
                notes:
                  type: string
                  nullable: true
                  example: Updated notes about the store
                is_multi_currency:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 1
                is_multi_lingual:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 0
                is_multi_vendor:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 1
                allowed_ips:
                  type: array
                  items:
                    type: string
                    format: ipv4
                    example: 192.168.1.2
                status_notes:
                  type: string
                  nullable: true
                  example: Store is now active
                is_default:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 0
                is_active:
                  type: integer
                  enum:
                    - 0
                    - 1
                  example: 1
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Store'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema: null
        '404':
          description: Store Not Found
          content:
            application/json:
              schema: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Stores
      summary: Delete a Store by ID
      description: Delete a single store by its ID.
      operationId: deleteStoreById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the store to delete
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Store Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '404':
          description: Store Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/stores/action/{action}:
    put:
      tags:
        - Stores
      summary: Perform bulk actions on stores
      description: This endpoint allows various bulk actions to be performed on stores based on the provided action type.
      operationId: performStoreAction
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '404':
          description: Store Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Store not found.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/products:
    get:
      tags:
        - Products
      summary: Get List of all products
      description: Retrieve a list of products.
      operationId: getProductList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/ids_query'
        - $ref: '#/components/parameters/exclude'
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_new_arrivals'
        - $ref: '#/components/parameters/filter_from'
        - $ref: '#/components/parameters/filter_to'
        - $ref: '#/components/parameters/homepage_featured'
        - $ref: '#/components/parameters/categorypage_featured'
        - $ref: '#/components/parameters/top_sellings_filter'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/min_price'
        - $ref: '#/components/parameters/max_price'
        - $ref: '#/components/parameters/category'
        - $ref: '#/components/parameters/product_variations'
        - $ref: '#/components/parameters/stores'
        - $ref: '#/components/parameters/brands'
        - $ref: '#/components/parameters/vendors'
        - $ref: '#/components/parameters/min_quantity'
        - $ref: '#/components/parameters/max_quantity'
      responses:
        '200':
          description: Products Retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
                      first_page_url:
                        type: string
                        example: http://url/api/store/products?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/products?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/products
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Products
      summary: Create a new product
      description: Adds a new product to the store.
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My Product
                  description: Name of the product.
                slug:
                  type: string
                  example: my-product
                  description: URL-friendly identifier for the product.
                vh_st_store_id:
                  type: integer
                  example: 1
                  description: ID of the store the product belongs to.
                taxonomy_id_product_type:
                  type: integer
                  example: 1
                  description: Product Type Id from the taxonomies.
                taxonomy_id_product_status:
                  type: integer
                  example: 1
                  description: Status Id of the product.
                summary:
                  type: string
                  example: My Product Summary
                  description: A brief summary of the product.
                details:
                  type: string
                  example: My Product Details
                  description: Detailed information about the product.
                seo_meta_keyword:
                  type: array
                  items:
                    type: string
                  description: SEO keywords for the product.
                  example:
                    - buy products
                    - example
                available_at:
                  type: string
                  format: date
                  example: '2024-10-10'
                  description: Date when the product will be available.
                launch_at:
                  type: string
                  format: date
                  example: '2025-04-18'
                  description: Date when the product will be launched.
                categories:
                  type: object
                  description: Categories associated with the product, where keys are category IDs and values are booleans indicating selection.
                  additionalProperties:
                    type: boolean
                  example:
                    '213': true
                    '214': true
                    '223': true
                is_active:
                  type: integer
                  example: 1
                  description: Indicates if the product is active (1) or not (0).
                is_featured_on_home_page:
                  type: boolean
                  example: 1
                  description: Indicates if the product is featured on the home page (1) or not (0).
                is_featured_on_category_page:
                  type: boolean
                  example: 1
                  description: Indicates if the product is featured on the category page (1) or not (0).
                status_notes:
                  type: string
                  example: Example status notes
                  description: Notes about the product's status.
                meta:
                  type: object
                  nullable: true
                  example: null
                  description: Meta information for the product.
              required:
                - name
                - slug
                - vh_st_store_id
                - taxonomy_id_product_type
                - taxonomy_id_product_status
      responses:
        '200':
          description: Product Created Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Product'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    description: List of validation error messages.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Products
      summary: Delete a list of products
      description: This endpoint allows you to delete multiple product records based on the provided input.
      operationId: deleteProductList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified products have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified product IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Product not found.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    ../vaahstore.yamlput:
      tags:
        - Products
      summary: Update a list of products
      description: This endpoint allows you to update multiple product records based on the provided input, including actions like activating, deactivating, trashing, or restoring products.
      operationId: updateProductList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified stores have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified product IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Prdouct not found.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/products/{id}:
    get:
      tags:
        - Products
      summary: Get Product by ID
      description: Retrieve a product by its unique identifier.
      operationId: getProductById
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/exclude'
        - $ref: '#/components/parameters/include'
      responses:
        '200':
          description: Product Retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Products
      summary: Update an existing Product
      description: Update a product with the specified ID using the provided details.
      operationId: updateProduct
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My Product
                  description: Name of the product.
                slug:
                  type: string
                  example: my-product
                  description: URL-friendly identifier for the product.
                vh_st_store_id:
                  type: integer
                  example: 1
                  description: ID of the store the product belongs to.
                taxonomy_id_product_type:
                  type: integer
                  example: 1
                  description: Product Type Id from the taxonomies.
                taxonomy_id_product_status:
                  type: integer
                  example: 1
                  description: Status Id of the product.
                summary:
                  type: string
                  example: My Product Summary
                  description: A brief summary of the product.
                details:
                  type: string
                  example: My Product Details
                  description: Detailed information about the product.
                seo_meta_keyword:
                  type: array
                  items:
                    type: string
                  description: SEO keywords for the product.
                  example:
                    - buy products
                    - example
                available_at:
                  type: string
                  format: date
                  example: '2024-10-10'
                  description: Date when the product will be available.
                launch_at:
                  type: string
                  format: date
                  example: '2025-04-18'
                  description: Date when the product will be launched.
                categories:
                  type: object
                  description: Categories associated with the product, where keys are category IDs and values are booleans indicating selection.
                  additionalProperties:
                    type: boolean
                  example:
                    '213': true
                    '214': true
                    '223': true
                is_active:
                  type: integer
                  example: 1
                  description: Indicates if the product is active (1) or not (0).
                is_featured_on_home_page:
                  type: boolean
                  example: 1
                  description: Indicates if the product is featured on the home page (1) or not (0).
                is_featured_on_category_page:
                  type: boolean
                  example: 1
                  description: Indicates if the product is featured on the category page (1) or not (0).
                status_notes:
                  type: string
                  example: Example status notes
                  description: Notes about the product's status.
                meta:
                  type: object
                  nullable: true
                  example: null
                  description: Meta information for the product.
              required:
                - name
                - slug
                - vh_st_store_id
                - taxonomy_id_product_type
                - taxonomy_id_product_status
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Product'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema: null
        '404':
          description: Product Not Found
          content:
            application/json:
              schema: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Products
      summary: Delete a Product by ID
      description: Delete a single product by its ID.
      operationId: deleteProductById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '404':
          description: Record does not exist
          content:
            application/json:
              schema: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/products/{id}/action/{action}:
    patch:
      tags:
        - Products
      summary: Perform an action on a product
      description: |
        This endpoint allows you to perform various actions on a product item, such as activating, deactivating, trashing, or restoring a product.
      operationId: itemAction
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Product'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/products/action/{action}:
    put:
      tags:
        - Products
      summary: Perform bulk actions on products
      description: This endpoint allows various bulk actions to be performed on products based on the provided action type.
      operationId: performStoreAction
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '404':
          description: Product Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Product not found.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/products/top-sellings:
    get:
      tags:
        - Products
      summary: Top-selling products within a date range
      description: Retrieve a list of top 5 products based on the provided date range and optional filters.
      operationId: getTopSellings
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - name: limit
          in: query
          description: Number of top products to retrieve. Defaults to 5 if not provided.
          required: false
          schema:
            type: integer
            example: 2
      requestBody:
        required: true
        description: |
          The request body requires `start_date` and `end_date` to fetch data for the specified period. If these values are not provided, the API will return data for the current day by default.
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  format: date-time
                  example: '2024-12-01T00:00:00.000Z'
                  description: Start date of the period for fetching top-selling categories.
                end_date:
                  type: string
                  format: date-time
                  example: '2024-12-26T00:00:00.000Z'
                  description: End date of the period for fetching top-selling categories.
                filter_all:
                  type: string
                  nullable: true
                  example: null
                  description: Optional filter to apply to the category list (e.g., all, null, etc.).
              required:
                - start_date
                - end_date
      responses:
        '200':
          description: Products Retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 889
                        name:
                          type: string
                          example: Tata Coffee
                        slug:
                          type: string
                          example: tata-coffee
                        total_sales:
                          type: string
                          example: '1000'
                        image_urls:
                          type: array
                          items:
                            type: string
                            example: ''
                        brand:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 3
                            name:
                              type: string
                              example: Tata
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/products/top-brands:
    get:
      tags:
        - Products
      summary: Top-selling brands within a date range
      description: Retrieve a list of top 5 brands based on the provided date range and optional filters.
      operationId: getTopSellingBrands
      parameters:
        - name: limit
          in: query
          description: Number of top brands to retrieve. Defaults to 5 if not provided.
          required: false
          schema:
            type: integer
            example: 2
      requestBody:
        required: true
        description: |
          The request body requires `start_date` and `end_date` to fetch data for the specified period. If these values are not provided, the API will return data for the current day by default.
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  format: date-time
                  example: '2024-12-01T00:00:00.000Z'
                  description: Start date of the period for fetching top-selling brands.
                end_date:
                  type: string
                  format: date-time
                  example: '2024-12-26T00:00:00.000Z'
                  description: End date of the period for fetching top-selling brands.
                filter_all:
                  type: string
                  nullable: true
                  example: null
                  description: Optional filter to apply to the brand list (e.g., all, null, etc.).
      responses:
        '200':
          description: Brands Retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 889
                        name:
                          type: string
                          example: Tata Coffee
                        slug:
                          type: string
                          example: tata-coffee
                        total_sales:
                          type: string
                          example: '1000'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/products/top-categories:
    get:
      tags:
        - Products
      summary: Top-selling categories within a date range
      description: Retrieve a list of top 5 categories based on the provided date range and optional filters.
      operationId: getTopSellingCategories
      parameters:
        - name: limit
          in: query
          description: Number of top categories to retrieve. Defaults to 5 if not provided.
          required: false
          schema:
            type: integer
            example: 2
      requestBody:
        required: true
        description: |
          The request body requires `start_date` and `end_date` to fetch data for the specified period. If these values are not provided, the API will return data for the current day by default.
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  format: date-time
                  example: '2024-12-01T00:00:00.000Z'
                  description: Start date of the period for fetching top-selling categories.
                end_date:
                  type: string
                  format: date-time
                  example: '2024-12-26T00:00:00.000Z'
                  description: End date of the period for fetching top-selling categories.
                filter_all:
                  type: string
                  nullable: true
                  example: null
                  description: Optional filter to apply to the category list (e.g., all, null, etc.).
              required:
                - start_date
                - end_date
      responses:
        '200':
          description: Categories Retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 889
                        name:
                          type: string
                          example: Tata Coffee
                        slug:
                          type: string
                          example: tata-coffee
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/products/{id}/vendors:
    get:
      tags:
        - Products
      summary: Get Vendors List for Product By Product ID
      description: |
        This endpoint retrieves a list of vendors associated with a specific product.
        It returns vendor details, including the quantity available and their price range.
        Additionally, it checks for any missing default vendors and includes them in the response.
      operationId: getVendorsListForProduct
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product for which to retrieve the vendors.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved the list of vendors.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 109
                        name:
                          type: string
                          example: Vendor 1
                        slug:
                          type: string
                          example: vendor-1
                        is_default:
                          type: integer
                          example: 1
                        quantity:
                          type: integer
                          example: 0
                        product_price_range:
                          type: array
                          items:
                            type: number
                          example: []
                        pivot_id:
                          type: integer
                          example: 79
                        is_preferred:
                          type: boolean
                          nullable: true
                          example: null
                  message:
                    type: boolean
                    example: false
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid product ID.
        '404':
          description: Product not found or no vendors associated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Product not found or no vendors associated.
    post:
      tags:
        - Products
      summary: Attach vendors to a product
      description: |
        This endpoint allows you to create or attach vendors to a specific product.
        By providing the product ID and vendors details, you can associate one or more vendors
        with a product. This operation also verifies if the vendor already exists for the given product
        and includes validation for required fields.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            description: The ID of the product.
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - store
                - vendors
              properties:
                store:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: integer
                      description: The ID of the store to which this vendor associated..
                      example: 1
                vendors:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - name
                      - can_update
                      - taxonomy_id_vendor_status
                    properties:
                      id:
                        type: integer
                        description: The ID of the vendor.
                        example: 1
                      name:
                        type: string
                        description: The name of the vendor.
                        example: ''
                      taxonomy_id_vendor_status:
                        type: integer
                        description: The status ID of the vendor.
                        example: 1
                      can_update:
                        type: boolean
                        description: Indicates if the vendor can update the product.
                        example: true
                      status_notes:
                        type: string
                        description: Optional notes about the vendor status.
                        example: null
                        nullable: true
      responses:
        '200':
          description: Vendors attached successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - saved successfully.
                  data:
                    type: object
                    description: The product data.
                    $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Vendor ID is required.
                      - Vendor name is required.
                      - This Vendor {vendor_name} already exists.
                      - Can Update required
        '401':
          description: Unauthorized, user does not have permission to create vendor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Permission denied.
  /api/store/products/{id}/vendors/{vendor_id}/action:
    patch:
      tags:
        - Products
      summary: Set Vendor as Preferred or Not Preferred
      description: |
        This endpoint allows you to mark a specific vendor for a product as preferred or not preferred.
        When setting a vendor as preferred, all other vendors for the same product will be marked as not preferred.
      operationId: vendorPreferredAction
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product.
          schema:
            type: integer
            example: 1
        - name: vendor_id
          in: path
          required: true
          description: The ID of the vendor to mark as preferred or not-preferred for this product id.
          schema:
            type: integer
            example: 1
        - name: action
          in: path
          required: true
          description: The action to perform.
          examples:
            preferred: Mark as preferred.
            not-preferred: Mark as not preferred.
          schema:
            type: string
            enum:
              - preferred
              - not-preferred
            example: preferred
      responses:
        '200':
          description: Successfully updated the vendor preference status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: string
                    example: Success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid request.
        '404':
          description: Product vendor not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Product vendor not found.
  /api/store/products/attributes:
    post:
      tags:
        - Products
      summary: Get Attribute List
      description: |
        This endpoint retrieves a list of attributes or attribute groups based on the provided attribute type.
        It can return either a list of all attributes or the attributes from a specific attribute group.
      operationId: getAttributeList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - attribute_type
              properties:
                attribute_type:
                  type: string
                  description: The type of attribute to retrieve. Can be "attribute" or "attribute_group".
                  example: attribute or attribute_group
      responses:
        '200':
          description: Successful response with attribute list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The ID of the attribute or attribute group.
                          example: 1
                        name:
                          type: string
                          description: The name of the attribute or attribute group.
                          example: Color
                        type:
                          type: string
                          description: The type of the attribute (only applicable for attributes).
                          example: string
  /api/store/products/getAttributeValue:
    post:
      tags:
        - Products
      summary: Get Attribute Values
      description: |
        This endpoint retrieves attribute values for a specified product and attribute list.
        It generates variations if the method is set to "generate" or returns a structured list of attribute values otherwise.
      operationId: getAttributeValue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attribute:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - name
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: color
                      type:
                        type: string
                        example: branded
                method:
                  type: string
                  example: generate
                product_id:
                  type: integer
                  example: 23
              required:
                - attribute
                - product_id
                - method
      responses:
        '200':
          description: Successful retrieval of attribute values
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      all_attribute_name:
                        type: array
                        items:
                          type: string
                        example:
                          - Color
                      structured_variation:
                        type: array
                        items:
                          type: object
                          properties:
                            variation_name:
                              type: string
                              example: Sony-Blue
                            is_selected:
                              type: boolean
                              example: false
                            Color:
                              type: object
                              properties:
                                value:
                                  type: string
                                  example: Blue
                                vh_st_attribute_id:
                                  type: integer
                                  example: 1
                                id:
                                  type: integer
                                  example: 1
                example:
                  data:
                    structured_variation:
                      - variation_name: Sony-Blue
                        is_selected: false
                        Color:
                          value: Blue
                          vh_st_attribute_id: 1
                          id: 1
                    all_attribute_name:
                      - Color
  /api/store/products/{id}/generate-variations:
    post:
      tags:
        - Products
      summary: Generate Product Variations
      description: |
        This endpoint allows you to create variations for a specific product.
        Each variation can have different attributes and settings.
        If a variation with the same name already exists for the product, an error will be returned.
      operationId: createVariation
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product for which the variation is being created.
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - product_variations
              properties:
                product_variations:
                  type: object
                  required:
                    - structured_variation
                    - all_attribute_names
                  properties:
                    structured_variations:
                      type: array
                      items:
                        type: object
                        required:
                          - Attribute_name_1
                          - variation_name
                          - is_default
                        properties:
                          Attribute_name_1:
                            type: object
                            description: Name of the Attribute
                            required:
                              - value
                              - vh_st_attribute_id
                              - id
                            properties:
                              value:
                                type: string
                                description: The color value of the variation.
                                example: blue
                              vh_st_attribute_id:
                                type: integer
                                description: ID of the attribute (e.g., color).
                                example: 1
                              id:
                                type: integer
                                description: ID of the attribute value.
                                example: 2
                          variation_name:
                            type: string
                            description: The name of the product variation.
                            example: Test Product-blue12
                          is_default:
                            type: boolean
                            description: Set the variation as default.
                            example: false
                    all_attribute_names:
                      type: array
                      items:
                        type: string
                      description: An array of names of all attributes associated with the variations.
                      example:
                        - color
                        - size
                        - material
      responses:
        '200':
          description: Variation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    description: Indicates if the operation was successful.
                  data:
                    type: object
                    $ref: '#/components/schemas/Product'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - saved successfully.
                    description: Message after successful creation.
        '400':
          description: Error in creating variation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                    description: Indicates if the operation failed.
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This Variation name 'Color - Blue' already exists.
                    description: A list of error messages detailing the issues encountered.
  /api/store/vendors:
    get:
      tags:
        - Vendors
      summary: Get List of all vendors
      operationId: getVendorsList
      parameters:
        - name: filter[q]
          in: query
          required: false
          description: Search query for vendor by name, slug, or id.
          schema:
            type: string
        - name: filter[is_active]
          in: query
          required: false
          schema:
            type: boolean
        - name: filter[trashed]
          in: query
          required: false
          description: Include or exclude trashed vendors.
          schema:
            type: string
            enum:
              - include
              - exclude
              - only
        - name: filter[date][]
          in: query
          required: false
          description: Filter vendors by date range (start and end dates).
          schema:
            type: array
            items:
              type: string
              format: date
        - name: filter[vendor_status][]
          in: query
          required: false
          description: Filter vendors by status.
          schema:
            type: array
            items:
              type: string
        - name: filter[store][]
          in: query
          required: false
          description: Filter vendors by associated store name.
          schema:
            type: array
            items:
              type: string
            example:
              - store1
              - store2
        - name: filter[product][]
          in: query
          required: false
          description: Filter vendors by associated products slug.
          schema:
            type: array
            items:
              type: string
            example:
              - product-1
              - product-2
        - name: rows
          in: query
          required: false
          description: Number of rows to return per page.
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: A list of vendors.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Vendor'
                      first_page_url:
                        type: string
                        example: http://url/api/store/vendors?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/vendors?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/vendors
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '400':
          description: Bad request. Invalid filter parameters.
        '500':
          description: Internal server error.
    post:
      tags:
        - Vendors
      summary: Create a new vendor
      operationId: createVendors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My vendor
                  description: Name of the vendor.
                slug:
                  type: string
                  example: my-vendor
                  description: URL-friendly identifier for the vendor.
                vh_st_store_id:
                  type: integer
                  example: 1
                  description: ID of the store the vendor belongs to.
                is_default:
                  type: boolean
                  example: 1
                  description: Is vendor is default.
                approved_by:
                  type: integer
                  example: 1
                  description: Id of the user who gone to aprove.
                owned_by:
                  type: integer
                  example: 1
                  description: id of the vendor owner.
                taxonomy_id_vendor_status:
                  type: integer
                  example: 1
                  description: Status Id of the vendor.
                store:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: id of the store.
                    is_multi_vendor:
                      type: enum
                      required: true
                      example: 1
              required:
                - name
                - slug
                - vh_st_store_id
                - approved_by
                - owned_by
                - is_default
                - taxonomy_id_vendor_status
      responses:
        '200':
          description: Vendor Created Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Vendor'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    description: List of validation error messages.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Vendors
      summary: Delete a list of vendors
      description: This endpoint allows you to delete multiple vendor records based on the provided input.
      operationId: deleteVendorList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified Vendors have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified Vendor IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Vendors not found.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    put:
      tags:
        - Vendors
      summary: Update a list of vendors
      description: This endpoint allows you to update multiple vendor records based on the provided input, including actions like activating, deactivating, trashing, or restoring vendors.
      operationId: updateVendorList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the vendor to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified vendors have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '404':
          description: One or more specified vendor IDs were not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Vendor not found.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/vendors/{id}:
    get:
      tags:
        - Vendors
      summary: Get vendor by ID
      description: Retrieve a vendor by its unique identifier.
      operationId: getVendorById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Vendor Retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Vendor'
        '404':
          description: Vendor Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Vendors
      summary: Update an existing vendor
      description: Update a vendor with the specified ID using the provided details.
      operationId: updateVendor
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My vendor
                  description: Name of the vendor.
                slug:
                  type: string
                  example: my-vendor
                  description: URL-friendly identifier for the vendor.
                vh_st_store_id:
                  type: integer
                  example: 1
                  description: ID of the store the vendor belongs to.
                is_default:
                  type: boolean
                  example: true
                  description: Indicates whether the vendor is the default vendor.
                approved_by:
                  type: integer
                  example: 1
                  description: ID of the user who approved the vendor.
                owned_by:
                  type: integer
                  example: 1
                  description: ID of the vendor owner.
                taxonomy_id_vendor_status:
                  type: integer
                  example: 1
                  description: Status ID of the vendor.
                store:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: ID of the store.
                    is_multi_vendor:
                      type: boolean
                      example: true
                      description: Indicates if the store supports multiple vendors.
              required:
                - name
                - slug
                - vh_st_store_id
                - approved_by
                - owned_by
                - is_default
                - taxonomy_id_vendor_status
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Vendor'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema: null
        '404':
          description: Vendor Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Vendors
      summary: Delete a vendor by ID
      description: Delete a single vendor by its ID.
      operationId: deleteVendorById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Vendor Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Details of the deleted vendor (optional).
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Record has been deleted
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/vendors/{id}/action/{action}:
    patch:
      tags:
        - Vendors
      summary: Perform an action on a vendor
      description: |
        This endpoint allows you to perform various actions on a vendor item, such as activating, deactivating, trashing, or restoring a vendor.
      operationId: itemAction
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example:
                        - Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example:
                        - An error occurred
  /api/store/vendors/action/{action}:
    put:
      tags:
        - Vendors
      summary: Perform bulk actions on list of vendors
      description: This endpoint allows various bulk actions to be performed on vendors based on the provided action type.
      operationId: performVendorAction
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '404':
          description: Vendor Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Vendor not found.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/vendors/{id}/products:
    post:
      tags:
        - Vendors
      summary: Attach products to vendor
      description: This endpoint allows adding products to a specific vendor.
      operationId: attachProducts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            description: The ID of the vendor.
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - products
              properties:
                products:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - name
                      - vh_st_store_id
                      - can_update
                      - taxonomy_id_product_status
                    properties:
                      id:
                        type: integer
                        description: The ID of the product
                        example: 1
                      name:
                        type: string
                        description: The name of the product.
                        example: laptop-32gb-black
                      vh_st_store_id:
                        type: integer
                        description: The ID of the store to which this product belongs.
                        example: 1
                      taxonomy_id_product_status:
                        type: integer
                        description: The status ID of the product.
                        example: 1
                      can_update:
                        type: boolean
                        description: Determines if the product can be updated by the vendor.
                        example: false
                      status_notes:
                        type: string
                        description: Optional notes about the status of the product.
                        example: Product is under review
      responses:
        '200':
          description: Product added successfully with vendor
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    $ref: '#/components/schemas/Vendor'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Product added successfully.
        '400':
          description: Bad Request. Validation failed or product already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - '''Sample Product'' already exists for this vendor.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An error occurred while adding the product.
  /api/store/vendors/{id}/users-roles:
    post:
      tags:
        - Vendors
      summary: Assign users and roles to a vendor
      description: Associates specified users with a vendor and assigns them specific roles.
      operationId: attachUsersRoles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            description: The ID of the vendor.
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - users
              properties:
                users:
                  type: array
                  description: List of users with their roles.
                  items:
                    type: object
                    required:
                      - pivot
                    properties:
                      pivot:
                        type: object
                        required:
                          - vh_user_id
                          - vh_role_id
                        properties:
                          vh_user_id:
                            type: integer
                            description: The ID of the user.
                            example: 123
                          vh_role_id:
                            type: integer
                            description: The ID of the role assigned to the user.
                            example: 456
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: The updated vendor data.
                    $ref: '#/components/schemas/Vendor'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
        '400':
          description: Duplicate user-role combination or invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - This Record already present in the list.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An error occurred while adding the user.
  /api/store/productvariations:
    get:
      tags:
        - Product Variations
      summary: Get List of all variations
      description: Retrieve a list of all the product variations.
      operationId: getProductVariationList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/ids_query'
        - $ref: '#/components/parameters/exclude'
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/min_quantity'
        - $ref: '#/components/parameters/max_quantity'
        - name: filter[products][]
          in: query
          required: false
          description: Filter by associated products slug.
          schema:
            type: array
            items:
              type: string
            example:
              - product-1
              - product-2
        - name: filter[stock_status][]
          in: query
          required: false
          description: Filter by stock status
          schema:
            type: string
            enum:
              - in_stock
              - out_of_stock
              - low_stock
        - name: filter[default]
          in: query
          required: false
          description: Filter by default variations
          schema:
            type: boolean
      responses:
        '200':
          description: Product Variations Retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProductVariation'
                      first_page_url:
                        type: string
                        example: http://url/api/store/productvariations?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/productvariations?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/productvariations
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      summary: Create a new product variation
      operationId: createProductVariation
      tags:
        - Product Variations
      requestBody:
        $ref: '#/components/requestBodies/ProductVariationRequestBody'
      responses:
        '200':
          description: Successful response with created product variation data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
                  data:
                    $ref: '#/components/schemas/ProductVariation'
        '400':
          description: Validation error or slug/name already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - This name already exists.
                      - Validation failed.
        '403':
          description: Permission denied.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Permission denied: can-update-module.'
    put:
      tags:
        - Product Variations
      summary: Update a list of product variations
      description: This endpoint allows you to update multiple product records based on the provided input, including actions like activating, deactivating, trashing, or restoring product variations.
      operationId: updateProductVariationList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product variations to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified variations have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Product Variations
      summary: Delete a list of product variations
      description: This endpoint allows you to delete multiple product variation records based on the provided input.
      operationId: deleteProductVariationList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product variation to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified products have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/productvariations/{id}:
    get:
      tags:
        - Product Variations
      summary: Get variation by ID
      description: Retrieve a product variation by its unique identifier.
      operationId: getProductVariationById
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/exclude'
        - $ref: '#/components/parameters/include'
      responses:
        '200':
          description: Product Variation Retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ProductVariation'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Product Variations
      summary: Update an existing  variation
      description: Update a product variation with the specified ID using the provided details.
      operationId: updateProduct
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/ProductVariationRequestBody'
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ProductVariation'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Product Variations
      summary: Delete a variation by ID
      description: Delete a single product variation by its ID.
      operationId: deleteProductVariationById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product Variation Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/productvariations/{id}/action/{action}:
    patch:
      tags:
        - Product Variations
      summary: Perform an action on a product variation
      description: |
        This endpoint allows you to perform various actions on a variation item, such as activating, deactivating, trashing, or restoring a product.
      operationId: itemAction
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/productvariations/action/{action}:
    put:
      tags:
        - Product Variations
      summary: Perform bulk actions on variations
      description: This endpoint allows various bulk actions to be performed on product variations based on the provided action type.
      operationId: performBulkAction
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/productvariations/disable/active-cart:
    post:
      tags:
        - Product Variations
      summary: Disable active cart session
      description: |
        This endpoint disables the active cart session by removing the 'vh_user_id' from the current session.
        It is used to clear the active cart for the user.
      operationId: disableActiveCart
      responses:
        '200':
          description: Cart session disabled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Cart disabled successfully
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Something went wrong
                  hint:
                    type: string
                    description: Error trace when APP_DEBUG is true
                    example: Error trace stack...
  /api/store/productvendors:
    get:
      tags:
        - Vendor Products
      summary: Get list of all vendor products
      description: Retrieve a list of all the vendor products.
      operationId: getProductVendorsList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/products'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProductVendor'
                      first_page_url:
                        type: string
                        example: http://url/api/store/productvendors?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/productvendors?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/productvendors
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      summary: Create a new vendor product
      operationId: createVendorProduct
      tags:
        - Vendor Products
      requestBody:
        $ref: '#/components/requestBodies/ProductVendorRequestBody'
      responses:
        '200':
          description: Successful response with created product vendor data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
                  data:
                    $ref: '#/components/schemas/ProductVendor'
        '400':
          description: Validation error or slug/name already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - This name already exists.
                      - Validation failed.
        '403':
          description: Permission denied.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Permission denied: can-update-module.'
    put:
      tags:
        - Vendor Products
      summary: Update a list of product vendors
      description: This endpoint allows you to update multiple product vendors records based on the provided input, including actions like activating, deactivating, trashing, or restoring product vendors.
      operationId: updateProductVendorsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product vendors to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified product vendors have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Vendor Products
      summary: Delete a list of product vendors
      description: This endpoint allows you to delete multiple product vendors records based on the provided input.
      operationId: deleteProductVendorsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product vendors to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified product vendors have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/productvendors/products:
    post:
      summary: Get Product list of Stores
      operationId: productForStore
      tags:
        - Vendor Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: array
                  items:
                    type: integer
                  description: Array of Store IDs
                  example:
                    - 1
                    - 2
                    - 3
                q:
                  type: string
                  description: Search query for product name or slug
                  example: Product Name
              required:
                - id
                - q
      responses:
        '200':
          description: List of products for the given store(s)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Product ID
                          example: 1
                        name:
                          type: string
                          description: Product Name
                          example: Sample Product
                        slug:
                          type: string
                          description: Product Slug
                          example: sample-product
                        vh_st_store_id:
                          type: integer
                          description: Store ID where the product belongs
                          example: 1
                        store:
                          type: object
                          description: Store object to which the product belongs
                          properties:
                            id:
                              type: integer
                              description: Store ID
                              example: 1
                            name:
                              type: string
                              description: Store Name
                              example: Main Store
                            slug:
                              type: string
                              description: Store Slug
                              example: store-slug
                            is_default:
                              type: boolean
                              nullable: true
                              description: Indicates if the store is the default store
                              example: null
                            deleted_at:
                              type: string
                              format: date-time
                              nullable: true
                              description: Timestamp if the store is deleted
                              example: null
  /api/store/productvendors/{id}:
    get:
      tags:
        - Vendor Products
      summary: Get record by vendor-product ID
      description: Retrieve a product vendor by its unique identifier.
      operationId: getProductVendorsById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product-vendor Retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ProductVendor'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Vendor Products
      summary: Update an existing record
      description: Update a product vednor record with the specified ID using the provided details.
      operationId: updateProductVendor
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/ProductVendorUpdateRequestBody'
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ProductVendor'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Vendor Products
      summary: Delete a record by ID
      description: Delete a single product vendor by its ID.
      operationId: deleteProductVendorById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product vendor Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/productvendors/{id}/action/{action}:
    patch:
      tags:
        - Vendor Products
      summary: Perform an action on a vendor-product
      description: |
        This endpoint allows you to perform various actions on a vendor-product item, such as activating, deactivating, trashing, or restoring a vendor product.
      operationId: itemActionVendorProducts
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/productvendors/action/{action}:
    put:
      tags:
        - Vendor Products
      summary: Perform bulk actions on vendor-products
      description: This endpoint allows various bulk actions to be performed on vendor products based on the provided action type.
      operationId: bulkActionsVendorProducts
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/productvendors/{id}/prices:
    post:
      tags:
        - Vendor Products
      summary: Add product price by vendor
      description: This endpoint allows create the product price according to the specefic vendor.
      operationId: vendorProductPrice
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the vendor product
          schema:
            type: integer
            example: 1
      requestBody:
        description: Request body for adding product price by vendor
        content:
          application/json:
            schema:
              type: object
              properties:
                vh_st_vendor_id:
                  type: string
                  description: Unique identifier for the vendor
                vh_st_product_id:
                  type: string
                  description: Unique identifier for the product
                product_variation:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        required: true
                        description: Unique identifier for the product variation
                      name:
                        type: string
                        description: Name of the product variation
                      amount:
                        type: number
                        required: true
                        description: Price amount for the product variation. Set to null to delete.
              required:
                - id
                - vh_st_vendor_id
                - vh_st_product_id
                - product_variation
      responses:
        '200':
          description: Product price added or updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ProductVendor'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The Product field is required
                      - The product_variation.0.amount field is required.
  /api/store/productstocks:
    get:
      tags:
        - Product Stocks
      summary: Get list of all product stocks
      description: Retrieve list of all the product stocks.
      operationId: getProductStocksList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/min_quantity'
        - $ref: '#/components/parameters/max_quantity'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/products'
        - $ref: '#/components/parameters/product_variations'
        - $ref: '#/components/parameters/vendors'
        - $ref: '#/components/parameters/warehouses'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProductStock'
                      first_page_url:
                        type: string
                        example: http://url/api/store/productstocks?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/productstocks?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/productstocks
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Product Stocks
      summary: Create Product Stock
      operationId: createItem
      requestBody:
        $ref: '#/components/requestBodies/ProductStocksRequestBody'
      responses:
        '200':
          description: Product stock created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
                  data:
                    $ref: '#/components/schemas/ProductStock'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Product Stock already exists for this variation.
        '409':
          description: Conflict error if product stock already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Product Stock already exists for this variation.
    put:
      tags:
        - Product Stocks
      summary: Update a list of product stocks
      description: This endpoint allows you to update multiple product stocks records based on the provided input, including actions like activating, deactivating, trashing, or restoring product stocks.
      operationId: updateProductStocksList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product stocks to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified product stocks have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Product Stocks
      summary: Delete a list of product stocks
      description: This endpoint allows you to delete multiple product stocks records based on the provided input.
      operationId: deleteProductStocksList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product stocks to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified product stocks have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/productstocks/{id}:
    get:
      tags:
        - Product Stocks
      summary: Get record by product stock ID
      description: Retrieve a product stock by its unique identifier.
      operationId: getProductStockById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product-stock Retrieved Succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ProductStock'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Product Stocks
      summary: Update an existing record
      description: Update a product vednor record with the specified ID using the provided details.
      operationId: updateProductStock
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/ProductStocksRequestBody'
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ProductStock'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Product Stocks
      summary: Delete a record by ID
      description: Delete a single product stock by its ID.
      operationId: deleteProductStockById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product vendor Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/productstocks/{id}/action/{action}:
    patch:
      tags:
        - Product Stocks
      summary: Perform an action on a product stock
      description: |
        This endpoint allows you to perform various actions on a product stock item, such as activating, deactivating, trashing, or restoring a product stock.
      operationId: itemActionProductStock
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/productstocks/action/{action}:
    put:
      tags:
        - Product Stocks
      summary: bulk actions on product stocks
      description: This endpoint allows various bulk actions to be performed on product stocks list based on the provided action type.
      operationId: bulkActionsVendorProducts
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/carts:
    get:
      tags:
        - Carts
      summary: Get list of all carts
      description: Retrieve list of all the carts.
      operationId: getProductStocksList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
      responses:
        '200':
          description: Cart list retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Cart'
                      first_page_url:
                        type: string
                        example: http://url/api/store/carts?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/carts?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/carts
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Carts
      summary: Delete list of carts
      description: This endpoint allows you to delete multiple carts records based on the provided input.
      operationId: deleteCartsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the carts to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified carts have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/carts/generate:
    post:
      tags:
        - Carts
      summary: Generate a cart or add products to a cart
      description: |
        This endpoint allows users to add multiple products to their cart. The product IDs are required, while the user information is optional. If any product is out of stock, an error message will be returned.
      operationId: addToCart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  description: A list of products associated with the request or response.
                  items:
                    type: object
                    required:
                      - id
                    description: Details of a product in the list.
                    properties:
                      id:
                        type: integer
                        example: 1
                        description: The unique identifier for the product.
                      vendor_id:
                        type: integer
                        example: 1
                        description: The identifier for the vendor associated with the product.
                      variation_id:
                        type: integer
                        example: 1
                        description: The identifier for the specific variation of the product.
                      quantity:
                        type: integer
                        example: 1
                        description: The number of units of the product being referenced.
                user:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                uuid:
                  type: string
                  description: UUID of the cart. If provided, the product will be added to this specific cart.
                  example: abcd1234-abcd1234
              required:
                - products
      responses:
        '200':
          description: Cart created/generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example:
                        - Saved successfully.
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: xxx
                      uuid:
                        type: string
                        example: abcd1234-abcd1234
                      vh_user_id:
                        type: integer
                        example: xxx
                      created_by:
                        type: integer
                        example: xxx
                      updated_by:
                        type: integer
                        example: xxx
                      deleted_by:
                        type: integer
                        example: null
                      created_at:
                        type: string
                        example: '2024-12-09 05:56:09'
                      updated_at:
                        type: string
                        example: '2024-12-09 05:56:09'
                      deleted_at:
                        type: string
                        example: null
                      products:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: xx
                              description: Unique identifier for the product.
                            uuid:
                              type: string
                              example: abcd1234-abcd1234
                            taxonomy_id_product_type:
                              type: integer
                              example: xx
                            vh_st_store_id:
                              type: integer
                              example: xx
                            vh_st_brand_id:
                              type: integer
                              example: xx
                            taxonomy_id_product_status:
                              type: integer
                              example: xx
                            name:
                              type: string
                              example: Laptop
                              description: Name of the product added to the cart.
                            slug:
                              type: string
                              example: laptop
                            summary:
                              type: string
                              example: lorem ipsum
                            details:
                              type: string
                              example: lorem ipsum
                            quantity:
                              type: integer
                              example: xx
                            in_stock:
                              type: string
                              example: null
                            available_at:
                              type: string
                              example: '2025-05-31 00:00:00'
                            launch_at:
                              type: string
                              example: '2025-05-11 00:00:00'
                            is_featured_on_home_page:
                              type: integer
                              example: 1
                            is_featured_on_category_page:
                              type: integer
                              example: 1
                            is_active:
                              type: integer
                              example: 1
                            is_default:
                              type: integer
                              example: 0
                            status_notes:
                              type: string
                              example: lorem ipsum
                            meta:
                              type: string
                              example: null
                            seo_title:
                              type: string
                              example: null
                            seo_meta_description:
                              type: string
                              example: null
                            seo_meta_keyword:
                              type: string
                              example: null
                            created_by:
                              type: integer
                              example: xxx
                            updated_by:
                              type: integer
                              example: xxx
                            deleted_by:
                              type: integer
                              example: null
                            created_at:
                              type: string
                              example: '2024-11-25 12:17:55'
                            updated_at:
                              type: string
                              example: '2024-12-06 16:27:42'
                            deleted_at:
                              type: string
                              example: null
                            pivot:
                              type: object
                              properties:
                                vh_st_cart_id:
                                  type: integer
                                  example: xxx
                                  description: Unique identifier for the cart in the pivot table.
                                vh_st_product_id:
                                  type: integer
                                  example: xxx
                                  description: Unique identifier for the product in the pivot table.
                                vh_st_product_variation_id:
                                  type: integer
                                  example: xxx
                                  description: Unique identifier for the product variation in the pivot table.
                                quantity:
                                  type: integer
                                  example: xxx
                                  description: Quantity of the product in the cart.
                                vh_st_vendor_id:
                                  type: integer
                                  example: xxx
                                  description: Unique identifier for the vendor associated with the product in the pivot table.
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: xxx
                            description: Unique identifier for the user.
                          uuid:
                            type: string
                            example: abcd1234-abcd1234
                            description: Unique identifier for the user in UUID format.
                          email:
                            type: string
                            example: user@example.com
                            description: User's email address.
                          username:
                            type: string
                            example: john_doe
                            description: Username for the user account.
                          phone:
                            type: integer
                            example: 9191xxxxxx
                            description: User's phone.
                          avatar:
                            type: string
                            example: https://example.com/avatar.jpg
                            description: URL of the user's avatar image.
        '400':
          description: Invalid information
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example:
                        - Invalid product ID xx.
                        - No default variation found for Product ID xx.
                        - No vendor is selected for product ID xx.
                        - Product ID xx is not associated with vendor ID xx.
                        - Insufficient stock for variation ID xx from vendor ID xx.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An error occurred while adding the product to the cart.
  /api/store/carts/{uuid}:
    get:
      tags:
        - Carts
      summary: Get cart details by cart Uuid
      description: Retrieve a cart items by its universal unique identifier.
      operationId: getCartById
      parameters:
        - name: uuid
          in: path
          required: true
          description: The universally unique identifier (UUID) of the cart.
          schema:
            type: string
            example: abcd1234-abcd1234
      responses:
        '200':
          description: Cart details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Unique identifier for the cart
                      uuid:
                        type: string
                        description: Universally unique identifier for the cart
                      vh_user_id:
                        type: integer
                        description: Unique identifier for the user associated with the cart
                      user:
                        type: object
                        description: Details of the user who owns the cart
                        properties:
                          id:
                            type: integer
                            description: Unique identifier of the user
                          uuid:
                            type: string
                            description: Universally unique identifier of the user
                          email:
                            type: string
                            description: Email address of the user
                      total_amount:
                        type: number
                        format: float
                        description: Total amount calculated based on the sum of each item's price multiplied by its quantity in the cart.
                      products:
                        type: array
                        description: List of products in the cart
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Unique identifier of the product
                            uuid:
                              type: string
                              description: Universally unique identifier of the product
                            available_stock_quantity:
                              type: integer
                              description: Available stock quantity of the product
                            taxonomy_id_product_type:
                              type: integer
                              description: Product type taxonomy identifier
                            vh_st_store_id:
                              type: integer
                              description: Store identifier where the product is available
                            vh_st_brand_id:
                              type: integer
                              nullable: true
                              description: Brand identifier associated with the product, if available
                            pivot:
                              type: object
                              description: Details of the relationship between the cart and the product
                              properties:
                                vh_st_cart_id:
                                  type: integer
                                  description: Cart identifier for the product in the cart
                                vh_st_product_id:
                                  type: integer
                                  description: Product identifier in the cart
                                vh_st_product_variation_id:
                                  type: integer
                                  description: Product variation identifier in the cart
                                quantity:
                                  type: integer
                                  description: The quantity of the product set by the user to order
                                vh_st_vendor_id:
                                  type: integer
                                  description: Vendor identifier associated with the product
                                is_stock_available:
                                  type: integer
                                  description: Flag indicating whether the product is available in stock
                                is_wishlisted:
                                  type: integer
                                  description: Flag indicating whether the product is in the user's wishlist
                                cart_product_variation:
                                  type: string
                                  description: The variation name of the product associated with the cart
                                price:
                                  type: number
                                  format: float
                                  description: Price of the product variation in the cart
                            taxonomy_id_product_status:
                              type: integer
                              description: Product status taxonomy identifier
                            name:
                              type: string
                              description: Name of the product
                            slug:
                              type: string
                              description: SEO-friendly URL slug for the product
                            vh_cms_content_form_field_id:
                              type: integer
                              nullable: true
                              description: Identifier for the CMS content form field, if applicable
                            quantity:
                              type: integer
                              description: Total quantity of products in the cart, including variations
                            in_stock:
                              type: boolean
                              nullable: true
                              description: Indicates if the product is currently in stock
                            is_active:
                              type: boolean
                              description: Flag indicating whether the product is active
                      created_by_user:
                        type: object
                        description: User who created the cart
                        properties:
                          id:
                            type: integer
                            description: Identifier of the user who created the cart
                          uuid:
                            type: string
                            description: Universally unique identifier of the user who created the cart
                          first_name:
                            type: string
                            description: First name of the user who created the cart
                          last_name:
                            type: string
                            description: Last name of the user who created the cart
                      created_at:
                        type: string
                        format: date-time
                        description: Timestamp when the cart was created
                      updated_at:
                        type: string
                        format: date-time
                        description: Timestamp when the cart was last updated
                      deleted_at:
                        type: string
                        format: date-time
                        nullable: true
                        description: Timestamp when the cart was deleted, if applicable
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/carts/{uuid}/user:
    post:
      tags:
        - Carts
      summary: Add a user to the guest cart
      description: This endpoint allows you to attach a user to a guest cart using the cart's UUID.
      parameters:
        - name: uuid
          in: path
          required: true
          description: The UUID of the cart to which the user will be added.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The ID of the user to be added to the cart.
                      example: 123
                  required:
                    - id
              required:
                - user
      responses:
        '200':
          description: User successfully added to the cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: User successfully added to cart.
                  data:
                    type: object
                    properties:
                      uuid:
                        type: string
                        example: abcd1234-xyz
                      vh_user_id:
                        type: integer
                        example: 123
                      products:
                        type: array
                        items:
                          type: object
                          properties:
                            product_id:
                              type: integer
                              example: 101
                            quantity:
                              type: integer
                              example: 2
        '400':
          description: Bad Request (e.g., Cart not found or user already attached)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Cart not found with given uuid.
        '409':
          description: Conflict (User already attached to the cart)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: A user is already attached to this cart.
  /api/store/carts/{uuid}/update:
    put:
      tags:
        - Carts
      summary: Update cart products quantity
      description: Updates the quantity of a specified products in the cart. If the new quantity is less than 1, the product will be removed from the cart.
      operationId: updateQuantity
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  description: List of cart products with their details and quantity.
                  items:
                    type: object
                    properties:
                      vh_st_product_id:
                        type: integer
                        example: 1
                        description: The ID of the product.
                      vh_st_product_variation_id:
                        type: integer
                        example: 2
                        description: The ID of the product variation.
                      vh_st_vendor_id:
                        type: integer
                        example: 3
                        description: The ID of the vendor.
                      quantity:
                        type: integer
                        example: 5
                        description: The new quantity for the product. A value of 0 or less indicates removal.
                    required:
                      - vh_st_product_id
                      - vh_st_product_variation_id
                      - vh_st_vendor_id
                      - quantity
              required:
                - products
      responses:
        '200':
          description: Cart products quantity updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved successfully.
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: xxx
                        description: The unique identifier of the cart.
                      uuid:
                        type: string
                        example: abcd1234-abcd1234
                        description: A universally unique identifier (UUID) for the cart.
                      vh_user_id:
                        type: integer
                        example: xxx
                        description: The ID of the user who owns the cart.
                      created_by:
                        type: integer
                        example: xxx
                        description: The ID of the user who created the cart.
                      updated_by:
                        type: integer
                        example: xxx
                        description: The ID of the user who last updated the cart.
                      deleted_by:
                        type: integer
                        example: null
                        description: The ID of the user who deleted the cart (null if not deleted).
                      created_at:
                        type: string
                        example: '2024-12-09 05:56:09'
                        description: The timestamp when the cart was created.
                      updated_at:
                        type: string
                        example: '2024-12-09 05:56:09'
                        description: The timestamp when the cart was last updated.
                      deleted_at:
                        type: string
                        example: null
                        description: The timestamp when the cart was deleted (null if not deleted).
                      products:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: xx
                              description: The unique identifier of the product.
                            uuid:
                              type: string
                              example: abcd1234-abcd1234
                              description: The UUID of the product.
                            taxonomy_id_product_type:
                              type: integer
                              example: xx
                              description: The ID of the product type taxonomy.
                            vh_st_store_id:
                              type: integer
                              example: xx
                              description: The ID of the store where the product is listed.
                            vh_st_brand_id:
                              type: integer
                              example: xx
                              description: The ID of the brand associated with the product.
                            taxonomy_id_product_status:
                              type: integer
                              example: xx
                              description: The ID of the product's status taxonomy.
                            name:
                              type: string
                              example: Laptop
                              description: The name of the product added to the cart.
                            slug:
                              type: string
                              example: laptop
                              description: The URL-friendly version of the product name.
                            summary:
                              type: string
                              example: lorem ipsum
                              description: A short summary of the product.
                            details:
                              type: string
                              example: lorem ipsum
                              description: Detailed information about the product.
                            quantity:
                              type: integer
                              example: xx
                              description: The Available quantity of the product in the cart.
                            in_stock:
                              type: string
                              example: null
                              description: The stock availability status of the product (null if not available).
                            available_at:
                              type: string
                              example: '2025-05-31 00:00:00'
                              description: The date when the product will be available.
                            launch_at:
                              type: string
                              example: '2025-05-11 00:00:00'
                              description: The launch date of the product.
                            is_featured_on_home_page:
                              type: integer
                              example: 1
                              description: Indicates if the product is featured on the home page (1 for true, 0 for false).
                            is_featured_on_category_page:
                              type: integer
                              example: 1
                              description: Indicates if the product is featured on the category page (1 for true, 0 for false).
                            is_active:
                              type: integer
                              example: 1
                              description: Indicates if the product is active (1 for true, 0 for false).
                            is_default:
                              type: integer
                              example: 0
                              description: Indicates if the product is the default product (1 for true, 0 for false).
                            status_notes:
                              type: string
                              example: lorem ipsum
                              description: Notes about the status of the product.
                            created_by:
                              type: integer
                              example: xxx
                              description: The ID of the user who created the product.
                            updated_by:
                              type: integer
                              example: xxx
                              description: The ID of the user who last updated the product.
                            deleted_by:
                              type: integer
                              example: null
                              description: The ID of the user who deleted the product (null if not deleted).
                            created_at:
                              type: string
                              example: '2024-11-25 12:17:55'
                              description: The timestamp when the product was created.
                            updated_at:
                              type: string
                              example: '2024-12-06 16:27:42'
                              description: The timestamp when the product was last updated.
                            deleted_at:
                              type: string
                              example: null
                              description: The timestamp when the product was deleted (null if not deleted).
                            pivot:
                              type: object
                              properties:
                                vh_st_cart_id:
                                  type: integer
                                  example: xxx
                                  description: The ID of the cart in the pivot table.
                                vh_st_product_id:
                                  type: integer
                                  example: xxx
                                  description: The ID of the product in the pivot table.
                                vh_st_product_variation_id:
                                  type: integer
                                  example: xxx
                                  description: The ID of the product variation in the pivot table.
                                quantity:
                                  type: integer
                                  example: xxx
                                  description: The quantity of the product in the cart, as recorded in the pivot table.
                                vh_st_vendor_id:
                                  type: integer
                                  example: xxx
                                  description: The ID of the vendor associated with the product in the pivot table.
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Cart products list is required.
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Cart not found.
  /api/store/carts/{uuid}/checkout:
    get:
      tags:
        - Carts
      summary: Get cart items at checkout by cart Uuid
      description: Fetches the items available for checkout based on the specified cart Uuis. Only items with available stock will be included.
      operationId: getItemsAtCheckOutById
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            description: The uuid of the cart.
            example: 1
      responses:
        '200':
          description: Cart items retrieved successfully at checkout
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      product_details:
                        type: array
                        items:
                          type: object
                          properties:
                            product_id:
                              type: integer
                            name:
                              type: string
                            description:
                              type: string
                              nullable: true
                            image_urls:
                              type: array
                              items:
                                type: string
                            pivot:
                              type: object
                              properties:
                                cart_product_variation:
                                  type: string
                                product_variation_id:
                                  type: integer
                                price:
                                  type: number
                                  format: float
                                quantity:
                                  type: integer
                                subtotal:
                                  type: number
                                  format: float
                                selected_vendor_id:
                                  type: integer
                      user_addresses:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            uuid:
                              type: string
                            vh_user_id:
                              type: integer
                            taxonomy_id_address_types:
                              type: integer
                            taxonomy_id_address_status:
                              type: integer
                            address_line_1:
                              type: string
                            address_line_2:
                              type: string
                              nullable: true
                            name:
                              type: string
                              nullable: true
                            phone:
                              type: string
                            pin_code:
                              type: string
                            city:
                              type: string
                            state:
                              type: string
                            country:
                              type: string
                            meta:
                              type: object
                              nullable: true
                            status_notes:
                              type: string
                              nullable: true
                            is_default:
                              type: boolean
                              nullable: true
                            created_by:
                              type: integer
                            updated_by:
                              type: integer
                            deleted_by:
                              type: integer
                              nullable: true
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                            deleted_at:
                              type: string
                              format: date-time
                              nullable: true
                            address:
                              type: string
                      user_billing_addresses:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            uuid:
                              type: string
                            vh_user_id:
                              type: integer
                            taxonomy_id_address_types:
                              type: integer
                            taxonomy_id_address_status:
                              type: integer
                            address_line_1:
                              type: string
                            address_line_2:
                              type: string
                              nullable: true
                            name:
                              type: string
                              nullable: true
                            phone:
                              type: string
                            pin_code:
                              type: string
                            city:
                              type: string
                            state:
                              type: string
                            country:
                              type: string
                            meta:
                              type: object
                              nullable: true
                            status_notes:
                              type: string
                              nullable: true
                            is_default:
                              type: boolean
                              nullable: true
                            created_by:
                              type: integer
                            updated_by:
                              type: integer
                            deleted_by:
                              type: integer
                              nullable: true
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                            deleted_at:
                              type: string
                              format: date-time
                              nullable: true
                            address:
                              type: string
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          uuid:
                            type: string
                          email:
                            type: string
                          username:
                            type: string
                          display_name:
                            type: string
                          title:
                            type: string
                          designation:
                            type: string
                          first_name:
                            type: string
                          middle_name:
                            type: string
                            nullable: true
                          last_name:
                            type: string
                          gender:
                            type: string
                          country_calling_code:
                            type: string
                          phone:
                            type: string
                          bio:
                            type: string
                          website:
                            type: string
                          timezone:
                            type: string
                          alternate_email:
                            type: string
                            nullable: true
                          avatar_url:
                            type: string
                          birth:
                            type: string
                            format: date
                          country:
                            type: string
                          country_code:
                            type: string
                            nullable: true
                          mfa_methods:
                            type: string
                            nullable: true
                          last_login_at:
                            type: string
                            format: date-time
                            nullable: true
                          last_login_ip:
                            type: string
                            nullable: true
                          is_active:
                            type: integer
                          activated_at:
                            type: string
                            format: date-time
                            nullable: true
                          status:
                            type: string
                          security_code:
                            type: string
                            nullable: true
                          security_code_expired_at:
                            type: string
                            format: date-time
                            nullable: true
                          affiliate_code:
                            type: string
                            nullable: true
                          affiliate_code_used_at:
                            type: string
                            format: date-time
                            nullable: true
                          reset_password_code_sent_at:
                            type: string
                            format: date-time
                            nullable: true
                          reset_password_code_used_at:
                            type: string
                            format: date-time
                            nullable: true
                          registration_id:
                            type: integer
                            nullable: true
                          foreign_user_id:
                            type: integer
                          meta:
                            type: object
                            properties:
                              '0':
                                type: string
                              custom_fields:
                                type: object
                                properties:
                                  state:
                                    type: string
                                    nullable: true
                          created_ip:
                            type: string
                          created_by:
                            type: integer
                          updated_by:
                            type: integer
                          deleted_by:
                            type: integer
                            nullable: true
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                          deleted_at:
                            type: string
                            format: date-time
                            nullable: true
                          avatar:
                            type: string
                          name:
                            type: string
                      total_mrp:
                        type: number
                        format: float
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  data:
                    type: object
                    nullable: true
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/carts/{uuid}/item/{action}:
    delete:
      tags:
        - Carts
      summary: Delete cart item
      description: Removes a specified product or product variation from the cart. If no variation ID is provided, the entire product will be removed.
      operationId: deleteCartItem
      parameters:
        - $ref: '#/components/parameters/uuid'
        - name: action
          in: query
          description: Specifies the action to perform. The only allowed value is `delete`.
          required: true
          schema:
            type: string
            enum:
              - delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: The ID of the cart item.
                    vh_st_product_id:
                      type: integer
                      example: 1
                      description: The ID of the product to be deleted.
                    vh_st_product_variation_id:
                      type: integer
                      example: 1
                      description: The ID of the product variation to be deleted (optional).
                  required:
                    - id
                    - vh_st_product_id
                    - vh_st_product_variation_id
      responses:
        '200':
          description: Cart item deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    nullable: true
                    description: Details of the deleted cart item, can be null
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record deleted successfully.
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Invalid input.
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Cart not found.
  /api/store/carts/add-to-wishlist:
    post:
      tags:
        - Carts
      summary: Add an item to the wishlist
      description: Adds a specified product from the cart to the user's wishlist. If the item is already wishlisted, it will not be added again.
      operationId: addToWishlist
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_detail:
                  type: object
                  description: |
                    Contains details about the product in the cart that will be added to or removed from the wishlist.
                    Includes information such as the cart ID, product ID, product variation ID, quantity, vendor ID, and wishlist status.
                  properties:
                    vh_st_cart_id:
                      type: integer
                      example: 3
                      description: The ID of the cart containing the product.
                    vh_st_product_id:
                      type: integer
                      example: 1
                      description: The ID of the product to add to the wishlist.
                    vh_st_product_variation_id:
                      type: integer
                      example: 2
                      description: The ID of the product variation.
                    quantity:
                      type: integer
                      example: 1
                      description: The quantity of the product.
                    vh_st_vendor_id:
                      type: integer
                      example: 1
                      description: The ID of the vendor for the product.
                    is_wishlisted:
                      type: integer
                      example: 0
                      description: Indicates if the product is already in the wishlist.Set to 1 for adding the product to the wishlist, and 0 if you want to remove the product from the wishlist.
                  required:
                    - vh_st_cart_id
                    - vh_st_product_id
                    - vh_st_product_variation_id
                    - quantity
                    - vh_st_vendor_id
                    - is_wishlisted
                user_detail:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 121
                      description: The ID of the user.
                    username:
                      type: string
                      example: 58a55727-2084-448c-89bd-c3146f8d52f8
                      description: The username of the user, it is for the purpose making new wishlist also.
                  required:
                    - id
                    - username
              required:
                - item_detail
                - user_detail
      responses:
        '200':
          description: Item added to wishlist successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    description: Indicates the operation was successful.
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved successfully.
                  data:
                    type: object
                    properties:
                      cart:
                        $ref: '#/components/schemas/Cart'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Invalid input.
        '404':
          description: User or product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: User or product not found.
  /api/store/carts/{uuid}/action/{action}:
    patch:
      tags:
        - Carts
      summary: Perform an action on a cart
      description: |
        This endpoint allows you to perform various actions on a cart item, such as trashing, or restoring a payment.
      operationId: itemActiOnCart
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
          description: The UUID of the cart.
          example: '1'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/carts/action/{action}:
    put:
      tags:
        - Carts
      summary: Bulk actions on carts
      description: This endpoint allows various bulk actions to be performed on carts list based on the provided action type.
      operationId: bulkActionsCarts
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/orders:
    post:
      tags:
        - Orders
      summary: Place an order
      description: Places an order for the items in the cart and updates stock levels accordingly.
      operationId: placeOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_details:
                  type: object
                  description: Contains details of the order to be placed.
                  properties:
                    cart_id:
                      type: integer
                      example: 1
                      description: The ID of the user's cart.
                    total_amount:
                      type: number
                      format: float
                      example: 150
                      description: The total amount for the order.
                    payable:
                      type: number
                      format: float
                      example: 150
                      description: The amount that needs to be paid.
                    discounts:
                      type: number
                      format: float
                      example: 10
                      description: The total discount applied to the order.
                    taxes:
                      type: number
                      format: float
                      example: 5
                      description: The total taxes applied to the order.
                    delivery_fee:
                      type: number
                      format: float
                      example: 5
                      description: The delivery fee for the order.
                    shipping_address:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 101
                          description: The ID of the shipping address.
                        vh_user_id:
                          type: integer
                          example: 1
                          description: The ID of the user associated with the order.
                      required:
                        - id
                        - vh_user_id
                    billing_address:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 102
                          description: The ID of the billing address.
                        vh_user_id:
                          type: integer
                          example: 1
                          description: The ID of the user associated with the order.
                      required:
                        - id
                        - vh_user_id
                    payment_method:
                      type: string
                      example: COD
                      description: The payment method selected for the order.
                    order_items:
                      type: array
                      items:
                        type: object
                        properties:
                          product_id:
                            type: integer
                            example: 1
                            description: The ID of the product.
                          name:
                            type: string
                            example: product name
                            description: The name of the product.
                          pivot:
                            type: object
                            properties:
                              cart_product_variation:
                                type: string
                                example: variation name
                                description: The name of the product variation.
                              product_variation_id:
                                type: integer
                                example: 2
                                description: The ID of the product variation.
                              selected_vendor_id:
                                type: integer
                                example: 1
                                description: The ID of the selected vendor.
                              quantity:
                                type: integer
                                example: 1
                                description: The quantity of the product ordered.
                              price:
                                type: number
                                format: float
                                example: 50
                                description: The price of the product.
                              subtotal:
                                type: number
                                format: float
                                example: 50
                                description: The total as quantity * price for the item.
                            required:
                              - cart_product_variation
                              - product_variation_id
                              - selected_vendor_id
                              - quantity
                              - price
                        required:
                          - product_id
                          - name
                          - pivot
                  required:
                    - cart_id
                    - total_amount
                    - payable
                    - discounts
                    - taxes
                    - delivery_fee
                    - shipping_address
                    - billing_address
                    - payment_method
                    - order_items
              required:
                - order_details
      responses:
        '200':
          description: Order placed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    description: Indicates if the operation was successful.
                  messages:
                    type: array
                    items:
                      type: string
                      example: Order placed successfully.
                  data:
                    type: object
                    properties:
                      order:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                            description: The ID of the placed order.
                          amount:
                            type: number
                            format: float
                            example: 150
                            description: The total amount for the order.
                          order_status:
                            type: string
                            example: Placed
                            description: The current status of the order.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example:
                        - Provide shipping details
                        - Provide billing details
                        - Select payment type
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred while placing the order.
    get:
      tags:
        - Orders
      summary: Get list of all orders
      description: Retrieve list of all the orders.
      operationId: getOrdersList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Order'
                      first_page_url:
                        type: string
                        example: http://url/api/store/orders?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/orders?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/orders
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Orders
      summary: Update list of orders
      description: This endpoint allows you to update multiple product stocks records based on the provided input, including actions like activating, deactivating, trashing, or restoring orders.
      operationId: updateOrdersList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the orders to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified orders have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Orders
      summary: Delete list of orders
      description: This endpoint allows you to delete multiple order records based on the provided input.
      operationId: deleteOrdersList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the orders to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified orders have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/orders/{uuid}:
    get:
      tags:
        - Orders
      summary: Get record by order UUID
      description: Retrieve a order by its unique identifier.
      operationId: getOrderById
      parameters:
        - name: uuid
          in: path
          required: true
          description: The universally unique identifier (UUID) of the order.
          schema:
            type: string
            example: abcd1234-abcd1234
      responses:
        '200':
          description: Order Retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 6
                        description: The ID of the order.
                      uuid:
                        type: string
                        example: b067e5fa-bfbc-4e91-beb2-ca0b1000cd53
                        description: A unique identifier for the order.
                      vh_user_id:
                        type: integer
                        example: 121
                        description: The ID of the user associated with the order.
                      order_status:
                        type: string
                        example: Placed
                        description: The current status of the order.
                      taxonomy_id_payment_status:
                        type: integer
                        description: The ID of the order payment status.
                      order_shipment_status:
                        type: string
                        example: Pending
                        description: The current shipment status of the order.
                      amount:
                        type: number
                        format: float
                        example: 25
                        description: The total amount for the order.
                      delivery_fee:
                        type: number
                        format: float
                        example: 0
                        description: The delivery fee associated with the order.
                      taxes:
                        type: number
                        format: float
                        example: 0
                        description: The total taxes applied to the order.
                      discount:
                        type: number
                        format: float
                        example: 0
                        description: The total discount applied to the order.
                      payable:
                        type: number
                        format: float
                        example: 25
                        description: The total amount that needs to be paid for the order.
                      paid:
                        type: number
                        format: float
                        example: 0
                        description: The amount that has been paid for the order.
                      is_paid:
                        type: integer
                        nullable: true
                        example: 1
                        description: Indicates if the order has been paid for.
                      is_active:
                        type: integer
                        example: 1
                        description: Indicates if the order is currently active.
                      items_count:
                        type: integer
                        example: 2
                        description: The total number of items in the order.
                      payment_method:
                        type: string
                        nullable: true
                        example: null
                        description: The payment method used for the order.
                      order_payment_status:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 64
                            description: The ID of the payment status.
                          name:
                            type: string
                            example: Pending
                            description: The name of the payment status.
                          slug:
                            type: string
                            example: pending
                            description: A URL-friendly version of the payment status name.
                      status:
                        type: string
                        nullable: true
                        example: null
                        description: Additional status information for the order.
                      status_notes:
                        type: string
                        nullable: true
                        example: null
                        description: Any notes related to the status of the order.
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 121
                            description: The ID of the user.
                          first_name:
                            type: string
                            example: Olin
                            description: The first name of the user.
                          email:
                            type: string
                            example: shivam1@zieme.org
                            description: The email address of the user.
                          phone:
                            type: string
                            example: '2509077310'
                            description: The phone number of the user.
                          display_name:
                            type: string
                            example: shivam
                            description: The display name of the user.
                      payments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            uuid:
                              type: string
                            vh_st_payment_method_id:
                              type: integer
                              nullable: true
                            transaction_id:
                              type: string
                            taxonomy_id_payment_status:
                              type: integer
                            amount:
                              type: string
                            status_notes:
                              type: string
                            notes:
                              type: string
                              nullable: true
                            payment_gate_response:
                              type: string
                              nullable: true
                            payment_gate_status:
                              type: string
                              nullable: true
                            is_active:
                              type: integer
                              nullable: true
                            date:
                              type: string
                              format: date-time
                            meta:
                              type: object
                              additionalProperties: true
                            created_by:
                              type: integer
                            updated_by:
                              type: integer
                            deleted_by:
                              type: integer
                              nullable: true
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                            deleted_at:
                              type: string
                              nullable: true
                            pivot:
                              type: object
                              properties:
                                vh_st_order_id:
                                  type: integer
                                vh_st_payment_id:
                                  type: integer
                                payment_amount:
                                  type: string
                                payable_amount:
                                  type: string
                                remaining_payable_amount:
                                  type: string
                                created_at:
                                  type: string
                                  format: date-time
                            created_by_user:
                              type: object
                              properties:
                                id:
                                  type: integer
                                uuid:
                                  type: string
                                first_name:
                                  type: string
                                last_name:
                                  type: string
                                email:
                                  type: string
                                avatar:
                                  type: string
                                name:
                                  type: string
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Orders
      summary: Update an existing record
      description: Update a order status notes with the specified ID using the provided details.
      operationId: updateOrderById
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status_notes:
                  type: string
                  description: Notes related to the status of the order.
                  maxLength: 100
                paid:
                  type: number
                  format: float
                  description: The amount that has been paid for the order for set the is paid flag.
                  example: 25
              required:
                - status_notes
                - paid
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Order'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Orders
      summary: Delete a record by ID
      description: Delete a single order by its ID.
      operationId: deleteOrderById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Order Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/orders/{uuid}/items:
    get:
      summary: Get order details after placing an order
      operationId: getOrderDetails
      tags:
        - Orders
      parameters:
        - name: uuid
          in: path
          required: true
          description: The Uuid or Id of the order to retrieve details for.
          schema:
            type: string
            example: 1
      responses:
        '200':
          description: Successfully retrieved order details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      order:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                            description: The ID of the order.
                          uuid:
                            type: string
                            example: some-unique-order-uuid
                            description: The unique identifier for the order.
                      user:
                        type: object
                        description: User details related to the order.
                      ordered_at:
                        type: string
                        format: date-time
                        example: '2024-10-03T12:34:56Z'
                        description: The date and time when the order was placed.
                      unique_order_id:
                        type: string
                        example: some-unique-order-uuid
                        description: The unique order ID.
                      product_details:
                        type: array
                        items:
                          type: object
                          properties:
                            product_id:
                              type: integer
                              example: 1
                              description: The ID of the product.
                            name:
                              type: string
                              example: Product Name
                              description: The name of the product.
                            description:
                              type: string
                              example: Detailed description of the product.
                              description: A description of the product.
                            image_urls:
                              type: array
                              items:
                                type: string
                                example: http://example.com/image.jpg
                                description: URL(s) of the product images.
                            pivot:
                              type: object
                              properties:
                                cart_product_variation:
                                  type: string
                                  example: Variation Name
                                  description: The name of the product variation.
                                product_variation_id:
                                  type: integer
                                  example: 2
                                  description: The ID of the product variation.
                                price:
                                  type: number
                                  format: float
                                  example: 50
                                  description: The price of the product.
                                quantity:
                                  type: integer
                                  example: 1
                                  description: The quantity of the product ordered.
                                selected_vendor_id:
                                  type: integer
                                  example: 1
                                  description: The ID of the selected vendor.
                      order_items_shipping_address:
                        type: object
                        description: Shipping address details for the order.
                        properties:
                          id:
                            type: integer
                            example: 101
                          vh_user_id:
                            type: integer
                            example: 1
                      order_items_billing_address:
                        type: object
                        description: Billing address details for the order.
                        properties:
                          id:
                            type: integer
                            example: 102
                          vh_user_id:
                            type: integer
                            example: 1
                      total_mrp:
                        type: number
                        format: float
                        example: 150
                        description: Total amount for all products in the order.
                      order_paid_amount:
                        type: number
                        format: float
                        example: 150
                        description: Total amount paid for the order.
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Order not found.
                  data:
                    type: null
  /api/store/orders/{uuid}/action/{action}:
    patch:
      tags:
        - Orders
      summary: Perform an action on a order
      description: |
        This endpoint allows you to perform various actions on a order item, such as activating, deactivating, trashing, or restoring a order.
      operationId: itemActiOnOrder
      parameters:
        - $ref: '#/components/parameters/uuid'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/orders/action/{action}:
    put:
      tags:
        - Orders
      summary: bulk actions on orders
      description: This endpoint allows various bulk actions to be performed on orders list based on the provided action type.
      operationId: bulkActionsVendorProducts
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/orders/{uuid}/shipment-items:
    get:
      summary: Get shipped order items by UUID
      description: Retrieve order items shipment details for a specified order ID, including product variations, vendor information, and quantities shipped.
      operationId: getShippedOrderItems
      tags:
        - Orders
      parameters:
        - name: uuid
          in: path
          required: true
          description: The universally unique identifier (UUID) of the order.
          schema:
            type: string
            example: abcd1234-abcd1234
      responses:
        '200':
          description: Successfully retrieved shipped order items
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The ID of the order item.
                          example: 1
                        product:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the product.
                              example: 2
                            name:
                              type: string
                              description: The name of the product.
                              example: Sample Product
                        product_variation:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the product variation.
                              example: 3
                            variation_name:
                              type: string
                              description: The name of the product variation.
                              example: Red - Large
                        vendor:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the vendor.
                              example: 4
                            name:
                              type: string
                              description: The name of the vendor.
                              example: Vendor Name
                        quantity:
                          type: integer
                          description: The quantity of the product ordered.
                          example: 2
                        shipped_quantity:
                          type: integer
                          description: The total quantity shipped for this order item.
                          example: 1
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Order not found.
                  data:
                    type: null
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An unexpected error occurred.
                  data:
                    type: null
  /api/store/payments:
    get:
      tags:
        - Payments
      summary: Get list of payments
      description: Retrieve list of all the payments.
      operationId: getPaymentsList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Payment'
                      first_page_url:
                        type: string
                        example: http://url/api/store/payments?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/payments?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/payments
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      summary: Create a new payment
      description: This endpoint handles creating a new payment for one or more orders. Only Cash on Delivery (COD) payments are currently supported.
      operationId: createPaymentItem
      tags:
        - Payments
      requestBody:
        description: Data required to create a payment
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vh_st_payment_method_id:
                  type: integer
                  description: The payment method ID.
                  example: 1
                amount:
                  type: number
                  format: float
                  example: 50
                  description: The total amount provide for the payment.
                orders:
                  type: array
                  description: List of orders to be paid
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the order.
                        example: 1
                      user_name:
                        type: string
                        description: Name of the user placing the order.
                        example: John Doe
                      pay_amount:
                        type: number
                        format: float
                        description: The amount to be paid for the order.
                        example: 50
                      payable_amount:
                        type: number
                        format: float
                        description: The total amount payable for the order.
                        example: 50
                    required:
                      - id
                      - user_name
                      - pay_amount
                      - payable_amount
                payment_method:
                  type: object
                  properties:
                    slug:
                      type: string
                      description: The slug of the payment method (e.g., 'cod').
                      example: cod
                  required:
                    - slug
                notes:
                  type: string
                  description: Additional notes for the payment.
              required:
                - orders
                - vh_st_payment_method_id
                - payment_method
                - amount
      responses:
        '200':
          description: Successfully created a payment item
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      uuid:
                        type: string
                        nullable: true
                      transaction_id:
                        type: string
                        description: The unique transaction ID.
                      amount:
                        type: string
                      vh_st_payment_method_id:
                        type: integer
                      payment_method:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          slug:
                            type: string
                      taxonomy_id_payment_status:
                        type: integer
                      status:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          slug:
                            type: string
                      status_notes:
                        type: string
                        description: Notes regarding payment status.
                      date:
                        type: string
                        format: date-time
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
                        nullable: true
                      created_by:
                        type: integer
                        nullable: true
                      created_by_user:
                        type: object
                        nullable: true
                      updated_by:
                        type: integer
                        nullable: true
                      updated_by_user:
                        type: object
                        nullable: true
                      deleted_by:
                        type: integer
                        nullable: true
                      deleted_by_user:
                        type: object
                        nullable: true
                      order_payments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            uuid:
                              type: string
                              nullable: true
                            vh_st_payment_id:
                              type: integer
                            vh_st_order_id:
                              type: integer
                            taxonomy_id_order_payment_status:
                              type: integer
                            payable_amount:
                              type: string
                            payment_amount:
                              type: string
                            remaining_payable_amount:
                              type: string
                            date:
                              type: string
                              format: date-time
                              nullable: true
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                              nullable: true
                            taxonomy_order_payment_status:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                slug:
                                  type: string
                            order:
                              type: object
                              properties:
                                id:
                                  type: integer
                                uuid:
                                  type: string
                                vh_user_id:
                                  type: integer
                                order_status:
                                  type: string
                                amount:
                                  type: number
                                payable:
                                  type: number
                                paid:
                                  type: number
                                is_paid:
                                  type: integer
                                is_active:
                                  type: integer
                                created_at:
                                  type: string
                                  format: date-time
                                updated_at:
                                  type: string
                                  format: date-time
                                user:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                    first_name:
                                      type: string
                                    email:
                                      type: string
                                    phone:
                                      type: string
                                    display_name:
                                      type: string
                                    avatar:
                                      type: string
                                    name:
                                      type: string
        '400':
          description: Invalid input or validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: The payment amount for order 'John Doe' must be greater than 0.
        '422':
          description: Validation error for orders or payment method
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: The orders field is required.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An unexpected error occurred.
    put:
      tags:
        - Payments
      summary: Update list of payments
      description: This endpoint allows you to update multiple payments records based on the provided input, including actions like activating, deactivating, trashing, or restoring payments.
      operationId: updatePaymentsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the payments to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified payments have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Payments
      summary: Delete list of payments
      description: This endpoint allows you to delete multiple payment records based on the provided input.
      operationId: deletePaymentsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the payments to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified payments have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/payments/{id}:
    get:
      tags:
        - Payments
      summary: Get record by payment ID
      description: Retrieve a payment by its unique identifier.
      operationId: getPaymentById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Successfully created a payment item
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      uuid:
                        type: string
                        nullable: true
                      transaction_id:
                        type: string
                        description: The unique transaction ID.
                      amount:
                        type: string
                      vh_st_payment_method_id:
                        type: integer
                      payment_method:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          slug:
                            type: string
                      taxonomy_id_payment_status:
                        type: integer
                      status:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          slug:
                            type: string
                      status_notes:
                        type: string
                        description: Notes regarding payment status.
                      date:
                        type: string
                        format: date-time
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
                        nullable: true
                      created_by:
                        type: integer
                        nullable: true
                      created_by_user:
                        type: object
                        nullable: true
                      updated_by:
                        type: integer
                        nullable: true
                      updated_by_user:
                        type: object
                        nullable: true
                      deleted_by:
                        type: integer
                        nullable: true
                      deleted_by_user:
                        type: object
                        nullable: true
                      order_payments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            uuid:
                              type: string
                              nullable: true
                            vh_st_payment_id:
                              type: integer
                            vh_st_order_id:
                              type: integer
                            taxonomy_id_order_payment_status:
                              type: integer
                            payable_amount:
                              type: string
                            payment_amount:
                              type: string
                            remaining_payable_amount:
                              type: string
                            date:
                              type: string
                              format: date-time
                              nullable: true
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                              nullable: true
                            taxonomy_order_payment_status:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                slug:
                                  type: string
                            order:
                              type: object
                              properties:
                                id:
                                  type: integer
                                uuid:
                                  type: string
                                vh_user_id:
                                  type: integer
                                order_status:
                                  type: string
                                amount:
                                  type: number
                                payable:
                                  type: number
                                paid:
                                  type: number
                                is_paid:
                                  type: integer
                                is_active:
                                  type: integer
                                created_at:
                                  type: string
                                  format: date-time
                                updated_at:
                                  type: string
                                  format: date-time
                                user:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                    first_name:
                                      type: string
                                    email:
                                      type: string
                                    phone:
                                      type: string
                                    display_name:
                                      type: string
                                    avatar:
                                      type: string
                                    name:
                                      type: string
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Payments
      summary: Update an existing record
      description: Update a payment notes with the specified ID using the provided details.
      operationId: updatePaymentById
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
                  description: Notes related to the status of the payment.
                  maxLength: 100
              required:
                - notes
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Payment'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Payments
      summary: Delete a record by ID
      description: Delete a single payment by its ID.
      operationId: deletePaymentById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Payment Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/payments/{id}/action/{action}:
    patch:
      tags:
        - Payments
      summary: Perform an action on a payment
      description: |
        This endpoint allows you to perform various actions on a payment item, such as activating, deactivating, trashing, or restoring a payment.
      operationId: itemActiOnOrder
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/payments/action/{action}:
    put:
      tags:
        - Payments
      summary: bulk actions on orders
      description: This endpoint allows various bulk actions to be performed on orders list based on the provided action type.
      operationId: bulkActionsVendorProducts
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/payments/search/orders:
    post:
      tags:
        - Payments
      summary: Search active orders with unpaid balances.
      operationId: searchOrders
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: The search query to filter orders based on the user's display name, first name, or email.
          required: false
      responses:
        '200':
          description: A list of orders matching the search criteria.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the search was successful.
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The order ID.
                        amount:
                          type: number
                          format: float
                          description: The total amount of the order.
                        paid:
                          type: number
                          format: float
                          description: The amount already paid for the order.
                        payable_amount:
                          type: number
                          format: float
                          description: The remaining amount to be paid for the order.
                        user_name:
                          type: string
                          description: The display name of the user who placed the order.
                        vh_user_id:
                          type: integer
                          description: The user ID which the order belongs to.
                        created_at:
                          type: string
                          format: date-time
                          description: The date and time the order was created.
                        updated_at:
                          type: string
                          format: date-time
                          description: The date and time the order was last updated.
  /api/store/shipments:
    get:
      tags:
        - Shipments
      summary: Get list of all shipments
      description: Retrieve list of all the shipments.
      operationId: getShipments
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Shipment'
                      first_page_url:
                        type: string
                        example: http://url/api/store/shipments?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/shipments?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/shipments
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Shipments
      summary: Create a shipment
      operationId: createItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                orders:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Unique identifier for the order.
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Unique identifier for the order item.
                            to_be_shipped:
                              type: integer
                              description: Quantity of the item to be shipped.
                            pending:
                              type: integer
                              description: Pending quantity of the order item.
                            product_variation:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Name of the product variation associated with the order item.
                                  id:
                                    type: integer
                                    nullable: true
                                    description: Unique identifier for the order item or product variation.
                              required:
                                - name
                          required:
                            - id
                            - to_be_shipped
                            - pending
                            - product_variation
                    required:
                      - id
                taxonomy_id_shipment_status:
                  type: integer
                  description: Identifier for the shipment status taxonomy.
                status:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Unique identifier for the shipment status.
              required:
                - name
                - orders
                - taxonomy_id_shipment_status
                - status
      responses:
        '200':
          description: Shipment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
                  data:
                    $ref: '#/components/schemas/Shipment'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The name field is required.
                      - The orders field is required.
                      - The status field is required.
                      - 'To be shipped quantity should not exceed pending quantity for item: Product Variation Name'
    put:
      tags:
        - Shipments
      summary: Update a list of shipments
      description: This endpoint allows you to update multiple shipments records based on the provided input, including actions like activating, deactivating, trashing, or restoring shipments.
      operationId: updateShipmentsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the shipments to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified shipments have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Shipments
      summary: Delete a list of shipments
      description: This endpoint allows you to delete multiple shipments records based on the provided input.
      operationId: deleteShipmentsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the shipments to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified brands have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/shipments/{id}:
    get:
      tags:
        - Shipments
      summary: Get record by shipment ID
      description: Retrieve a shipment by its unique identifier.
      operationId: getShipmentById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                  data:
                    type: object
                    description: Contains the shipment details.
                    properties:
                      id:
                        type: integer
                        description: The unique ID of the shipment.
                      uuid:
                        type: string
                        description: The UUID of the shipment.
                      taxonomy_id_shipment_status:
                        type: integer
                        description: The ID of the taxonomy for the shipment status.
                      name:
                        type: string
                        description: The name of the shipment (e.g., default product name).
                      tracking_url:
                        type: string
                        description: The URL for tracking the shipment.
                      tracking_key:
                        type: string
                        description: The tracking key provided by the shipping service.
                      tracking_value:
                        type: string
                        description: The tracking value or message associated with the shipment.
                      total_shipment:
                        type: string
                        nullable: true
                        description: The total number of shipments (if available).
                      is_trackable:
                        type: integer
                        description: Indicates whether the shipment is trackable (1 = trackable, 0 = not trackable).
                      meta:
                        type: object
                        nullable: true
                        description: Metadata for the shipment, if available.
                      created_by:
                        type: integer
                        description: The ID of the user who created the shipment.
                      updated_by:
                        type: integer
                        description: The ID of the user who last updated the shipment.
                      deleted_by:
                        type: integer
                        nullable: true
                        description: The ID of the user who deleted the shipment, if applicable.
                      created_at:
                        type: string
                        format: date-time
                        description: The timestamp of when the shipment was created.
                      updated_at:
                        type: string
                        format: date-time
                        description: The timestamp of when the shipment was last updated.
                      deleted_at:
                        type: string
                        format: date-time
                        nullable: true
                        description: The timestamp of when the shipment was deleted, if applicable.
                      is_items_exist_already:
                        type: boolean
                        description: Indicates whether the items in the shipment already exist in the order.
                      created_by_user:
                        type: object
                        description: Information about the user who created the shipment.
                        properties:
                          id:
                            type: integer
                            description: The ID of the user.
                          uuid:
                            type: string
                            description: The UUID of the user.
                          first_name:
                            type: string
                            description: The user's first name.
                          last_name:
                            type: string
                            description: The user's last name.
                          email:
                            type: string
                            description: The user's email address.
                          avatar:
                            type: string
                            description: The URL of the user's avatar.
                          name:
                            type: string
                            description: The full name of the user.
                      updated_by_user:
                        type: object
                        description: Information about the user who last updated the shipment.
                        properties:
                          id:
                            type: integer
                            description: The ID of the user.
                          uuid:
                            type: string
                            description: The UUID of the user.
                          first_name:
                            type: string
                            description: The user's first name.
                          last_name:
                            type: string
                            description: The user's last name.
                          email:
                            type: string
                            description: The user's email address.
                          avatar:
                            type: string
                            description: The URL of the user's avatar.
                          name:
                            type: string
                            description: The full name of the user.
                      status:
                        type: object
                        description: The current status of the shipment.
                        properties:
                          id:
                            type: integer
                            description: The ID of the shipment status.
                          uuid:
                            type: string
                            description: The UUID of the shipment status.
                          name:
                            type: string
                            description: The name of the shipment status (e.g., "Partially Shipped").
                          is_active:
                            type: integer
                            description: Indicates whether the status is active.
                      shipment_order_items:
                        type: array
                        description: A list of order items in the shipment.
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the order item in the shipment.
                            uuid:
                              type: string
                              description: The UUID of the order item.
                            vh_st_order_id:
                              type: integer
                              description: The ID of the order associated with the item.
                            vh_user_id:
                              type: integer
                              description: The ID of the user who placed the order.
                            vh_st_product_id:
                              type: integer
                              description: The ID of the product in the order.
                            quantity:
                              type: integer
                              description: The quantity of the product in the shipment.
                            price:
                              type: string
                              description: The price of the product in the order.
                            overall_shipped_quantity:
                              type: string
                              description: The total quantity of items shipped so far.
                            pivot:
                              type: object
                              description: Pivot data showing the association between the shipment and the order item.
                              properties:
                                vh_st_shipment_id:
                                  type: integer
                                  description: The ID of the shipment.
                                vh_st_order_item_id:
                                  type: integer
                                  description: The ID of the order item.
                                quantity:
                                  type: integer
                                  description: The quantity of the item shipped.
                                pending:
                                  type: integer
                                  description: The remaining quantity yet to be shipped.
                            product_variation:
                              type: object
                              description: Information about the product variation.
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the product variation.
                                name:
                                  type: string
                                  description: The name of the product variation.
                            vendor:
                              type: object
                              description: Information about the vendor.
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the vendor.
                                name:
                                  type: string
                                  description: The name of the vendor.
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Shipments
      summary: Update an existing record
      description: Update a shipment record with the specified ID using the provided details.
      operationId: updateShipment
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the shipment.
                is_trackable:
                  type: integer
                  description: Indicates if the shipment is trackable (1 = trackable, 0 = not trackable).
                orders:
                  type: array
                  description: List of orders associated with the shipment.
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The order ID.
                      vh_user_id:
                        type: integer
                        description: The user ID who placed the order.
                      order_status:
                        type: string
                        description: The current status of the order.
                      items:
                        type: array
                        description: A list of items within the order.
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the order item.
                            to_be_shipped:
                              type: integer
                              nullable: true
                              description: Quantity of the item to be shipped in this shipment.
                            shipped:
                              type: integer
                              nullable: true
                              description: Quantity of the item that has already been shipped.
                            pending:
                              type: integer
                              description: The pending quantity of the item.
                            quantity:
                              type: integer
                              description: The total quantity of the item.
                          required:
                            - id
                            - to_be_shipped
                            - shipped
                            - pending
                            - quantity
                    required:
                      - items
                      - id
                      - order_status
                taxonomy_id_shipment_status:
                  type: integer
                  description: The ID of the shipment status taxonomy.
                status:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Unique identifier for the shipment status.
                tracking_url:
                  type: string
                  description: The tracking URL for the shipment.
                tracking_key:
                  type: string
                  description: The tracking key for the shipment.
                tracking_value:
                  type: string
                  description: The tracking value or message associated with the shipment.
              required:
                - name
                - is_trackable
                - orders
                - taxonomy_id_shipment_status
                - status
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
                  data:
                    type: object
                    description: Contains the shipment details.
                    properties:
                      id:
                        type: integer
                        description: The unique ID of the shipment.
                      uuid:
                        type: string
                        description: The UUID of the shipment.
                      taxonomy_id_shipment_status:
                        type: integer
                        description: The ID of the taxonomy for the shipment status.
                      name:
                        type: string
                        description: The name of the shipment (e.g., default product name).
                      tracking_url:
                        type: string
                        description: The URL for tracking the shipment.
                      tracking_key:
                        type: string
                        description: The tracking key provided by the shipping service.
                      tracking_value:
                        type: string
                        description: The tracking value or message associated with the shipment.
                      total_shipment:
                        type: string
                        nullable: true
                        description: The total number of shipments (if available).
                      is_trackable:
                        type: integer
                        description: Indicates whether the shipment is trackable (1 = trackable, 0 = not trackable).
                      meta:
                        type: object
                        nullable: true
                        description: Metadata for the shipment, if available.
                      created_by:
                        type: integer
                        description: The ID of the user who created the shipment.
                      updated_by:
                        type: integer
                        description: The ID of the user who last updated the shipment.
                      deleted_by:
                        type: integer
                        nullable: true
                        description: The ID of the user who deleted the shipment, if applicable.
                      created_at:
                        type: string
                        format: date-time
                        description: The timestamp of when the shipment was created.
                      updated_at:
                        type: string
                        format: date-time
                        description: The timestamp of when the shipment was last updated.
                      deleted_at:
                        type: string
                        format: date-time
                        nullable: true
                        description: The timestamp of when the shipment was deleted, if applicable.
                      is_items_exist_already:
                        type: boolean
                        description: Indicates whether the items in the shipment already exist in the order.
                      created_by_user:
                        type: object
                        description: Information about the user who created the shipment.
                        properties:
                          id:
                            type: integer
                            description: The ID of the user.
                          uuid:
                            type: string
                            description: The UUID of the user.
                          first_name:
                            type: string
                            description: The user's first name.
                          last_name:
                            type: string
                            description: The user's last name.
                          email:
                            type: string
                            description: The user's email address.
                          avatar:
                            type: string
                            description: The URL of the user's avatar.
                          name:
                            type: string
                            description: The full name of the user.
                      updated_by_user:
                        type: object
                        description: Information about the user who last updated the shipment.
                        properties:
                          id:
                            type: integer
                            description: The ID of the user.
                          uuid:
                            type: string
                            description: The UUID of the user.
                          first_name:
                            type: string
                            description: The user's first name.
                          last_name:
                            type: string
                            description: The user's last name.
                          email:
                            type: string
                            description: The user's email address.
                          avatar:
                            type: string
                            description: The URL of the user's avatar.
                          name:
                            type: string
                            description: The full name of the user.
                      status:
                        type: object
                        description: The current status of the shipment.
                        properties:
                          id:
                            type: integer
                            description: The ID of the shipment status.
                          uuid:
                            type: string
                            description: The UUID of the shipment status.
                          name:
                            type: string
                            description: The name of the shipment status (e.g., "Partially Shipped").
                          is_active:
                            type: integer
                            description: Indicates whether the status is active.
                      shipment_order_items:
                        type: array
                        description: A list of order items in the shipment.
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the order item in the shipment.
                            uuid:
                              type: string
                              description: The UUID of the order item.
                            vh_st_order_id:
                              type: integer
                              description: The ID of the order associated with the item.
                            vh_user_id:
                              type: integer
                              description: The ID of the user who placed the order.
                            vh_st_product_id:
                              type: integer
                              description: The ID of the product in the order.
                            quantity:
                              type: integer
                              description: The quantity of the product in the shipment.
                            price:
                              type: string
                              description: The price of the product in the order.
                            overall_shipped_quantity:
                              type: string
                              description: The total quantity of items shipped so far.
                            pivot:
                              type: object
                              description: Pivot data showing the association between the shipment and the order item.
                              properties:
                                vh_st_shipment_id:
                                  type: integer
                                  description: The ID of the shipment.
                                vh_st_order_item_id:
                                  type: integer
                                  description: The ID of the order item.
                                quantity:
                                  type: integer
                                  description: The quantity of the item shipped.
                                pending:
                                  type: integer
                                  description: The remaining quantity yet to be shipped.
                            product_variation:
                              type: object
                              description: Information about the product variation.
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the product variation.
                                name:
                                  type: string
                                  description: The name of the product variation.
                            vendor:
                              type: object
                              description: Information about the vendor.
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the vendor.
                                name:
                                  type: string
                                  description: The name of the vendor.
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The name field is required.
                      - The orders field is required.
                      - The status field is required.
                      - 'To be shipped quantity should not exceed pending quantity for item: Product Variation Name'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Shipments
      summary: Delete a record by ID
      description: Delete a single shipment by its ID.
      operationId: deleteShipmentById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Shipment Deleted Successfull
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/shipments/{item_id}/items:
    get:
      tags:
        - Shipments
      summary: Get shipped Order Items
      description: Retrieves the list of shipped items for a specific order item ID.
      operationId: getShipmentItemList
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the order item to retrieve the shipped items for.
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved shipment items.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      shipment_items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the shipment item.
                            vh_st_shipment_id:
                              type: integer
                              description: TThe ID of the associated shipment.
                            vh_st_order_id:
                              type: integer
                              description: The ID of the order associated with this shipment.
                            vh_st_order_item_id:
                              type: integer
                              description: The ID of the order item associated with this shipment.
                            quantity:
                              type: integer
                              description: The quantity of this item that has been shipped.
                            pending:
                              type: integer
                              description: The quantity of this item that is pending shipment.
                            total_quantity:
                              type: integer
                              description: The total quantity of the order item.
                      total_quantity_to_be_shipped:
                        type: integer
                        description: The total quantity of the order item to be shipped.
                        example: 5
        '404':
          description: Not Found, the specified order item does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Record does not exist.
    put:
      summary: Update Shipped Item Quantities
      description: Updates the quantities of shipped items based on the provided shipment item details.
      operationId: saveEditedShippedQuantity
      tags:
        - Shipments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipment_id:
                  type: integer
                  description: The ID of the shipment being updated.
                available_quantity:
                  type: integer
                  description: The Total available quantity of the order item.
                shipment_items:
                  type: array
                  description: List of shipment items with their updated quantities.
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the shipment item.
                      vh_st_order_item_id:
                        type: integer
                        description: The ID of the order item associated with this shipment item.
                      quantity:
                        type: integer
                        description: The updated quantity of this item that has been shipped.
                      pending:
                        type: integer
                        description: The updated quantity of this item that is pending shipment.
                    required:
                      - id
                      - vh_st_order_item_id
                      - quantity
                      - pending
              required:
                - shipment_id
                - available_quantity
                - shipment_items
      responses:
        '200':
          description: Successful update of shipped item quantities.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully.
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Shipment'
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'The record does not exist for shipment item ID:'
                      - 'The record does not exist for order item ID:'
                      - 'Shipment quantity exceeds available quantity for item ID:'
                      - Total shipment quantity exceeds available quantity.
  /api/store/shipments/{id}/action/{action}:
    patch:
      tags:
        - Shipments
      summary: Perform an action on a shipment
      description: |
        This endpoint allows you to perform various actions on a shipment item, such as activating, deactivating, trashing, or restoring a shipment.
      operationId: itemActionShipment
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/shipments/action/{action}:
    put:
      tags:
        - Shipments
      summary: bulk actions on shipments
      description: This endpoint allows various bulk actions to be performed on shipments list based on the provided action type.
      operationId: bulkActionsShipments
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/shipments/search/orders:
    post:
      summary: Search/get Orders with the Quantities Records
      operationId: searchOrders
      tags:
        - Shipments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: The search query string (can be user display name, first name, or email).
      responses:
        '200':
          description: A list of orders with quantities records
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Order ID
                          example: 1
                        amount:
                          type: number
                          format: float
                          description: Total order amount
                          example: 99.99
                        paid:
                          type: boolean
                          description: Whether the order is paid
                          example: true
                        created_at:
                          type: string
                          format: date-time
                          description: Order creation timestamp
                          example: '2023-10-10T12:00:00Z'
                        updated_at:
                          type: string
                          format: date-time
                          description: Order update timestamp
                          example: '2023-10-10T14:00:00Z'
                        user_name:
                          type: string
                          description: User's display name
                          example: John Doe
                        items:
                          type: array
                          description: Items associated with the order
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: Item ID
                                example: 1
                              uuid:
                                type: string
                                description: Item UUID
                              vh_st_product_variation_id:
                                type: integer
                                description: Product variation ID
                                example: 1
                              quantity:
                                type: integer
                                description: Ordered quantity
                                example: 10
                              name:
                                type: string
                                description: Product variation name
                                example: Product Variation Name
                              shipped:
                                type: integer
                                description: Shipped quantity
                                example: 5
                              pending:
                                type: integer
                                description: Pending quantity
                                example: 5
                              overall_shipped_quantity:
                                type: integer
                                description: Overall shipped quantity
                                example: 5
                              exists_in_shipment:
                                type: boolean
                                description: Whether the item exists in a shipment
                                example: true
  /api/store/productattributes:
    get:
      tags:
        - Product Attributes
      summary: Get list of product attributes
      description: Retrieve list of all the product attributes.
      operationId: getProductAttributesList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProductAttribute'
                      first_page_url:
                        type: string
                        example: http://url/api/store/productattributes?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/productattributes?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/productattributes
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Product Attributes
      summary: Create a new product attribute.
      operationId: createProductAttribute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vh_st_product_variation_id:
                  type: integer
                  description: The ID of the product variation.
                vh_st_attribute_id:
                  type: integer
                  description: The ID of the attribute.
                attribute_values:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the attribute value.
                      new_value:
                        type: string
                        description: The new attribute value.
                        maxLength: 100
                      default_value:
                        type: string
                        description: The default attribute value.
                    required:
                      - id
                      - new_value
                      - default_value
              required:
                - vh_st_product_variation_id
                - vh_st_attribute_id
      responses:
        '200':
          description: Successfully created a product attribute.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the operation was successful.
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductAttribute'
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the operation was successful.
                  errors:
                    type: array
                    items:
                      type: string
                    description: A list of validation error messages.
                    example:
                      - The Product Variation field is required
                      - The Attribute field is required
                      - The Attribute Value field should not exceed 100 characters
    put:
      tags:
        - Product Attributes
      summary: Update list of product attributes
      description: This endpoint allows you to update multiple product attributes records based on the provided input, including actions like activating, deactivating, trashing, or restoring product attributes.
      operationId: updateProductAttributesList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product attributes to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified product attributes have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Product Attributes
      summary: Delete list of product attributes
      description: This endpoint allows you to delete multiple product attribute records based on the provided input.
      operationId: deleteProductAttributesList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the payments to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified payments have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/productattributes/{id}:
    get:
      tags:
        - Product Attributes
      summary: Get record by product attribute ID
      description: Retrieve a product attribute by its unique identifier.
      operationId: getProductAttributeById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product-attribute Retrieved Succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ProductAttribute'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Product Attributes
      summary: Update an existing record
      description: Update a product attribute record with the specified ID using the provided details.
      operationId: updateProductAttribute
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vh_st_product_variation_id:
                  type: integer
                  description: The ID of the product variation.
                vh_st_attribute_id:
                  type: integer
                  description: The ID of the attribute.
                attribute:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the attribute.
                    id:
                      type: integer
                      description: The ID of the attribute.
                    type:
                      type: string
                      description: The type of the attribute.
                    deleted_at:
                      type: string
                      format: date-time
                      nullable: true
                      description: The timestamp when the attribute was deleted.
                  required:
                    - id
                    - name
                attribute_values:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the attribute value.
                      default_value:
                        type: string
                        description: The default value of the attribute.
                      new_value:
                        type: string
                        description: The new value of the attribute, if provided.
                    required:
                      - id
                      - default_value
                      - new_value
              required:
                - vh_st_product_variation_id
                - vh_st_attribute_id
                - attribute
                - attribute_values
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ProductAttribute'
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Product Attributes
      summary: Delete a record by ID
      description: Delete a single product attribute by its ID.
      operationId: deleteProductAttributeById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product attribute Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/productattributes/{id}/action/{action}:
    patch:
      tags:
        - Product Attributes
      summary: Perform an action on a product attribute
      description: |
        This endpoint allows you to perform various actions on a product attribute item, such as activating, deactivating, trashing, or restoring a product attribute.
      operationId: itemActionProductAttribute
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/productattributes/action/{action}:
    put:
      tags:
        - Product Attributes
      summary: bulk actions on product attributes
      description: This endpoint allows various bulk actions to be performed on product attributes list based on the provided action type.
      operationId: bulkActionsProductAttributes
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/productmedias:
    get:
      tags:
        - Product Medias
      summary: Get list of all product media
      description: Retrieve list of all the product medias.
      operationId: getProductStocksList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/products'
        - $ref: '#/components/parameters/product_variations'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProductMedia'
                      first_page_url:
                        type: string
                        example: http://url/api/store/productmedias?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/productmedias?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/productmedias
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Product Medias
      summary: Update a list of product medias
      description: This endpoint allows you to update multiple product medias records based on the provided input, including actions like activating, deactivating, trashing, or restoring product medias.
      operationId: updateProductMediasList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product medias to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified product medias have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Product Medias
      summary: Delete list of product medias
      description: This endpoint allows you to delete multiple product medias records based on the provided input.
      operationId: deleteProductMediasList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the product medias to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified product medias have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/productmedias/{id}:
    get:
      tags:
        - Product Medias
      summary: Get record by product media ID
      description: Retrieve a product media by its unique identifier.
      operationId: getProductMediaById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product-media Retrieved Succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the operation was successful
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Product media ID
                      uuid:
                        type: string
                        description: Unique identifier of the product media
                      vh_st_product_id:
                        type: integer
                        description: Associated product ID
                      taxonomy_id_product_media_status:
                        type: integer
                        description: Status taxonomy ID of the product media
                      name:
                        type: string
                        description: Name of the product media
                      type:
                        type: string
                        description: Type of the media (e.g., "image")
                      status_notes:
                        type: string
                        description: Additional notes on the media status
                      is_active:
                        type: boolean
                        description: Whether the product media is active
                      created_by:
                        type: integer
                        description: User ID who created the product media
                      updated_by:
                        type: integer
                        description: User ID who last updated the product media
                      deleted_by:
                        type: integer
                        nullable: true
                        description: User ID who deleted the product media, if applicable
                      created_at:
                        type: string
                        format: date-time
                        description: Creation timestamp
                      updated_at:
                        type: string
                        format: date-time
                        description: Last update timestamp
                      deleted_at:
                        type: string
                        format: date-time
                        nullable: true
                        description: Deletion timestamp, if applicable
                      listed_variation:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Variation ID
                            name:
                              type: string
                              description: Variation name
                            slug:
                              type: string
                              description: Variation slug
                      base_path:
                        type: string
                        description: Base path for accessing media
                      images:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Image ID
                            uuid:
                              type: string
                              description: Unique identifier of the image
                            vh_st_product_media_id:
                              type: integer
                              description: Product media ID associated with the image
                            name:
                              type: string
                              description: Image name
                            slug:
                              type: string
                              description: Image slug
                            url:
                              type: string
                              description: URL of the image
                            path:
                              type: string
                              description: Path where the image is stored
                            size:
                              type: integer
                              description: Size of the image in bytes
                            type:
                              type: string
                              description: Type of the image (e.g., "image")
                            extension:
                              type: string
                              description: File extension of the image
                            mime_type:
                              type: string
                              description: MIME type of the image
                            url_thumbnail:
                              type: string
                              description: Thumbnail URL of the image
                            thumbnail_size:
                              type: integer
                              description: Size of the thumbnail in bytes
                      created_by_user:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: User ID
                      updated_by_user:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: User ID
                      status:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Status ID
                          name:
                            type: string
                            description: Status name
                          slug:
                            type: string
                            description: Status slug
                      product:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Product ID
                          name:
                            type: string
                            description: Product name
                          slug:
                            type: string
                            description: Product slug
                          deleted_at:
                            type: string
                            format: date-time
                            nullable: true
                            description: Product deletion timestamp
                      product_variation_media:
                        type: array
                        description: This contains the variations array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Product variation media ID
                            pivot:
                              type: object
                              properties:
                                vh_st_product_media_id:
                                  type: integer
                                  description: Product media ID
                                vh_st_product_variation_id:
                                  type: integer
                                  description: Product variation ID
                                vh_st_product_id:
                                  type: integer
                                  description: Product ID associated with the pivot
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Product Medias
      summary: Delete a record by ID
      description: Delete a single product media by its ID.
      operationId: deleteProductMediaById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Product media Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/productmedias/{id}/action/{action}:
    patch:
      tags:
        - Product Medias
      summary: Perform an action on a product media
      description: |
        This endpoint allows you to perform various actions on a product media item, such as activating, deactivating, trashing, or restoring a product media.
      operationId: itemActionProductMedia
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/productmedias/action/{action}:
    put:
      tags:
        - Product Medias
      summary: bulk actions on product medias
      description: This endpoint allows various bulk actions to be performed on product medias list based on the provided action type.
      operationId: bulkActionsProductMedias
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/categories:
    get:
      tags:
        - Categories
      summary: Get list of all categories
      description: Retrieve list of all the categories.
      operationId: getCategoriesList
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/category'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Category'
                      first_page_url:
                        type: string
                        example: http://url/api/store/categories?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/categories?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/categories
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Categories
      summary: Create a category
      operationId: createItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the category
                slug:
                  type: string
                  description: Slug for the category
                parent_id:
                  type: integer
                  nullable: true
                  description: Id of the parent category
                is_active:
                  type: integer
                  nullable: true
                  description: Indicates if the category is active (1 = active, 0 = inactive, null if status is unknown or not set)
              required:
                - name
                - slug
                - parent_id
                - is_active
      responses:
        '200':
          description: Category created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
                  data:
                    $ref: '#/components/schemas/Category'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The Name field is required.
        '409':
          description: Conflict error if Name already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Name already exists for this category.
    put:
      tags:
        - Categories
      summary: Update list of categories
      description: This endpoint allows you to update multiple categories records based on the provided input, including actions like activating, deactivating, trashing, or restoring categories.
      operationId: updateCategoriesList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the categories to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified categories have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  properties:
                    success:
                      type: boolean
                      example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Categories
      summary: Delete list of categories
      description: This endpoint allows you to delete multiple categories records based on the provided input.
      operationId: deleteCategoriesList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the categories to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified categories have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  properties:
                    success:
                      type: boolean
                      example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/categories/{id}:
    get:
      tags:
        - Categories
      summary: Get record by category ID
      description: Retrieve a category by its unique identifier.
      operationId: getCategoryById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Category Retrieved Succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Category'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Categories
      summary: Update an existing record
      description: Update a category record with the specified ID using the provided details.
      operationId: updateCategory
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the category
                slug:
                  type: string
                  description: Slug for the category
                parent_id:
                  type: integer
                  nullable: true
                  description: Id of the parent category
                parent_category:
                  type: object
                  additionalProperties:
                    type: boolean
                  description: Object representing parent category mapping where keys are parent category IDs and values are boolean (true = valid relationship)
                  example:
                    '15': true
                is_active:
                  type: integer
                  nullable: true
                  description: Indicates if the category is active (1 = active, 0 = inactive, null if status is unknown or not set)
              required:
                - name
                - slug
                - parent_id
                - is_active
                - parent_category
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Category'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Categories
      summary: Delete a record by ID
      description: Delete a single category by its ID.
      operationId: deleteCategoryById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Category Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/categories/{id}/action/{action}:
    patch:
      tags:
        - Categories
      summary: Perform an action on a category
      description: |
        This endpoint allows you to perform various actions on a category item, such as activating, deactivating, trashing, or restoring a category.
      operationId: itemActionCategories
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/categories/action/{action}:
    put:
      tags:
        - Categories
      summary: bulk actions on categories
      description: This endpoint allows various bulk actions to be performed on categories list based on the provided action type.
      operationId: bulkActionsCategories
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/brands:
    get:
      tags:
        - Brands
      summary: Get list of all brands
      description: Retrieve list of all the brands.
      operationId: getBrands
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/status'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Brand'
                      first_page_url:
                        type: string
                        example: http://url/api/store/brands?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/brands?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/brands
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Brands
      summary: Create a brand
      operationId: createItem
      requestBody:
        $ref: '#/components/requestBodies/BrandsRequestBody'
      responses:
        '200':
          description: Brand created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
                  data:
                    $ref: '#/components/schemas/Brand'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Brand already exists for this variation.
        '409':
          description: Conflict error if brand already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Brand already exists for this variation.
    put:
      tags:
        - Brands
      summary: Update a list of brands
      description: This endpoint allows you to update multiple brands records based on the provided input, including actions like activating, deactivating, trashing, or restoring brands.
      operationId: updateBrandsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the brands to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified brands have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Brands
      summary: Delete a list of brands
      description: This endpoint allows you to delete multiple brands records based on the provided input.
      operationId: deleteBrandssList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the brands to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified brands have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/brands/{id}:
    get:
      tags:
        - Brands
      summary: Get record by brand ID
      description: Retrieve a brand by its unique identifier.
      operationId: getBrandById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Brand Retrieved Succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Brand'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Brands
      summary: Update an existing record
      description: Update a brand record with the specified ID using the provided details.
      operationId: updateBrand
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/BrandsRequestBody'
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Brand'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Brands
      summary: Delete a record by ID
      description: Delete a single brand by its ID.
      operationId: deleteBrandById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Brand Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/brands/{id}/action/{action}:
    patch:
      tags:
        - Brands
      summary: Perform an action on a brand
      description: |
        This endpoint allows you to perform various actions on a brand item, such as activating, deactivating, trashing, or restoring a brand.
      operationId: itemActionBrand
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/brands/action/{action}:
    put:
      tags:
        - Brands
      summary: bulk actions on brands
      description: This endpoint allows various bulk actions to be performed on brands list based on the provided action type.
      operationId: bulkActionsBrands
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/warehouses:
    get:
      tags:
        - Warehouses
      summary: Get list of all warehouse
      description: Retrieve list of all the warehouses.
      operationId: getWarehouses
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/country'
        - $ref: '#/components/parameters/address'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Warehouse'
                      first_page_url:
                        type: string
                        example: http://url/api/store/warehouses?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/warehouses?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/warehouses
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Warehouses
      summary: Create a warehouse
      operationId: createItem
      requestBody:
        $ref: '#/components/requestBodies/WarehousesRequestBody'
      responses:
        '200':
          description: warehouse created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
                  data:
                    $ref: '#/components/schemas/Warehouse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - warehouse already exists for this vendor.
        '409':
          description: Conflict error if warehouse already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - warehouse exists for this vendor.
    put:
      tags:
        - Warehouses
      summary: Update a list of warehouses
      description: This endpoint allows you to update multiple warehouses records based on the provided input, including actions like activating, deactivating, trashing, or restoring warehouses.
      operationId: updateWarehousesList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the warehouses to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified warehouses have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Warehouses
      summary: Delete a list of warehouses
      description: This endpoint allows you to delete multiple warehouses records based on the provided input.
      operationId: deleteWarehousesList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the warehouse to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified warehouses have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/warehouses/{id}:
    get:
      tags:
        - Warehouses
      summary: Get record by warehouse ID
      description: Retrieve a warehouse by its unique identifier.
      operationId: getWarehouseById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Warehouse Retrieved Succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Warehouse'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Warehouses
      summary: Update an existing record
      description: Update a warehouse record with the specified ID using the provided details.
      operationId: updateWarehouse
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/WarehousesRequestBody'
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Warehouse'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Warehouses
      summary: Delete a record by ID
      description: Delete a single warehouse by its ID.
      operationId: deleteWarehouseById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Brand Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/warehouses/{id}/action/{action}:
    patch:
      tags:
        - Warehouses
      summary: Perform an action on a warehouse
      description: |
        This endpoint allows you to perform various actions on a warehouse item, such as activating, deactivating, trashing, or restoring a warehouse.
      operationId: itemActionWarehouse
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/warehouses/action/{action}:
    put:
      tags:
        - Warehouses
      summary: bulk actions on warehouses
      description: This endpoint allows various bulk actions to be performed on warehouses list based on the provided action type.
      operationId: bulkActionswarehouses
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/addresses/assets:
    get:
      summary: Get assets for addresses.
      description: Retrieve various assets related to addresses, such as permissions, rows per page, fillable columns, taxonomies, and countries.
      operationId: getAssets
      tags:
        - Addresses
      responses:
        '200':
          description: Assets retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                    example: true
                  data:
                    type: object
                    properties:
                      permissions:
                        type: array
                        description: A list of permissions for the current authenticated user.
                        items:
                          type: string
                          example: view-addresses
                      rows:
                        type: integer
                        description: Number of rows per page as configured.
                        example: 10
                      fillable:
                        type: object
                        properties:
                          columns:
                            type: array
                            description: List of fillable columns in the address model.
                            items:
                              type: string
                              example: address_line_1
                          except:
                            type: array
                            description: List of columns that are not fillable in the address model.
                            items:
                              type: string
                              example: created_at
                      empty_item:
                        type: object
                        description: An empty item structure for the address model.
                        example:
                          address_line_1: ''
                          address_line_2: ''
                          city: ''
                          country: ''
                          pin_code: ''
                      taxonomy:
                        type: object
                        properties:
                          types:
                            type: array
                            description: Taxonomies related to address types.
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID of the taxonomy.
                                  example: 46
                                name:
                                  type: string
                                  description: Name of the address type.
                                  example: Billing
                          status:
                            type: array
                            description: Taxonomies related to address statuses.
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID of the address status.
                                  example: 50
                                name:
                                  type: string
                                  description: Name of the status.
                                  example: Approved
                      countries:
                        type: array
                        description: List of available countries.
                        items:
                          type: string
                          example: India
                      actions:
                        type: array
                        description: List of available actions for the user.
                        items:
                          type: string
                          example: create-address
        '500':
          description: An error occurred while retrieving assets.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    description: List of error messages.
                    items:
                      type: string
                      example: Something went wrong.
                  hint:
                    type: array
                    description: Debugging hints (only in debug mode).
                    items:
                      type: string
                      example: Trace details...
  /api/store/addresses:
    get:
      tags:
        - Addresses
      summary: Get list of addresses
      description: Retrieve list of all the addresses.
      operationId: getAddresses
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_is_default'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/users'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Address'
                      first_page_url:
                        type: string
                        example: http://url/api/store/addresses?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/addresses?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/addresses
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Addresses
      summary: Create an user address
      operationId: createItem
      requestBody:
        description: Create a new address for a user.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vh_user_id:
                  type: integer
                  description: The ID of the user associated with the address.
                address_line_1:
                  type: string
                  description: The first line of the address.
                address_line_2:
                  type: string
                  nullable: true
                  description: The second line of the address.
                city:
                  type: string
                  description: The city of the address.
                state:
                  type: string
                  description: The state of the address.
                pin_code:
                  type: string
                  description: The postal code or ZIP code for the address.
                country:
                  type: string
                  description: The country of the address.
                phone:
                  type: string
                  nullable: true
                  description: The phone number associated with the address.
                is_default:
                  type: integer
                  description: Indicates whether this address should be the default address for the user.
                taxonomy_id_address_types:
                  type: integer
                  description: The ID representing the type of address (e.g., Billing or Shipping).
                taxonomy_id_address_status:
                  type: integer
                  description: The ID representing the current status of the address (e.g., Approved or Pending).
                status_notes:
                  type: string
                  nullable: true
                  description: Additional notes about the status of the address.
              required:
                - vh_user_id
                - address_line_1
                - city
                - state
                - pin_code
                - country
                - is_default
                - taxonomy_id_address_types
                - taxonomy_id_address_status
      responses:
        '200':
          description: Address created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
                  data:
                    $ref: '#/components/schemas/Address'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The User field is required
                      - The Address Line 1 field is required
                      - The Type field is required
                      - The Status field is required
    put:
      tags:
        - Addresses
      summary: Update a list of addresses
      description: This endpoint allows you to update multiple addresses records based on the provided input, including actions like activating, deactivating, trashing, or restoring addresses.
      operationId: updateAddressesList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the addresses to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified addresses have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Addresses
      summary: Delete a list of addresses
      description: This endpoint allows you to delete multiple addresses records based on the provided input.
      operationId: deleteAddressesList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the addresses to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified addresses have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/addresses/{id}:
    get:
      tags:
        - Addresses
      summary: Get record by address ID
      description: Retrieve an address by its unique identifier.
      operationId: getAddressById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Address Retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Address'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Addresses
      summary: Update an existing record
      description: Update an address record with the specified ID using the provided details.
      operationId: updateAddress
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Update an existing address and its associated values.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: The ID of the address want to update.
                vh_user_id:
                  type: integer
                  description: The ID of the user associated with the address.
                address_line_1:
                  type: string
                  description: The first line of the address.
                address_line_2:
                  type: string
                  nullable: true
                  description: The second line of the address.
                city:
                  type: string
                  description: The city of the address.
                state:
                  type: string
                  description: The state of the address.
                pin_code:
                  type: string
                  description: The postal code or ZIP code for the address.
                country:
                  type: string
                  description: The country of the address.
                phone:
                  type: string
                  nullable: true
                  description: The phone number associated with the address.
                is_default:
                  type: integer
                  description: Indicates whether this address should be the default address for the user.
                taxonomy_id_address_types:
                  type: integer
                  description: The ID representing the type of address (e.g., Billing or Shipping).
                taxonomy_id_address_status:
                  type: integer
                  description: The ID representing the current status of the address (e.g., Approved or Pending).
                status_notes:
                  type: string
                  nullable: true
                  description: Additional notes about the status of the address.
              required:
                - vh_user_id
                - id
                - address_line_1
                - city
                - state
                - pin_code
                - country
                - is_default
                - taxonomy_id_address_types
                - taxonomy_id_address_status
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Address'
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The User field is required
                      - The Address Line 1 field is required
                      - The Type field is required
                      - The Status field is required
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Addresses
      summary: Delete a record by ID
      description: Delete a single address by its ID.
      operationId: deleteAddressById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Address Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/addresses/{id}/action/{action}:
    patch:
      tags:
        - Addresses
      summary: Perform an action on an address
      description: |
        This endpoint allows you to perform various actions on an address item, such as activating, deactivating, trashing, or restoring a address.
      operationId: itemActionAddress
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/addresses/action/{action}:
    put:
      tags:
        - Addresses
      summary: bulk actions on addresses
      description: This endpoint allows various bulk actions to be performed on addresses list based on the provided action type.
      operationId: bulkActionsAddresses
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/wishlists/assets:
    get:
      summary: Get assets for wishlists
      description: Retrieve various assets related to wishlists, such as permissions, rows per page, fillable columns, taxonomies, and user data.
      operationId: getWishlistAssets
      tags:
        - Wishlists
      responses:
        '200':
          description: Assets retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                    example: true
                  data:
                    type: object
                    properties:
                      permissions:
                        type: array
                        description: A list of permissions for the current authenticated user.
                        items:
                          type: string
                          example: view-wishlists
                      rows:
                        type: integer
                        description: Number of rows per page as configured.
                        example: 10
                      fillable:
                        type: object
                        properties:
                          columns:
                            type: array
                            description: List of fillable columns in the wishlist model.
                            items:
                              type: string
                              example: name
                          except:
                            type: array
                            description: List of columns that are not fillable in the wishlist model.
                            items:
                              type: string
                              example: created_at
                      empty_item:
                        type: object
                        description: An empty item structure for the wishlist model.
                        example:
                          name: ''
                          description: ''
                          created_at: ''
                      taxonomy:
                        type: object
                        properties:
                          status:
                            type: array
                            description: Taxonomies related to wishlist statuses.
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID of the status taxonomy.
                                  example: 60
                                name:
                                  type: string
                                  description: Name of the status.
                                  example: Active
                      actions:
                        type: array
                        description: List of available actions for the user.
                        items:
                          type: string
                          example: create-wishlist
                      urls:
                        type: object
                        description: URLs related to wishlists.
                        properties:
                          public:
                            type: string
                            description: Public URL for managing wishlists.
                            example: https://example.com/backend/store#/wishlists
                      user_data:
                        type: object
                        description: Additional user data relevant to the wishlist management.
        '500':
          description: An error occurred while retrieving assets.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    description: List of error messages.
                    items:
                      type: string
                      example: Something went wrong.
                  hint:
                    type: array
                    description: Debugging hints (only in debug mode).
                    items:
                      type: string
                      example: Trace details...
  /api/store/wishlists:
    get:
      tags:
        - Wishlists
      summary: Get list of wishlists
      description: Retrieve list of all the wishlists.
      operationId: getWishlists
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/users'
        - $ref: '#/components/parameters/products'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Wishlist'
                      first_page_url:
                        type: string
                        example: http://url/api/store/wishlists?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/wishlists?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/wishlists
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Wishlists
      summary: Create an user wishlist
      operationId: createItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vh_user_id:
                  type: integer
                  description: ID of the user creating the wishlist
                  example: 121
                taxonomy_id_whishlists_status:
                  type: integer
                  description: Status of the wishlist
                  example: 59
                is_default:
                  type: integer
                  description: Whether the wishlist is set as default (1 for true, 0 for false)
                  example: 1
                name:
                  type: string
                  description: Name of the wishlist
                  example: Rahul
                slug:
                  type: string
                  description: Slugified version of the wishlist name
                  example: rahul
                type:
                  type: integer
                  description: Type of the wishlist i.e shareable or non-shareable
                  example: 1
                status_notes:
                  type: string
                  description: Additional notes on the status
                  example: asa
              required:
                - name
                - slug
                - vh_user_id
                - taxonomy_id_whishlists_status
                - is_default
      responses:
        '200':
          description: Wishlist created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
                  data:
                    $ref: '#/components/schemas/Wishlist'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The User field is required.
                      - The Name field is required.
                      - The Slug field is required.
                      - The Status field is required.
    put:
      tags:
        - Wishlists
      summary: Update a list of wishlists
      description: This endpoint allows you to update multiple wishlists records based on the provided input, including actions like activating, deactivating, trashing, or restoring wishlists.
      operationId: updateWishlistsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the wishlists to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified wishlists have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Wishlists
      summary: Delete a list of wishlists
      description: This endpoint allows you to delete multiple wishlists records based on the provided input.
      operationId: deleteWishlistsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the wishlists to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified wishlists have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/wishlists/{id}:
    get:
      tags:
        - Wishlists
      summary: Get record by wishlist ID
      description: Retrieve an wishlist by its unique identifier.
      operationId: getWishlistById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Wishlist Retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The unique identifier of the wishlist.
                      uuid:
                        type: string
                        description: The universally unique identifier (UUID) of the wishlist.
                      name:
                        type: string
                        description: The name of the wishlist.
                      slug:
                        type: string
                        description: The slug or URL-friendly name of the wishlist.
                      type:
                        type: string
                        nullable: true
                        description: The type of the wishlist (nullable).
                      vh_user_id:
                        type: integer
                        description: The unique identifier of the user who owns the wishlist.
                      taxonomy_id_whishlists_status:
                        type: integer
                        description: The status taxonomy ID associated with the wishlist.
                      taxonomy_id_whishlists_types:
                        type: string
                        nullable: true
                        description: The type taxonomy ID associated with the wishlist (nullable).
                      is_default:
                        type: integer
                        description: Indicates whether the wishlist is the default wishlist for the user.
                      meta:
                        type: string
                        nullable: true
                        description: Additional metadata for the wishlist (nullable).
                      status_notes:
                        type: string
                        description: Any notes related to the status of the wishlist.
                      created_by:
                        type: string
                        nullable: true
                        description: The identifier of the user who created the wishlist (nullable).
                      updated_by:
                        type: integer
                        description: The identifier of the user who last updated the wishlist.
                      deleted_by:
                        type: string
                        nullable: true
                        description: The identifier of the user who deleted the wishlist (nullable).
                      created_at:
                        type: string
                        format: date-time
                        description: The timestamp when the wishlist was created.
                      updated_at:
                        type: string
                        format: date-time
                        description: The timestamp when the wishlist was last updated.
                      deleted_at:
                        type: string
                        nullable: true
                        description: The timestamp when the wishlist was deleted (nullable).
                      created_by_user:
                        type: string
                        nullable: true
                        description: Details of the user who created the wishlist (nullable).
                      updated_by_user:
                        type: object
                        description: Details of the user who last updated the wishlist.
                        properties:
                          id:
                            type: integer
                            description: The unique identifier of the user who updated the wishlist.
                          uuid:
                            type: string
                            description: The UUID of the user who updated the wishlist.
                          first_name:
                            type: string
                            description: The first name of the user who updated the wishlist.
                          last_name:
                            type: string
                            description: The last name of the user who updated the wishlist.
                          email:
                            type: string
                            description: The email of the user who updated the wishlist.
                          avatar:
                            type: string
                            description: The avatar URL of the user who updated the wishlist.
                          name:
                            type: string
                            description: The full name of the user who updated the wishlist.
                      deleted_by_user:
                        type: string
                        nullable: true
                        description: Details of the user who deleted the wishlist (nullable).
                      user:
                        type: object
                        description: Details of the user who owns the wishlist.
                        properties:
                          id:
                            type: integer
                            description: The unique identifier of the user.
                          first_name:
                            type: string
                            description: The first name of the user.
                          username:
                            type: string
                            description: The username of the user.
                          avatar:
                            type: string
                            description: The avatar URL of the user.
                          name:
                            type: string
                            description: The full name of the user.
                      status:
                        type: object
                        description: The current status of the wishlist.
                        properties:
                          id:
                            type: integer
                            description: The unique identifier of the status.
                          name:
                            type: string
                            description: The name of the status.
                          slug:
                            type: string
                            description: The slug or URL-friendly name of the status.
                      products:
                        type: array
                        description: A list of products associated with the wishlist.
                        items:
                          type: object
                          properties:
                            is_selected:
                              type: boolean
                              description: Indicates if the product is selected.
                            product:
                              type: object
                              description: Details of the product in the wishlist.
                              properties:
                                id:
                                  type: integer
                                  description: The unique identifier of the product.
                                name:
                                  type: string
                                  description: The name of the product.
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Wishlists
      summary: Update an existing record
      description: Update a wishlist record with the specified ID using the provided details and also add a product to the wishlist.
      operationId: updateWishlist
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Update an existing wishlist and its associated values.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the wishlist.
                slug:
                  type: string
                  description: The slug or URL-friendly name of the wishlist.
                type:
                  type: string
                  nullable: true
                  description: The type of the wishlist (nullable).
                vh_user_id:
                  type: integer
                  description: ID of the user creating the wishlist
                  example: 121
                taxonomy_id_whishlists_status:
                  type: integer
                  description: The status taxonomy ID associated with the wishlist.
                is_default:
                  type: integer
                  description: Indicates whether the wishlist is the default wishlist for the user.
                products:
                  type: array
                  description: A list of products associated with the wishlist.
                  items:
                    type: object
                    properties:
                      is_selected:
                        type: boolean
                        description: Indicates if the product is selected.
                      product:
                        type: object
                        description: Details of the product in the wishlist.
                        properties:
                          id:
                            type: integer
                            description: The unique identifier of the product.
                          name:
                            type: string
                            description: The name of the product.
                        required:
                          - id
                    required:
                      - product
              required:
                - name
                - slug
                - is_default
                - taxonomy_id_whishlists_status
                - products
                - vh_user_id
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Wishlist'
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The User field is required
                      - The Address Line 1 field is required
                      - The Type field is required
                      - The Status field is required
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Wishlists
      summary: Delete a record by ID
      description: Delete a single wishlist by its ID.
      operationId: deleteWishlistById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Wishlist Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/wishlists/{id}/action/{action}:
    patch:
      tags:
        - Wishlists
      summary: Perform an action on wishlist
      description: |
        This endpoint allows you to perform various actions on a wishlist item, such as activating, deactivating, trashing, or restoring a wishlist.
      operationId: itemActionWishlist
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/wishlists/{action/{action}:
    put:
      tags:
        - Wishlists
      summary: bulk actions on wishlists
      description: This endpoint allows various bulk actions to be performed on wishlists list based on the provided action type.
      operationId: bulkActionsWishlists
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/attributes:
    get:
      tags:
        - Attributes
      summary: Get list of all attributes
      description: Retrieve list of all the attributes.
      operationId: getAttributes
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Attribute'
                      first_page_url:
                        type: string
                        example: http://url/api/store/attributes?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/attributes?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/attributes
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Attributes
      summary: Create an attribute
      operationId: createItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the attribute.
                  example: Attribute C
                slug:
                  type: string
                  description: Slug for the attribute, used for SEO-friendly URLs.
                  example: attribute-c
                type:
                  type: string
                  description: Type of the attribute (e.g., Size, Color, Cloth).
                  example: Cloth
                description:
                  type: string
                  nullable: true
                  description: Detailed description of the attribute.
                  example: asas
                is_active:
                  type: integer
                  description: Status of the attribute (1 = active, 0 = inactive).
                  example: 1
                value:
                  type: array
                  description: List of attribute values.
                  items:
                    type: object
                    properties:
                      value:
                        type: string
                        description: The actual value of the attribute (e.g., "Price").
                        example: Price
                      is_active:
                        type: integer
                        description: Status of the attribute value (1 = active, 0 = inactive).
                        example: 1
                    required:
                      - value
                      - is_active
              required:
                - name
                - slug
                - type
                - is_active
                - value
      responses:
        '200':
          description: Attribute created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
                  data:
                    $ref: '#/components/schemas/Attribute'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The name field is required.
                      - The slug field is required.
                      - Please enter Value field.
                      - The value may not be greater than 250 characters.
                      - Exceeded the maximum limit of 15 values.
        '409':
          description: Conflict error if Attribute already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Attribute with this name already exists.
                      - Attribute with this slug already exists.
    put:
      tags:
        - Attributes
      summary: Update a list of attributes
      description: This endpoint allows you to update multiple attributes records based on the provided input, including actions like activating, deactivating, trashing, or restoring attributes.
      operationId: updateAttributesList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the attributes to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified attributes have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Attributes
      summary: Delete a list of attributes
      description: This endpoint allows you to delete multiple attributes records based on the provided input.
      operationId: deleteAttributesList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the warehouse to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified attributes have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/attributes/{id}:
    get:
      tags:
        - Attributes
      summary: Get record by attribute ID
      description: Retrieve a attribute by its unique identifier.
      operationId: getAttributeById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Attribute Retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      uuid:
                        type: string
                        example: 7412ffaa-2e95-4ee4-a470-8450f7fe9359
                      name:
                        type: string
                        example: Attribute B
                      slug:
                        type: string
                        example: attribute-b
                      type:
                        type: string
                        example: Size
                      description:
                        type: string
                        example: Et esse explicabo eos ut nemo ratione.
                      is_active:
                        type: integer
                        example: 1
                      created_at:
                        type: string
                        format: date-time
                        example: '2024-10-04 10:36:56'
                      updated_at:
                        type: string
                        format: date-time
                        example: '2024-10-04 10:36:56'
                      created_by:
                        type: integer
                        example: 1
                      updated_by:
                        type: integer
                        example: 1
                      created_by_user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          uuid:
                            type: string
                            example: e520ad9e-2315-43a3-90b7-8790eddbf120
                          first_name:
                            type: string
                            example: We
                          last_name:
                            type: string
                            example: Webreinvent
                      updated_by_user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          uuid:
                            type: string
                            example: e520ad9e-2315-43a3-90b7-8790eddbf120
                          first_name:
                            type: string
                            example: We
                          last_name:
                            type: string
                            example: Webreinvent
                      value:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 4
                            value:
                              type: string
                              example: xl
                            vh_st_attribute_id:
                              type: integer
                              example: 2
                            is_active:
                              type: integer
                              example: 1
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Attributes
      summary: Update an existing record
      description: Update a attribute record with the specified ID using the provided details.
      operationId: updateAttribute
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Update an existing attribute and its associated values.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the attribute.
                  example: Attribute B
                slug:
                  type: string
                  description: The unique slug identifier for the attribute.
                  example: attribute-b
                type:
                  type: string
                  description: The type/category of the attribute.
                  example: Size
                description:
                  type: string
                  description: A brief description of the attribute.
                  example: Et esse explicabo eos ut nemo ratione.
                is_active:
                  type: integer
                  description: Indicates if the attribute is active (1 for active, 0 for inactive).
                  example: 1
                value:
                  type: array
                  description: Array of associated attribute values.
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The unique identifier for the value.
                        example: 4
                      value:
                        type: string
                        description: The actual value associated with the attribute.
                        example: xl
                      vh_st_attribute_id:
                        type: integer
                        description: The ID linking the value to the attribute.
                        example: 2
                      is_active:
                        type: integer
                        description: Indicates if the value is active (1 for active, 0 for inactive).
                        example: 1
                    required:
                      - id
                      - value
                      - vh_st_attribute_id
                      - is_active
              required:
                - name
                - slug
                - type
                - value
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Attribute'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Attributes
      summary: Delete a record by ID
      description: Delete a single attribute by its ID.
      operationId: deleteAttributeById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Attribute Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/attributes/{id}/action/{action}:
    patch:
      tags:
        - Attributes
      summary: Perform an action on an attribute
      description: |
        This endpoint allows you to perform various actions on an attribute item, such as activating, deactivating, trashing, or restoring a attribute.
      operationId: itemActionAttribute
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/attributes/action/{action}:
    put:
      tags:
        - Attributes
      summary: bulk actions on attributes
      description: This endpoint allows various bulk actions to be performed on attributes list based on the provided action type.
      operationId: bulkActionsAttributes
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/attributegroups:
    get:
      tags:
        - Attribute Groups
      summary: Get list of attribute groups
      description: Retrieve list of all the attribute groups.
      operationId: getAttributeGroups
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/attributes'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/AttributeGroup'
                      first_page_url:
                        type: string
                        example: http://url/api/store/attributegroups?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/attributegroups?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/attributegroups
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Attribute Groups
      summary: Create an attribute group
      operationId: createItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                active_attributes:
                  type: array
                  description: A list of active attributes.
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The unique identifier for the attribute.
                        example: 1
                      name:
                        type: string
                        description: The name of the attribute.
                        example: Attribute A
                      slug:
                        type: string
                        description: The slug, a URL-friendly version of the name.
                        example: attribute-a
                      type:
                        type: string
                        description: The type or category of the attribute.
                        example: property
                    required:
                      - id
                      - name
                name:
                  type: string
                  description: The name of the attribute group or related entity.
                  example: As
                slug:
                  type: string
                  description: The slug, a URL-friendly version of the name.
                  example: as
                description:
                  type: string
                  description: A brief description of the attribute group or related entity.
                  example: as
                is_active:
                  type: integer
                  description: Indicates if the attribute group or related entity is active (1 for active, 0 for inactive).
                  example: 1
              required:
                - name
                - slug
                - active_attributes
      responses:
        '200':
          description: Attribute Group created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
                  data:
                    $ref: '#/components/schemas/AttributeGroup'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The Name field is required.
                      - The Slug field is required.
                      - The Attributes field is required.
    put:
      tags:
        - Attribute Groups
      summary: Update a list of attribute groups
      description: This endpoint allows you to update multiple attribute groups records based on the provided input, including actions like activating, deactivating, trashing, or restoring attribute groups.
      operationId: updateAttributeGroupsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the attribute groups to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified attribute groups have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Attribute Groups
      summary: Delete a list of attribute groups
      description: This endpoint allows you to delete multiple attribute groups records based on the provided input.
      operationId: deleteAttributeGroupsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the attribute groups to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified attribute groups have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/attributegroups/{id}:
    get:
      tags:
        - Attribute Groups
      summary: Get record by attribute group ID
      description: Retrieve a attribute group by its unique identifier.
      operationId: getAttributeGroupById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Attribute group Retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                    example: true
                  data:
                    type: object
                    properties:
                      active_attributes:
                        type: array
                        description: A list of active attributes.
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The unique identifier for the attribute.
                              example: 1
                            name:
                              type: string
                              description: The name of the attribute.
                              example: Attribute A
                            type:
                              type: string
                              description: The type or category of the attribute.
                              example: property
                      attributes_list:
                        type: array
                        description: A list of all attributes associated with the group.
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The unique identifier for the attribute.
                              example: 1
                            name:
                              type: string
                              description: The name of the attribute.
                              example: Attribute A
                            type:
                              type: string
                              description: The type or category of the attribute.
                              example: property
                            deleted_at:
                              type: string
                              nullable: true
                              description: The date and time when the attribute was deleted, if applicable.
                              example: null
                            pivot:
                              type: object
                              description: The pivot object representing the relationship between attribute group and attribute.
                              properties:
                                vh_st_attribute_group_id:
                                  type: integer
                                  description: The ID of the associated attribute group.
                                  example: 4
                                vh_st_attribute_id:
                                  type: integer
                                  description: The ID of the associated attribute.
                                  example: 1
                      id:
                        type: integer
                        description: The unique identifier for the attribute group.
                        example: 4
                      name:
                        type: string
                        description: The name of the attribute group.
                        example: Group Name
                      slug:
                        type: string
                        description: A URL-friendly version of the name.
                        example: group-name
                      is_active:
                        type: integer
                        description: Indicates if the attribute group is active (1 for active, 0 for inactive).
                        example: 1
                      created_at:
                        type: string
                        format: date-time
                        description: The date and time when the attribute group was created.
                        example: '2024-10-07 17:55:48'
                      updated_at:
                        type: string
                        format: date-time
                        description: The date and time when the attribute group was last updated.
                        example: '2024-10-07 17:55:48'
                      created_by:
                        type: integer
                        description: The identifier of the user who created the attribute group.
                        example: 1
                      updated_by:
                        type: integer
                        description: The identifier of the user who last updated the attribute group.
                        example: 1
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Attribute Groups
      summary: Update an existing record
      description: Update a attribute group record with the specified ID using the provided details.
      operationId: updateAttributeGroup
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Update an existing attribute group and its associated values.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the attribute group.
                  example: Gp1
                slug:
                  type: string
                  description: A URL-friendly version of the name.
                  example: gp1
                description:
                  type: string
                  nullable: true
                  description: A brief description of the attribute group.
                  example: null
                is_active:
                  type: integer
                  description: Indicates if the attribute group is active (1 for active, 0 for inactive).
                  example: null
                active_attributes:
                  type: array
                  description: A list of active attributes associated with the attribute group.
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The unique identifier for the attribute.
                        example: 1
                      name:
                        type: string
                        description: The name of the attribute.
                        example: Attribute A
                      type:
                        type: string
                        description: The type or category of the attribute.
                        example: property
                    required:
                      - id
                      - name
                      - type
              required:
                - name
                - slug
                - active_attributes
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                    example: true
                  data:
                    type: object
                    properties:
                      active_attributes:
                        type: array
                        description: A list of active attributes.
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The unique identifier for the attribute.
                              example: 1
                            name:
                              type: string
                              description: The name of the attribute.
                              example: Attribute A
                            type:
                              type: string
                              description: The type or category of the attribute.
                              example: property
                      attributes_list:
                        type: array
                        description: A list of all attributes associated with the group.
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The unique identifier for the attribute.
                              example: 1
                            name:
                              type: string
                              description: The name of the attribute.
                              example: Attribute A
                            type:
                              type: string
                              description: The type or category of the attribute.
                              example: property
                            deleted_at:
                              type: string
                              nullable: true
                              description: The date and time when the attribute was deleted, if applicable.
                              example: null
                            pivot:
                              type: object
                              description: The pivot object representing the relationship between attribute group and attribute.
                              properties:
                                vh_st_attribute_group_id:
                                  type: integer
                                  description: The ID of the associated attribute group.
                                  example: 4
                                vh_st_attribute_id:
                                  type: integer
                                  description: The ID of the associated attribute.
                                  example: 1
                      id:
                        type: integer
                        description: The unique identifier for the attribute group.
                        example: 4
                      name:
                        type: string
                        description: The name of the attribute group.
                        example: Group Name
                      slug:
                        type: string
                        description: A URL-friendly version of the name.
                        example: group-name
                      is_active:
                        type: integer
                        description: Indicates if the attribute group is active (1 for active, 0 for inactive).
                        example: 1
                      created_at:
                        type: string
                        format: date-time
                        description: The date and time when the attribute group was created.
                        example: '2024-10-07 17:55:48'
                      updated_at:
                        type: string
                        format: date-time
                        description: The date and time when the attribute group was last updated.
                        example: '2024-10-07 17:55:48'
                      created_by:
                        type: integer
                        description: The identifier of the user who created the attribute group.
                        example: 1
                      updated_by:
                        type: integer
                        description: The identifier of the user who last updated the attribute group.
                        example: 1
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Attribute Groups
      summary: Delete a record by ID
      description: Delete a single attribute group by its ID.
      operationId: deleteAttributeGroupById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Attribute group Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/attributegroups/{id}/action/{action}:
    patch:
      tags:
        - Attribute Groups
      summary: Perform an action on an attribute group
      description: |
        This endpoint allows you to perform various actions on an attribute group item, such as activating, deactivating, trashing, or restoring a attribute group.
      operationId: itemActionAttributeGroup
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/attributegroups/action/{action}:
    put:
      tags:
        - Attribute Groups
      summary: bulk actions on attribute groups
      description: This endpoint allows various bulk actions to be performed on attribute groups list based on the provided action type.
      operationId: bulkActionsAttributeGroups
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/users/assets:
    get:
      summary: Get assets for customers
      description: Retrieve various assets related to customers, such as permissions, rows per page, fillable columns, taxonomies, and user data.
      operationId: getCustomersAssets
      tags:
        - Customers
      responses:
        '200':
          description: Retrieve assets related to user settings and configurations.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                  data:
                    type: object
                    properties:
                      permissions:
                        type: object
                        description: The permissions of the authenticated user.
                      countries:
                        type: array
                        description: List of countries with code, name, and calling code.
                        items:
                          type: object
                          properties:
                            code:
                              type: string
                              description: Country code.
                            name:
                              type: string
                              description: Country name.
                            calling_code:
                              type: string
                              description: Country calling code.
                      country_code:
                        type: array
                        description: List of country codes.
                        items:
                          type: object
                          properties:
                            code:
                              type: string
                              description: Country code.
                            name:
                              type: string
                              description: Country name.
                            calling_code:
                              type: string
                              description: Country calling code.
                      name_titles:
                        type: array
                        description: List of name titles.
                        items:
                          type: object
                          properties:
                            slug:
                              type: string
                              description: Slug for the title.
                            name:
                              type: string
                              description: Display name of the title.
                      rows:
                        type: integer
                        description: The number of rows per page as defined in configuration.
                      fillable:
                        type: object
                        properties:
                          columns:
                            type: array
                            items:
                              type: string
                            description: The list of fillable columns for the User model, excluding exceptions.
                          except:
                            type: array
                            items:
                              type: string
                            description: The list of columns excluded from fillable fields.
                      empty_item:
                        type: object
                        description: An empty item template for creating new user records.
                        properties:
                          uuid:
                            type: string
                            nullable: true
                          created_by:
                            type: string
                            nullable: true
                          updated_by:
                            type: string
                            nullable: true
                          deleted_by:
                            type: string
                            nullable: true
                          meta:
                            type: object
                            properties:
                              custom_fields:
                                type: object
                                description: Custom fields for the user, populated based on settings.
                      custom_fields:
                        type: object
                        nullable: true
                        description: Custom fields settings retrieved from the database.
                      fields:
                        type: object
                        description: User-specific settings fields.
                      totalRole:
                        type: integer
                        description: Total number of roles defined in the system.
                      upload_url:
                        type: string
                        description: URL for uploading media files.
        '500':
          description: An error occurred while retrieving assets.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    description: List of error messages.
                    items:
                      type: string
                      example: Something went wrong.
                  hint:
                    type: array
                    description: Debugging hints (only in debug mode).
                    items:
                      type: string
                      example: Trace details...
  /api/store/users:
    post:
      tags:
        - Customers
      summary: Create a customer
      operationId: createItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The user's email address.
                  maxLength: 150
                first_name:
                  type: string
                  description: The user's first name.
                  maxLength: 150
                username:
                  type: string
                  description: User username
                password:
                  type: string
                  description: The user's password.
                status:
                  type: string
                  description: The user's status.
                is_active:
                  type: integer
                  description: Indicates whether the user is active or not.
              required:
                - email
                - first_name
                - status
                - is_active
                - password
                - username
      responses:
        '200':
          description: Customer created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
                  data:
                    $ref: '#/components/schemas/Customer'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The email field is required.
                      - The email must be a valid email address.
                      - The first name field is required.
                      - The password field is required.
                      - The status field is required.
        '409':
          description: Conflict error if user/customer already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Email is already registered.. '
                      - 'Username is already registered.. '
    get:
      tags:
        - Customers
      summary: Get list of all customers
      description: Retrieve list of all the customers.
      operationId: getCustomers
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Customer'
                      first_page_url:
                        type: string
                        example: http://url/api/store/customers?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/customers?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/customers
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Customers
      summary: Update a list of customers
      description: This endpoint allows you to update multiple customers records based on the provided input, including actions like activating, deactivating, trashing, or restoring customers.
      operationId: updateCustomersList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the customers to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified customers have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Customers
      summary: Delete a list of customers
      description: This endpoint allows you to delete multiple customers records based on the provided input.
      operationId: deleteCustomersList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the customers to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified customers have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/users/change-password:
    post:
      tags:
        - Customers
      summary: Change User Password
      description: |
        This endpoint allows users to change their password. After a successful password change, users must log in again to access their customer data.
      operationId: changePassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  description: Current password of the user.
                new_password:
                  type: string
                  description: New password for the user.
                confirm_password:
                  type: string
                  description: Confirm New password for the user.
              required:
                - current_password
                - new_password
                - confirm_password
      responses:
        '200':
          description: User password changed sucesfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action was successful
                  data:
                    type: object
                    properties:
                      redirect_url:
                        type: string
                        example: ''
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The current password field is required.
                      - The new password field is required.
                      - The confirm password field is required.
        '401':
          description: Unauthorized, invalid credentials provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Invalid credentials provided.
  /api/store/users/{id}:
    get:
      tags:
        - Customers
      summary: Get record by customer ID
      description: Retrieve a customer by its unique identifier.
      operationId: getCustomerById
      parameters:
        - $ref: '#/components/parameters/id'
        - name: x-xsrf-token
          in: header
          required: true
          description: The XSRF token for security.
          schema:
            type: string
      responses:
        '200':
          description: Customer Retrieved Succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Customer'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Customers
      summary: Update an existing record
      description: Update a customer record with the specified ID using the provided details.
      operationId: updateBrand
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The user's email address.
                  maxLength: 150
                first_name:
                  type: string
                  description: The user's first name.
                  maxLength: 150
                username:
                  type: string
                  description: User username
                password:
                  type: string
                  description: The user's password.
                status:
                  type: string
                  description: The user's status.
                is_active:
                  type: integer
                  description: Indicates whether the user is active or not.
              required:
                - email
                - first_name
                - status
                - is_active
                - password
                - username
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Customer'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Customers
      summary: Delete a record by ID
      description: Delete a single customer by its ID.
      operationId: deleteCustomerById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Customer Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/customergroups/assets:
    get:
      summary: Retrieve assets
      tags:
        - Customer Groups
      description: Returns a list of assets along with their permissions and statuses.
      operationId: getAssets
      responses:
        '200':
          description: Successful response with asset data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      permissions:
                        type: array
                        items:
                          type: string
                        example:
                          - has-access-of-dashboard
                          - has-access-of-setting-section
                          - can-login-in-backend
                      actions:
                        type: array
                        items:
                          type: object
                          properties:
                            action_name:
                              type: string
                              example: Edit
                            action_slug:
                              type: string
                              example: edit
                      empty_item:
                        type: object
                        properties:
                          uuid:
                            type: string
                            nullable: true
                            example: null
                          name:
                            type: string
                            nullable: true
                            example: null
                          slug:
                            type: string
                            nullable: true
                            example: null
                          taxonomy_id_customer_groups_status:
                            type: string
                            nullable: true
                            example: null
                          status_notes:
                            type: string
                            nullable: true
                            example: null
                      fillable:
                        type: object
                        properties:
                          except:
                            type: array
                            items:
                              type: string
                            example:
                              - uuid
                              - created_by
                              - updated_by
                              - deleted_by
                          columns:
                            type: array
                            items:
                              type: string
                            example:
                              - name
                              - slug
                              - status
                      rows:
                        type: integer
                        example: 20
                      taxonomy:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Customer Group
                      status:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 52
                            uuid:
                              type: string
                              example: aa1e3749-c9ad-4b22-8d33-e26b3070238e
                            parent_id:
                              type: integer
                              nullable: true
                              example: null
                            vh_taxonomy_type_id:
                              type: integer
                              example: 19
                            name:
                              type: string
                              example: Active
                            slug:
                              type: string
                              example: active
  /api/store/customergroups:
    get:
      tags:
        - Customer Groups
      summary: Get list of all customer groups
      description: Retrieve list of all the customer groups.
      operationId: getBrands
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
        - $ref: '#/components/parameters/filter_date'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/customers'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/CustomerGroup'
                      first_page_url:
                        type: string
                        example: http://url/api/store/customergroups?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/customergroups?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/customergroups
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Customer Groups
      summary: Create a new customer group
      description: Creates a new customer group with the specified details.
      operationId: createCustomerGroup
      requestBody:
        $ref: '#/components/requestBodies/CustomerGroupRequestBody'
      responses:
        '200':
          description: Customer group created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/CustomerGroup'
                  messages:
                    type: array
                    items:
                      type: string
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The name field is required.
                      - The slug field is required.
                      - The customers field is required.
                      - The taxonomy_id_customer_groups_status field is required.
                      - The status_notes field is required when status.slug is rejected.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Internal server error.
    put:
      tags:
        - Customer Groups
      summary: Update a list of customer groups
      description: This endpoint allows you to update multiple customer groups records based on the provided input, including actions like activating, deactivating, trashing, or restoring customer groups.
      operationId: updateCustomerGroupsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the custormer groups to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified custormer groups have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Customer Groups
      summary: Delete a list of custormer groups
      description: This endpoint allows you to delete multiple custormer groups records based on the provided input.
      operationId: deleteCustomerGroupsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the custormer groups to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified custormer groups have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/customergroups/{id}:
    get:
      tags:
        - Customer Groups
      summary: Get record by customer group ID
      description: Retrieve a customer group by its unique identifier.
      operationId: getCustomerGroupById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Customer Group Retrieved Succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/CustomerGroup'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Customer Groups
      summary: Update an existing record
      description: Update a customer group record with the specified ID using the provided details.
      operationId: updateCustomerGroup
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/CustomerGroupRequestBody'
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/CustomerGroup'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Customer Groups
      summary: Delete a record by ID
      description: Delete a single customer group by its ID.
      operationId: deleteCustomerGroupById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Customer Group Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/customergroups/{id}/action/{actio}:
    patch:
      tags:
        - Customer Groups
      summary: Perform an action on a customer group
      description: |
        This endpoint allows you to perform various actions on a customer group item, such as activating, deactivating, trashing, or restoring a customer group.
      operationId: itemActionCustomerGroup
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/customergroups/action/{actio}:
    put:
      tags:
        - Customer Groups
      summary: bulk actions on customer groups
      description: This endpoint allows various bulk actions to be performed on customer groups list based on the provided action type.
      operationId: bulkActionsCustomerGroups
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/paymentmethods:
    get:
      tags:
        - Payment Methods
      summary: Get list of all payment methods
      description: Retrieve list of all the payment methods.
      operationId: getPaymentMethods
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/filter_q'
        - $ref: '#/components/parameters/filter_is_active'
        - $ref: '#/components/parameters/filter_trashed'
      responses:
        '200':
          description: List retrieved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/PaymentMethod'
                      first_page_url:
                        type: string
                        example: http://url/api/store/paymentmethods?page=1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: http://url/api/store/paymentmethods?page=1
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              nullable: true
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        nullable: true
                        example: null
                      path:
                        type: string
                        example: http://url/api/store/paymentmethods
                      per_page:
                        type: integer
                        example: 20
                      prev_page_url:
                        type: string
                        nullable: true
                        example: null
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 3
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    post:
      tags:
        - Payment Methods
      summary: Create a payment method
      operationId: createItem
      requestBody:
        $ref: '#/components/requestBodies/PaymentMethodRequestBody'
      responses:
        '200':
          description: Payment Method created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Saved successfully
                  data:
                    $ref: '#/components/schemas/PaymentMethod'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - The name field is required.
                      - The slug field is required.
    put:
      tags:
        - Payment Methods
      summary: Update a list of payment methods
      description: This endpoint allows you to update multiple payment methods records based on the provided input, including actions like activating, deactivating, trashing, or restoring payment methods.
      operationId: updatePaymentMethodsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "activate", "deactivate", "trash", "restore").
                  example: trash
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the payment methods to be updated.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified payment methods have been updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the update process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
    delete:
      tags:
        - Payment Methods
      summary: Delete a list of payment methods
      description: This endpoint allows you to delete multiple payment methods records based on the provided input.
      operationId: deletePaymentMethodsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - items
              properties:
                type:
                  type: string
                  description: Action type (e.g., "delete").
                  example: delete
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        description: The ID of the payment methods to be deleted.
                        example: 1
                  example:
                    - id: 1
                    - id: 2
                    - id: 3
      responses:
        '200':
          description: Action was successful and the specified payment methods have been deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Validation failed for the input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                    example:
                      - Action type is required.
                      - Select items.
        '403':
          description: The user does not have permission to perform this action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied for action 'can-update-module'.
        '500':
          description: An unexpected error occurred during the deletion process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/paymentmethods/{id}:
    get:
      tags:
        - Payment Methods
      summary: Get record by payment method ID
      description: Retrieve a payment method by its unique identifier.
      operationId: getPaymentMethodById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Payment Method Retrieved Succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PaymentMethod'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    put:
      tags:
        - Payment Methods
      summary: Update an existing record
      description: Update a payment method record with the specified ID using the provided details.
      operationId: updatePaymentMethod
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/PaymentMethodRequestBody'
      responses:
        '200':
          description: Saved Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PaymentMethod'
                  messages:
                    type: array
                    items:
                      type: string
                      example: Saved Successfully
        '400':
          description: Bad Request, validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - This name/slug already exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
    delete:
      tags:
        - Payment Methods
      summary: Delete a record by ID
      description: Delete a single payment method by its ID.
      operationId: deletePaymentMethodById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Payment Method Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items: {}
                  messages:
                    type: array
                    items:
                      type: string
                      example: Record has been deleted
        '400':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    items:
                      type: string
                      example: Record does not exist.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema: null
  /api/store/paymentmethods/{id}/action/{action}:
    patch:
      tags:
        - Payment Methods
      summary: Perform an action on a payment method
      description: |
        This endpoint allows you to perform various actions on a payment method item, such as activating, deactivating, trashing, or restoring a payment method.
      operationId: itemActionPaymentMethod
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/action'
      responses:
        '200':
          description: Action performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_active:
                        type: integer
                        example: 1
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful
        '403':
          description: Permission Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: Permission denied to update module
        '404':
          description: Record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Record not found with ID: {id}'
                required:
                  - errors
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    items:
                      type: string
                      example: An error occurred
  /api/store/paymentmethods/action/{action}:
    put:
      tags:
        - Payment Methods
      summary: bulk actions on payment methods
      description: This endpoint allows various bulk actions to be performed on payment methods list based on the provided action type.
      operationId: bulkActionsPaymentMethods
      parameters:
        - $ref: '#/components/parameters/bulk_action'
      responses:
        '200':
          description: Action was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      type: string
                      example: Action was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Invalid input data.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: An unexpected error occurred.
  /api/store/settings/get/all-item/count:
    get:
      tags:
        - Settings
      summary: Get the count of all CRUD records in VaahStore
      operationId: getCrudCount
      description: |
        Fetch the count of various CRUD records in VaahStore such as stores, wishlists, addresses, brands, attributes, customers, products, vendors, and warehouses.
      responses:
        '200':
          description: Successful response with the counts of CRUD records.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      count:
                        type: object
                        properties:
                          Store:
                            type: integer
                            example: 10
                          Wishlists:
                            type: integer
                            example: 25
                          Address:
                            type: integer
                            example: 50
                          Brand:
                            type: integer
                            example: 8
                          Attributes:
                            type: integer
                            example: 15
                          AttributeGroups:
                            type: integer
                            example: 5
                          Customer:
                            type: integer
                            example: 100
                          CustomerGroup:
                            type: integer
                            example: 3
                          Product:
                            type: integer
                            example: 200
                          ProductVariations:
                            type: integer
                            example: 30
                          Vendors:
                            type: integer
                            example: 12
                          ProductAttribute:
                            type: integer
                            example: 45
                          ProductMedia:
                            type: integer
                            example: 60
                          VendorsProduct:
                            type: integer
                            example: 40
                          Warehouses:
                            type: integer
                            example: 7
                          ProductStock:
                            type: integer
                            example: 300
                          All:
                            type: integer
                            example: 900
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Something went wrong
                  hint:
                    type: array
                    items:
                      type: string
                      example: Exception trace information
  /api/store/settings/fill/bulk/method:
    post:
      tags:
        - Settings
      summary: Create bulk sample CRUD records
      operationId: createBulkRecords
      description: |
        This endpoint allows for bulk creation of sample records for various CRUD operations such as Store, Address, Wishlist, Brand, Attributes, Customer, and more in VaahStore.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selectedCrud:
                  type: array
                  description: List of selected CRUD operations for which sample records need to be created.
                  items:
                    type: object
                    properties:
                      value:
                        type: string
                        description: Name of the CRUD operation
                        example: Store
                      quantity:
                        type: integer
                        description: Number of sample records to create
                        example: 10
                      is_checked:
                        type: boolean
                        description: Whether the CRUD operation is selected
                        example: true
                    required:
                      - value
                      - quantity
                      - is_checked
              required:
                - selectedCrud
      responses:
        '200':
          description: Successful response indicating records were created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    example: {}
        '400':
          description: Validation error or missing required information
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Quantity is required for Store
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: Something went wrong
                  hint:
                    type: array
                    items:
                      type: string
                      example: Exception trace information
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Provide your API token in the `Authorization` header as follows:
        `Authorization: Bearer YOUR_API_TOKEN`.
    basicAuth:
      type: http
      scheme: basic
      description: |
        Basic authentication using username and password.
  parameters:
    id:
      name: id
      description: The unique identifier of the item
      in: path
      required: true
    uuid:
      name: uuid
      description: The Universally Unique Identifier
      in: path
      required: true
    action:
      name: action
      in: path
      required: true
      description: The action to perform on the item (activate, deactivate, trash, restore)
      schema:
        type: string
        items:
          example:
            - activate
            - deactivate
            - trash
            - restore
    bulk_action:
      name: action
      in: path
      required: true
      description: The action to perform (e.g., activate-all, deactivate-all, trash-all, restore-all, delete-all).
      schema:
        type: string
        items:
          example:
            - activate-all
            - deactivate-all
            - trash-all
            - restore-all
    limit:
      name: limit
      in: query
      description: The number of items to return
      required: false
      schema:
        type: integer
        format: int64
        default: 10
    offset:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result set
      required: false
      schema:
        type: integer
        format: int64
        default: 0
    page:
      name: page
      in: query
      required: false
      description: The page number to retrieve.
      schema:
        type: integer
        example: 1
    rows:
      name: rows
      in: query
      required: false
      description: Number of rows per page.
      schema:
        type: integer
      example: 20
    filter_q:
      name: filter[q]
      in: query
      required: false
      description: Search by name, slug, or id.
      schema:
        type: string
    filter_is_active:
      name: filter[is_active]
      in: query
      required: false
      schema:
        type: boolean
    filter_is_default:
      name: filter[is_default]
      in: query
      required: false
      schema:
        type: boolean
    filter_trashed:
      name: filter[trashed]
      in: query
      required: false
      description: Include, exclude, or only show trashed.
      schema:
        type: string
        enum:
          - include
          - exclude
          - only
    filter_date:
      name: filter[date][]
      in: query
      required: false
      description: Filter by date range.
      schema:
        type: array
        items:
          type: string
          format: date
      example:
        - '2024-09-03'
        - '2024-09-11'
    min_price:
      name: filter[min_price]
      in: query
      required: false
      description: Minimum price.
      schema:
        type: number
        format: float
      example: 10.5
    max_price:
      name: filter[max_price]
      in: query
      required: false
      description: Maximum price.
      schema:
        type: number
        format: float
      example: 100
    category:
      name: filter[category][]
      in: query
      required: false
      description: Filter by category. You can provide multiple categories using either category IDs or slugs.
      schema:
        type: array
        items:
          oneOf:
            - type: integer
            - type: string
      example:
        - 49
        - 48
        - electronics
    product_variations:
      name: filter[product_variations][]
      in: query
      required: false
      description: Filter by product variation slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - variation-1
        - variation-2
    min_quantity:
      name: filter[min_quantity]
      in: query
      required: false
      description: Minimum quantity.
      schema:
        type: integer
      example: 5
    max_quantity:
      name: filter[max_quantity]
      in: query
      required: false
      description: Maximum quantity.
      schema:
        type: integer
      example: 50
    vendors:
      name: filter[vendors][]
      in: query
      required: false
      description: Filter by vendor slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - vendor-1
        - vendor-2
    stores:
      name: filter[stores][]
      in: query
      required: false
      description: Filter by store slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - store-1
        - store-2
    brands:
      name: filter[brands][]
      in: query
      required: false
      description: Filter by brands slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - brand-1
        - brand-2
    status:
      name: filter[status][]
      in: query
      required: false
      description: Filter by status slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - pending
        - approved
    products:
      name: filter[products][]
      in: query
      required: false
      description: Filter by associated products slug.
      schema:
        type: array
        items:
          type: string
        example:
          - product-1
          - product-2
    warehouses:
      name: filter[warehouses][]
      in: query
      required: false
      description: Filter by warehouse slugs.
      schema:
        type: array
        items:
          type: string
      example:
        - warehouses-1
    country:
      name: filter[country][]
      in: query
      required: false
      description: Filter record by country name
      schema:
        type: array
        items:
          type: string
    address:
      name: filter[state_city]
      in: query
      required: false
      description: Filter records by state, city, or postal code. Partial matching is supported.
      schema:
        type: string
    users:
      name: filter[users][]
      in: query
      required: false
      description: Filter records by user first name.
      schema:
        type: array
        items:
          type: string
    attributes:
      name: filter[attributes][]
      in: query
      required: false
      description: Filter record by attributes name/slug
      schema:
        type: array
        items:
          type: string
    customers:
      name: filter[customers][]
      in: query
      required: false
      description: Filter by associated customers.
      schema:
        type: array
        items:
          type: string
    order:
      name: filter[order][]
      in: query
      required: false
      description: Filter by associated order.
      schema:
        type: array
        items:
          type: string
    ids_query:
      name: ids
      in: query
      required: false
      description: Filter records by their IDs. Example `?ids=[1,2,3]`
      schema:
        type: array
        items:
          type: integer
          example: 1
    exclude:
      name: exclude
      in: query
      required: false
      description: Comma-separated list of fields or relations to exclude from the response. Example`?exclude[price,status,productVariations]=true&exclude[medias]=true`
      schema:
        type: array
    include:
      name: include
      in: query
      required: false
      description: Comma-separated list of fields or relations to include in the response. Example`?include[price,status,productVariations]=true&include[medias]=true`
      schema:
        type: array
    filter_new_arrivals:
      name: filter[new_arrivals]
      in: query
      required: false
      description: Filters products by the "new arrivals". When using this filter, you must also provide a date range with `filter[from]` and `filter[to]`. Example `?filter[new_arrivals]=true&filter[from]=2024-11-01&filter[to]=2024-11-30`.
      schema:
        type: boolean
        example: true
    filter_from:
      name: filter[from]
      in: query
      required: false
      description: The start date for the new arrivals products, i.e., the date when the new product became available (`available_at`). Should be in `YYYY-MM-DD` format. This should be used in combination with `filter[to]` to define a date range for filtering products by their availability..
      schema:
        type: string
        format: date
        example: '2024-11-01'
    filter_to:
      name: filter[to]
      in: query
      required: false
      description: The end date for the filter range. Should be in `YYYY-MM-DD` format. This should be used in combination with `filter[from]`. It filters products that became available on or before this `available_at` date.
      schema:
        type: string
        format: date
        example: '2024-11-01'
    homepage_featured:
      name: filter[featured_on_homepage]
      in: query
      required: false
      description: Filters products based on whether they are featured on the homepage.Set to `true` to return products that are featured on the homepage.
      schema:
        type: boolean
        example: true
    categorypage_featured:
      name: filter[featured_on_category_page]
      in: query
      required: false
      description: Filters products based on whether they are featured on the category page.Set to `true` to return products that are featured on the category page.
      schema:
        type: boolean
        example: true
    top_sellings_filter:
      name: filter[top_selling]
      in: query
      required: false
      description: Filters products to return only top-selling items. Set to `true` to filter by top-selling products.
      schema:
        type: boolean
        example: true
  requestBodies:
    StoreRequestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - taxonomy_id_store_status
              - slug
              - is_multi_currency
              - is_multi_lingual
              - is_multi_vendor
              - allowed_ips
              - is_default
              - is_active
            properties:
              name:
                type: string
                description: The name of the store.
                example: My Store
              taxonomy_id_store_status:
                type: integer
                description: The taxonomy ID representing the store's status.
                example: 1
              slug:
                type: string
                description: A URL-friendly version of the store name.
                example: my-store
              notes:
                type: string
                description: Optional notes about the store.
                nullable: true
                example: Optional notes about the store
              is_multi_currency:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if the store supports multiple currencies.
                example: 1
              is_multi_lingual:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if the store supports multiple languages.
                example: 0
              is_multi_vendor:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if the store supports multiple vendors.
                example: 1
              allowed_ips:
                type: array
                items:
                  type: string
                  format: ipv4
                description: List of allowed IP addresses.
                example:
                  - 192.168.1.1
                  - 192.168.1.2
              status_notes:
                type: string
                description: Notes regarding the store's status.
                nullable: true
                example: Store is in review
              is_default:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if this is the default store.
                example: 0
              is_active:
                type: integer
                enum:
                  - 0
                  - 1
                description: Indicates if the store is active.
                example: 1
    ProductVariationRequestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the product variation.
              slug:
                type: string
                description: Slug for the product variation.
              price:
                type: number
                example: 59545
                description: Price of the product variation.
              taxonomy_id_variation_status:
                type: integer
                description: Taxonomy ID for the variation's status.
              vh_st_product_id:
                type: integer
                description: Product ID for the variation belongs to.
              sku:
                type: string
                example: Rerum sed ut eum aut.
                description: Stock Keeping Unit (SKU) of the product variation.
              product:
                type: object
                properties:
                  id:
                    type: integer
                    required: true
                  uuid:
                    type: string
                description: Product information to which the variation belongs.
              is_active:
                type: integer
                example: 1
                description: Whether the product variation is active.
              is_default:
                type: integer
                example: 0
                description: Flag indicating if the product variation is the default.
              description:
                type: string
                description: Description of the product variation.
              meta_title:
                type: string
                description: Meta title for SEO purposes.
              meta_description:
                type: string
                description: Meta description for SEO purposes.
              meta_keywords:
                type: array
                items:
                  type: string
                description: Meta keywords for SEO purposes.
              status_notes:
                type: string
                description: Notes related to the status.
              has_media:
                type: boolean
                example: false
                description: Flag indicating if the variation has associated media.
            required:
              - name
              - slug
              - price
              - sku
              - taxonomy_id_variation_status
              - vh_st_product_id
              - is_active
              - is_default
              - product
    ProductVendorRequestBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - vh_st_product_id
              - vh_st_vendor_id
              - added_by
              - can_update
              - product
              - vendor
              - taxonomy_id_product_vendor_status
              - store_vendor_product
            properties:
              vh_st_product_id:
                type: integer
                description: ID of the product being associated with the vendor.
              vh_st_vendor_id:
                type: integer
                description: ID of the vendor being associated with the product.
              added_by:
                type: integer
                description: ID of the user responsible for attaching the product to the vendor.
              can_update:
                type: integer
                example: 0
                description: Indicates whether the product can be updated by the user. A value of `0` means the product cannot be updated, while `1` means it can.
              is_active:
                type: integer
                example: 1
                description: Flag indicating if the product is active. A value of `1` means active, `0` means inactive.
              product:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    description: Unique identifier of the product.
                  name:
                    type: string
                    description: Name of the product.
                  vh_st_store_id:
                    type: integer
                    description: ID of the store associated with the product.
              vendor:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    description: Unique identifier of the vendor.
                  name:
                    type: string
                    description: Name of the vendor.
              store_vendor_product:
                type: array
                items:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: integer
                      description: ID of the store to which the product is linked.
              taxonomy_id_product_vendor_status:
                type: integer
                description: ID representing the product vendor status based on the taxonomy.
              status_notes:
                type: string
                description: Notes related to the status of the product-vendor relationship.
    ProductVendorUpdateRequestBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - id
              - vh_st_product_id
              - vh_st_vendor_id
              - added_by
              - can_update
              - product
              - vendor
              - taxonomy_id_product_vendor_status
              - store_vendor_product
            properties:
              id:
                type: string
                description: Unique identifier for the product vendor
              vh_st_product_id:
                type: integer
                description: ID of the product being associated with the vendor.
              vh_st_vendor_id:
                type: integer
                description: ID of the vendor being associated with the product.
              added_by:
                type: integer
                description: ID of the user responsible for attaching the product to the vendor.
              can_update:
                type: integer
                example: 0
                description: Indicates whether the product can be updated by the user. A value of `0` means the product cannot be updated, while `1` means it can.
              is_active:
                type: integer
                example: 1
                description: Flag indicating if the product is active. A value of `1` means active, `0` means inactive.
              product:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    description: Unique identifier of the product.
                  name:
                    type: string
                    description: Name of the product.
                  vh_st_store_id:
                    type: integer
                    description: ID of the store associated with the product.
              vendor:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    description: Unique identifier of the vendor.
                  name:
                    type: string
                    description: Name of the vendor.
              store_vendor_product:
                type: array
                items:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: integer
                      description: ID of the store to which the product is linked.
              taxonomy_id_product_vendor_status:
                type: integer
                description: ID representing the product vendor status based on the taxonomy.
              status_notes:
                type: string
                description: Notes related to the status of the product-vendor relationship.
    ProductStocksRequestBody:
      description: Request body for creating a new product stock
      content:
        application/json:
          schema:
            type: object
            required:
              - vh_st_vendor_id
              - vh_st_product_id
              - vh_st_product_variation_id
              - vh_st_warehouse_id
              - taxonomy_id_product_stock_status
              - is_active
              - quantity
            properties:
              vh_st_vendor_id:
                type: integer
                description: Unique identifier for the vendor
                example: 1
              vh_st_product_id:
                type: integer
                description: Unique identifier for the product
                example: 1
              vh_st_product_variation_id:
                type: integer
                description: Unique identifier for the product variation
                example: 1
              vh_st_warehouse_id:
                type: integer
                description: Unique identifier for the warehouse
              taxonomy_id_product_stock_status:
                type: integer
                description: Taxonomy status id for the product stocks
              quantity:
                type: integer
                description: Quantity of the product in stock
                example: 100
              is_active:
                type: integer
                description: Indicates if the product stock is active (default is true)
                example: 1
              status_notes:
                type: string
                description: Additional notes for the product stock
                example: Initial stock addition
    BrandsRequestBody:
      description: Request body for creating ot updating a brand
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the brand
              slug:
                type: string
                description: Slug for the brand (URL-friendly identifier)
              status:
                type: object
                description: Status details of the brand
                properties:
                  id:
                    type: integer
                    description: ID of the status
                required:
                  - id
              image:
                type: string
                nullable: true
                description: Image file name or URL for the brand
              is_active:
                type: integer
                description: Indicates if the brand is active (1 = active, 0 = inactive)
                example: 1
              meta_title:
                type: string
                description: SEO title for the brand
                example: samsung
              meta_description:
                type: string
                description: SEO description for the brand
                example: as
              meta_keywords:
                type: array
                items:
                  type: string
                description: SEO keywords for the brand
                example:
                  - as
                  - as
              status_notes:
                type: string
                nullable: true
                description: Notes regarding the status of the brand
                example: Hello
              registered_at:
                type: string
                format: date-time
                description: Date and time when the brand was registered
                example: '2024-10-07T06:37:58.000Z'
              registered_by:
                type: integer
                description: ID of the user who registered the brand
                example: 1
              approved_at:
                type: string
                format: date-time
                description: Date and time when the brand was approved
                example: '2024-10-07T06:37:58.000Z'
              approved_by:
                type: integer
                description: ID of the user who approved the brand
                example: 1
            required:
              - name
              - slug
              - status
    WarehousesRequestBody:
      description: Request body for creating ot updating a warehouse
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the warehouse
                example: Warehouse 2
              slug:
                type: string
                description: URL-friendly identifier for the warehouse
                example: warehouse-2
              address_1:
                type: string
                description: First line of the warehouse address
                example: Vitae culpa et debitis.
              country:
                type: string
                description: Country where the warehouse is located
                example: India
              vendor:
                type: object
                description: Vendor associated with the warehouse
                properties:
                  id:
                    type: integer
                    description: Vendor ID
                    example: 1
                  name:
                    type: string
                    description: Name of the vendor
                    example: Suscipit quos unde quia.
                  slug:
                    type: string
                    description: Slug of the vendor
                    example: suscipit-quos-unde-quia
                required:
                  - id
              vh_st_vendor_id:
                type: integer
                description: Vendor ID associated with the warehouse
                example: 1
              taxonomy_id_warehouse_status:
                type: integer
                description: Taxonomy ID for the warehouse status
                example: 27
              address_2:
                type: string
                nullable: true
                description: Second line of the warehouse address
                example: Ab hic voluptatem sit.
              city:
                type: string
                description: City where the warehouse is located
                example: Eos sint quidem nisi.
              state:
                type: string
                description: State or province where the warehouse is located
                example: Ad facilis ut non enim.
              postal_code:
                type: string
                description: Postal or ZIP code of the warehouse
                example: '123456'
              is_active:
                type: integer
                description: Indicates if the warehouse is active (1 = active, 0 = inactive)
                example: 1
              status:
                type: object
                description: Status of the warehouse
                properties:
                  id:
                    type: integer
                    description: ID of the warehouse status
                    example: 27
                  uuid:
                    type: string
                    description: UUID of the warehouse status
                    example: 336d82b3-d58a-45cc-9529-e3ecb53b9c4a
                required:
                  - id
              status_notes:
                type: string
                nullable: true
                description: Notes or comments regarding the status
                example: as
            required:
              - name
              - slug
              - vendor
              - country
              - address_1
              - status
              - vh_st_vendor_id
              - taxonomy_id_warehouse_status
    CustomerGroupRequestBody:
      description: Request body for creating or updating a customer group
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the customer group.
                maxLength: 150
              slug:
                type: string
                description: A URL-friendly version of the customer group's name.
                maxLength: 150
              customers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The unique identifier for the customer.
                  required:
                    - id
              taxonomy_id_customer_groups_status:
                type: integer
                description: The identifier for the status of the customer group.
              status_notes:
                type: string
                description: Additional notes regarding the status of the customer group.
                maxLength: 150
            required:
              - name
              - slug
              - customers
              - taxonomy_id_customer_groups_status
    PaymentMethodRequestBody:
      description: Request body for creating or updating a payment method
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the payment method.
                maxLength: 250
              slug:
                type: string
                description: A URL-friendly version of the payment method's name.
                maxLength: 250
              is_active:
                type: integer
                example: 1
                description: Whether the payment method is active.
            required:
              - name
              - slug
              - customers
              - taxonomy_id_customer_groups_status
  schemas:
    Credentials:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: The email address associated with your account.
          example: we@webreinvent.com
        password:
          type: string
          description: The password for your account.
          example: webreinvent
    Token:
      type: object
      properties:
        api_token:
          type: string
          description: The token used for authenticating requests. You will receive this token after a successful login.
          example: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    Store:
      type: object
      required:
        - id
        - name
        - taxonomy_id_store_status
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Store Name
        slug:
          type: string
          example: store-name
        is_multi_currency:
          type: boolean
          example: 1
        is_multi_vendor:
          type: boolean
          example: 1
        is_multi_lingual:
          type: boolean
          example: 1
        allowed_ips:
          type: array
          items:
            type: string
            format: ipv4
            example: 192.168.1.1
        status:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        status_notes:
          type: string
          example: Store status notes
        created_at:
          type: string
          format: date-time
    Product:
      type: object
      required:
        - id
        - name
        - store
      properties:
        id:
          type: integer
          format: int64
          example: 1
        uuid:
          type: string
          example: 8952d982-4aca-462e-8e90-2f8340a22582
        name:
          type: string
          example: My Product
        store:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        available_at:
          type: string
          format: date-time
          example: '2024-10-23T00:00:00Z'
        brand:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Nike
        variations:
          type: array
          description: An array of variation IDs associated with the product.
          items:
            type: integer
            example: 106
          example:
            - 106
            - 107
            - 108
        product_categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 213
              name:
                type: string
                example: Electronics
        product_price_range:
          type: object
          properties:
            price_range:
              type: array
              items:
                type: number
              example:
                - 0
                - 1
            quantity:
              type: integer
              example: 7
            selected_vendor:
              type: object
              example:
                vendor data: null
        status:
          type: object
          properties:
            id:
              type: integer
              example: 17
            name:
              type: string
              example: Approved
        updated_at:
          type: string
          format: date-time
          example: '2024-09-17T10:45:06Z'
    Vendor:
      type: object
      required:
        - id
        - name
        - slug
        - is_default
        - owned_by
        - approved_by
        - taxonomy_id_vendor_status
        - vh_st_store_id
        - store
      properties:
        id:
          type: integer
          format: int64
          example: 1
        uuid:
          type: string
          example: 8952d982-4aca-462e-8e90-2f8340a22582
        name:
          type: string
        slug:
          type: string
        store:
          type: object
          properties:
            id:
              required: true
              type: integer
            name:
              type: string
        registered_at:
          type: string
          format: date-time
          example: '2024-09-27 13:21:21'
        approvedByUser:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Admin User
        ownedByUser:
          type: object
          properties:
            id:
              type: integer
              example: 2
            name:
              type: string
              example: Owner User
        vendorProducts:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 101
              name:
                type: string
                example: Sample Product
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 3
              name:
                type: string
                example: User Name
        email:
          type: string
          nullable: true
          example: null
        phone_number:
          type: string
          nullable: true
          example: null
        address:
          type: string
          nullable: true
          example: null
        is_active:
          type: integer
          nullable: true
          example: null
        deleted_at:
          type: string
          format: date-time
          nullable: true
          example: null
        deleted_by:
          type: integer
          nullable: true
          example: null
        business_document_detail:
          type: string
          nullable: true
          example: null
        business_document_file:
          type: string
          nullable: true
          example: null
        business_document_type:
          type: string
          nullable: true
          example: null
        auto_approve_products:
          type: boolean
          nullable: true
          example: null
        meta:
          type: object
          nullable: true
          example: null
        services_offered:
          type: string
          nullable: true
          example: null
        created_at:
          type: string
          format: date-time
          example: '2024-09-27T10:00:00Z'
        approved_at:
          type: string
          format: date-time
          example: '2024-09-27 13:21:21'
        updated_at:
          type: string
          format: date-time
          example: '2024-09-27 13:21:21'
    ProductVariation:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the product variation
        uuid:
          type: string
          description: UUID for the product variation
        vh_st_product_id:
          type: integer
          description: Product ID to which the variation belongs
        name:
          type: string
          description: Name of the product variation
        price:
          type: number
          description: Price of the product variation
          format: float
        sku:
          type: string
          description: Stock Keeping Unit for the product variation
        slug:
          type: string
          description: Slug identifier for the product variation
        quantity:
          type: integer
          description: Quantity of the product variation in stock
        in_stock:
          type: boolean
          description: Flag indicating whether the product variation is in stock
        is_active:
          type: boolean
          description: Indicates if the product variation is active
        is_default:
          type: boolean
          description: Indicates if this variation is the default variation
        is_mail_sent:
          type: boolean
          description: Flag to check if email is sent regarding this variation
        is_quantity_low:
          type: boolean
          description: Flag to check if the product variation quantity is low
        low_stock_at:
          type: string
          description: Timestamp when the stock became low
          format: date-time
        status:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier of the status
            name:
              type: string
              description: Status name
            slug:
              type: string
              description: Slug identifier for the status
        status_notes:
          type: string
          description: Notes related to the status
          nullable: true
        taxonomy_id_variation_status:
          type: integer
          description: Taxonomy ID for the variation's status
        description:
          type: string
          description: Description of the product variation
          nullable: true
        meta:
          type: object
          description: Meta information for the product variation
          nullable: true
        meta_title:
          type: string
          description: Meta title for SEO purposes
          nullable: true
        meta_description:
          type: string
          description: Meta description for SEO purposes
          nullable: true
        meta_keywords:
          type: string
          description: Meta keywords for SEO purposes
          nullable: true
        has_media:
          type: boolean
          description: Flag indicating whether the variation has associated media
          nullable: true
        product:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the product
            name:
              type: string
              description: Product name
            slug:
              type: string
              description: Slug identifier for the product
            deleted_at:
              type: string
              description: Timestamp when the product was deleted
              nullable: true
              format: date-time
        created_at:
          type: string
          description: Timestamp when the variation was created
          format: date-time
        updated_at:
          type: string
          description: Timestamp when the variation was last updated
          format: date-time
        created_by:
          type: integer
          description: User ID of the creator of the variation
        updated_by:
          type: integer
          description: User ID who last updated the variation
        deleted_at:
          type: string
          description: Timestamp when the variation was deleted
          nullable: true
          format: date-time
        deleted_by:
          type: integer
          description: User ID who deleted the variation
          nullable: true
    ProductVendor:
      type: object
      properties:
        id:
          type: integer
        uuid:
          type: string
        vh_st_vendor_id:
          type: integer
        vh_st_product_id:
          type: integer
        added_by:
          type: string
          nullable: true
        added_by_user:
          type: string
          nullable: true
        can_update:
          type: integer
        created_at:
          type: string
          format: date-time
        created_by:
          type: string
          nullable: true
        deleted_at:
          type: string
          nullable: true
        deleted_by:
          type: string
          nullable: true
        is_active:
          type: integer
        meta:
          type: object
          nullable: true
        product:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            slug:
              type: string
            deleted_at:
              type: string
              nullable: true
            product_variations_for_vendor_product:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  uuid:
                    type: string
                  vh_st_product_id:
                    type: integer
        product_price_range:
          type: array
          items:
            type: integer
        status:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            slug:
              type: string
        status_notes:
          type: string
          nullable: true
        taxonomy_id_product_vendor_status:
          type: integer
        updated_at:
          type: string
          format: date-time
        updated_by:
          type: string
          nullable: true
        vendor:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            slug:
              type: string
            is_default:
              type: integer
            deleted_at:
              type: string
              nullable: true
    ProductStock:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the product stock
        uuid:
          type: string
          description: Unique identifier for the product stock instance
        vh_st_product_id:
          type: integer
          description: Unique identifier for the vendor product
        vh_st_product_variation_id:
          type: integer
          description: Unique identifier for the vendor product variation
        vh_st_vendor_id:
          type: integer
          description: Unique identifier for the vendor
        vh_st_warehouse_id:
          type: integer
          description: Unique identifier for the warehouse where the product stock is stored
        taxonomy_id_product_stock_status:
          type: integer
          description: Taxonomy ID for the product stock status
        quantity:
          type: integer
          description: Quantity of the product in stock
        is_active:
          type: integer
          description: Indicates if the product stock is active (1 for active, 0 for inactive)
        status_notes:
          type: string
          description: Additional notes regarding the status of the product stock
        status:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the stock status
            name:
              type: string
              description: Name of the stock status
            slug:
              type: string
              description: URL-friendly slug for the stock status
        meta:
          type: object
          description: Meta information about the product stock
          nullable: true
        vendor:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the vendor
            name:
              type: string
              description: Name of the vendor
            slug:
              type: string
              description: URL-friendly slug for the vendor
              nullable: true
        product:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the product
            name:
              type: string
              description: Name of the product
            slug:
              type: string
              description: URL-friendly slug for the product
            deleted_at:
              type: string
              format: date-time
              description: Timestamp when the product was deleted, if applicable
              nullable: true
        product_variation:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the product variation
            name:
              type: string
              description: Name of the product variation
            slug:
              type: string
              description: URL-friendly slug for the product variation
              nullable: true
            deleted_at:
              type: string
              format: date-time
              description: Timestamp when the product variation was deleted, if applicable
              nullable: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the product stock was last updated
        updated_by:
          type: integer
          description: ID of the user who last updated the product stock
        created_at:
          type: string
          format: date-time
          description: Timestamp when the product stock was created
        created_by:
          type: integer
          description: ID of the user who created the product stock
        deleted_at:
          type: string
          format: date-time
          description: Timestamp when the product stock was deleted, if applicable
          nullable: true
        deleted_by:
          type: integer
          description: ID of the user who deleted the product stock, if applicable
          nullable: true
      required:
        - id
        - quantity
        - product
        - product_variation
        - vendor
        - vh_st_product_id
        - vh_st_product_variation_id
        - vh_st_vendor_id
        - vh_st_warehouse_id
    Cart:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the cart
          example: 1
        uuid:
          type: string
          description: Unique UUID for the cart
          example: a1d88c58-70ed-48ea-9188-7e250fa3e815
        vh_user_id:
          type: integer
          description: Identifier of the user associated with the cart
          example: 121
        user:
          type: object
          description: Details of the user who owns the cart
          properties:
            id:
              type: integer
              description: Unique identifier for the user
              example: 121
            uuid:
              type: string
              description: Unique UUID for the user
            email:
              type: string
              description: User's email address
              example: shivam1@zieme.org
        created_at:
          type: string
          format: date-time
          description: The date and time when the cart was created
          example: '2024-10-01 16:32:56'
        updated_at:
          type: string
          format: date-time
          description: The date and time when the cart was last updated
          example: '2024-10-01 16:32:56'
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the cart was deleted (if applicable)
          example: null
        created_by:
          type: integer
          description: Identifier of the user who created the cart
          example: 1
        updated_by:
          type: integer
          description: Identifier of the user who last updated the cart
          example: 1
        deleted_by:
          type: integer
          nullable: true
          description: Identifier of the user who deleted the cart (if applicable)
          example: null
      required:
        - id
        - vh_user_id
        - user
    Order:
      type: object
      properties:
        id:
          type: integer
          example: 6
          description: The ID of the order.
        uuid:
          type: string
          example: b067e5fa-bfbc-4e91-beb2-ca0b1000cd53
          description: A unique identifier for the order.
        vh_user_id:
          type: integer
          example: 121
          description: The ID of the user associated with the order.
        order_status:
          type: string
          example: Placed
          description: The current status of the order.
        taxonomy_id_payment_status:
          type: integer
          description: The id of the order payment status.
        order_shipment_status:
          type: string
          example: Pending
          description: The current shipment status of the order.
        amount:
          type: number
          format: float
          example: 25
          description: The total amount for the order.
        delivery_fee:
          type: number
          format: float
          example: 0
          description: The delivery fee associated with the order.
        taxes:
          type: number
          format: float
          example: 0
          description: The total taxes applied to the order.
        discount:
          type: number
          format: float
          example: 0
          description: The total discount applied to the order.
        payable:
          type: number
          format: float
          example: 25
          description: The total amount that needs to be paid for the order.
        paid:
          type: number
          format: float
          example: 0
          description: The amount that has been paid for the order.
        is_paid:
          type: integer
          nullable: true
          example: 1
          description: Indicates if the order has been paid for.
        is_active:
          type: integer
          example: 1
          description: Indicates if the order is currently active.
        items_count:
          type: integer
          example: 2
          description: The total number of items in the order.
        payment_method:
          type: string
          nullable: true
          example: null
          description: The payment method used for the order.
        order_payment_status:
          type: object
          properties:
            id:
              type: integer
              example: 64
              description: The ID of the payment status.
            name:
              type: string
              example: Pending
              description: The name of the payment status.
            slug:
              type: string
              example: pending
              description: A URL-friendly version of the payment status name.
        status:
          type: string
          nullable: true
          example: null
          description: Additional status information for the order.
        status_notes:
          type: string
          nullable: true
          example: null
          description: Any notes related to the status of the order.
        user:
          type: object
          properties:
            id:
              type: integer
              example: 121
              description: The ID of the user.
            first_name:
              type: string
              example: Olin
              description: The first name of the user.
            email:
              type: string
              example: shivam1@zieme.org
              description: The email address of the user.
            phone:
              type: string
              example: '2509077310'
              description: The phone number of the user.
            display_name:
              type: string
              example: shivam
              description: The display name of the user.
        meta:
          type: object
          nullable: true
          description: Additional metadata related to the order.
        created_at:
          type: string
          format: date-time
          example: '2024-10-03T08:05:52Z'
          description: The date and time when the order was created.
        created_by:
          type: integer
          example: 1
          description: The ID of the user who created the order.
        updated_at:
          type: string
          format: date-time
          example: '2024-10-03T08:05:52Z'
          description: The date and time when the order was last updated.
        updated_by:
          type: integer
          example: 1
          description: The ID of the user who last updated the order.
    Payment:
      type: object
      properties:
        id:
          type: integer
        uuid:
          type: string
          description: Unique identifier for the payment.
        vh_st_payment_method_id:
          type: integer
          description: The ID of the payment method used.
        amount:
          type: string
          description: Total payment amount.
        transaction_id:
          type: string
          description: Unique transaction identifier.
        created_at:
          type: string
          format: date-time
          description: Date and time the payment was created.
        updated_at:
          type: string
          format: date-time
          description: Date and time the payment was last updated.
        status:
          type: object
          description: Status details of the payment.
          properties:
            id:
              type: integer
            name:
              type: string
              description: Status name of the payment.
            slug:
              type: string
              description: Slug of the payment status.
        payment_method:
          type: object
          description: Payment method details.
          properties:
            id:
              type: integer
            name:
              type: string
              description: Name of the payment method.
            slug:
              type: string
              description: Slug of the payment method.
        status_notes:
          type: string
          description: Notes regarding the payment status.
        orders_count:
          type: integer
          description: The number of orders associated with the payment.
        meta:
          type: object
          description: Additional metadata for the payment.
        is_active:
          type: boolean
          description: Whether the payment is active.
          nullable: true
        notes:
          type: string
          description: Additional notes regarding the payment.
          nullable: true
        payment_gate_status:
          type: string
          description: The status of the payment gateway.
          nullable: true
        payment_gate_response:
          type: string
          description: The response from the payment gateway.
          nullable: true
        deleted_at:
          type: string
          format: date-time
          description: The date and time the payment was deleted.
          nullable: true
        created_by:
          type: integer
          description: ID of the user who created the payment.
          nullable: true
        updated_by:
          type: integer
          description: ID of the user who last updated the payment.
          nullable: true
        deleted_by:
          type: integer
          description: ID of the user who deleted the payment.
          nullable: true
        date:
          type: string
          format: date-time
          description: The date the payment was processed.
    ProductAttribute:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the product attribute.
        uuid:
          type: string
          description: The unique UUID for the product attribute.
        vh_st_attribute_id:
          type: integer
          description: The associated attribute ID.
        vh_st_variation_id:
          type: integer
          description: The associated product variation ID.
        name:
          type: string
          description: Name of the product attribute.
        type:
          type: string
          description: Type or category of the product attribute.
        created_at:
          type: string
          format: date-time
          description: Date and time when the attribute was created.
        created_by:
          type: integer
          description: ID of the user who created the attribute.
        updated_at:
          type: string
          format: date-time
          description: Date and time when the attribute was last updated.
        updated_by:
          type: integer
          description: ID of the user who last updated the attribute.
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time when the attribute was deleted, if applicable.
        deleted_by:
          type: integer
          nullable: true
          description: ID of the user who deleted the attribute, if applicable.
        product_variation:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the product variation.
            name:
              type: string
              description: Name of the product variation.
            is_default:
              type: integer
              description: Whether this is the default variation (0 = no, 1 = yes).
            deleted_at:
              type: string
              format: date-time
              nullable: true
              description: Date and time when the variation was deleted, if applicable.
        attribute:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the attribute.
            name:
              type: string
              description: Name of the attribute.
            type:
              type: string
              description: type of the attribute.
            deleted_at:
              type: string
              format: date-time
              nullable: true
              description: Date and time when the attribute was deleted, if applicable.
    ProductMedia:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the product media.
        uuid:
          type: string
          format: uuid
          description: The UUID of the product media.
        vh_st_product_id:
          type: integer
          description: The ID of the associated product.
        taxonomy_id_product_media_status:
          type: integer
          description: The taxonomy ID of the status of the product media.
        name:
          type: string
          description: The name of the media file.
        is_active:
          type: integer
          description: Whether the media is active.
        created_at:
          type: string
          format: date-time
          description: The date and time when the media was created.
        created_by:
          type: integer
          description: The ID of the user who created the media.
        updated_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the media was last updated.
        updated_by:
          type: integer
          nullable: true
          description: The ID of the user who last updated the media.
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the media was deleted.
        deleted_by:
          type: integer
          nullable: true
          description: The ID of the user who deleted the media.
        status:
          type: object
          properties:
            id:
              type: integer
              description: The unique identifier of the taxonomy status.
            name:
              type: string
              description: The name of the status.
            slug:
              type: string
              description: The slug for the status.
        product:
          type: object
          properties:
            id:
              type: integer
              description: The unique identifier of the product.
            name:
              type: string
              description: The name of the product.
            slug:
              type: string
              description: The slug for the product.
            deleted_at:
              type: string
              format: date-time
              nullable: true
              description: The timestamp when the product was deleted.
        product_variation_media:
          type: array
          description: This contain the array of all the variations exist in this media
          items:
            type: object
            properties:
              id:
                type: integer
                description: The unique identifier of the product variation media.
              uuid:
                type: string
                format: uuid
                description: The UUID of the product variation media.
              vh_st_product_id:
                type: integer
                description: The ID of the associated product.
              description:
                type: string
                description: A description of the product variation media.
              is_active:
                type: boolean
                description: Whether the product variation media is active.
              is_default:
                type: boolean
                description: Whether the product variation media is the default.
              created_at:
                type: string
                format: date-time
                description: The date and time when the variation media was created.
              updated_at:
                type: string
                format: date-time
                nullable: true
                description: The date and time when the variation media was last updated.
              pivot:
                type: object
                properties:
                  vh_st_product_media_id:
                    type: integer
                    description: The ID of the product media in the pivot table.
                  vh_st_product_variation_id:
                    type: integer
                    description: The ID of the product variation in the pivot table.
                  vh_st_product_id:
                    type: integer
                    description: The ID of the product in the pivot table.
    Category:
      type: object
      properties:
        id:
          type: integer
          description: ID of the category
        uuid:
          type: string
          format: uuid
          description: UUID of the category
        parent_id:
          type: integer
          nullable: true
          description: ID of the parent category (nullable)
        name:
          type: string
          description: Name of the category
        slug:
          type: string
          description: Slug of the category
        is_active:
          type: integer
          description: Indicates if the category is active (1 = active, 0 = inactive)
        meta:
          type: object
          nullable: true
          description: Meta information about the category (nullable)
        parent_category:
          type: object
          nullable: true
          description: Parent category details
          properties:
            id:
              type: integer
              description: ID of the parent category
            uuid:
              type: string
              format: uuid
              description: UUID of the parent category
            parent_id:
              type: integer
              nullable: true
              description: Parent ID of the parent category (nullable)
            name:
              type: string
              description: Name of the parent category
            slug:
              type: string
              description: Slug of the parent category
            is_active:
              type: integer
              description: Indicates if the parent category is active (1 = active, 0 = inactive)
            meta:
              type: object
              nullable: true
              description: Meta information about the parent category (nullable)
        created_at:
          type: string
          format: date-time
          description: Timestamp of when the category was created
        updated_at:
          type: string
          format: date-time
          description: Timestamp of when the category was last updated
        created_by:
          type: integer
          description: ID of the user who created the category
        updated_by:
          type: integer
          description: ID of the user who last updated the category
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp of when the category was deleted (nullable)
        deleted_by:
          type: integer
          nullable: true
          description: ID of the user who deleted the category (nullable)
    Warehouse:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the warehouse
        uuid:
          type: string
          format: uuid
          description: Universally unique identifier for the warehouse
        name:
          type: string
          description: Name of the warehouse
        slug:
          type: string
          description: URL-friendly identifier for the warehouse
        address_1:
          type: string
          description: First line of the warehouse address
        address_2:
          type: string
          nullable: true
          description: Second line of the warehouse address
        city:
          type: string
          description: City where the warehouse is located
        state:
          type: string
          description: State or province where the warehouse is located
        postal_code:
          type: string
          description: Postal or ZIP code of the warehouse
        country:
          type: string
          description: Country where the warehouse is located
        is_active:
          type: integer
          description: Indicates if the warehouse is active (1 = active, 0 = inactive)
        meta:
          type: string
          nullable: true
          description: Additional metadata for the warehouse
        status:
          type: object
          description: Status of the warehouse
          properties:
            id:
              type: integer
              description: ID of the warehouse status
            name:
              type: string
              description: Name of the status
            slug:
              type: string
              description: Slug of the status
              example: approved
        status_notes:
          type: string
          nullable: true
          description: Notes or comments regarding the status
        taxonomy_id_warehouse_status:
          type: integer
          description: Taxonomy ID for the warehouse status
        vh_st_vendor_id:
          type: integer
          description: Vendor ID associated with the warehouse
        created_at:
          type: string
          format: date-time
          description: Timestamp when the warehouse was created
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the warehouse was last updated
        created_by:
          type: integer
          description: ID of the user who created the warehouse
        updated_by:
          type: integer
          description: ID of the user who last updated the warehouse
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the warehouse was deleted, if applicable
        deleted_by:
          type: integer
          nullable: true
          description: ID of the user who deleted the warehouse, if applicable
    Brand:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the brand
        uuid:
          type: string
          format: uuid
          description: Universally unique identifier (UUID) for the brand
        name:
          type: string
          description: Name of the brand
        slug:
          type: string
          description: Slug for the brand (URL-friendly identifier)
        image:
          type: string
          nullable: true
          description: Filename of the brand's image
        meta:
          type: string
          nullable: true
          description: Additional metadata for the brand
        meta_title:
          type: string
          nullable: true
          description: SEO title for the brand
        meta_description:
          type: string
          nullable: true
          description: SEO description for the brand
        meta_keywords:
          type: array
          items:
            type: string
          nullable: true
          description: SEO keywords for the brand
        is_active:
          type: integer
          description: Indicates if the brand is active (1 = active, 0 = inactive)
        is_default:
          type: integer
          nullable: true
          description: Indicates if the brand is default (1 = default, 0 = not default)
        taxonomy_id_brand_status:
          type: integer
          description: Status ID for the brand taxonomy
        status:
          type: object
          description: Status details of the brand
          properties:
            id:
              type: integer
              description: Status ID
            name:
              type: string
              description: Status name
            slug:
              type: string
              description: Status slug (URL-friendly identifier)
        status_notes:
          type: string
          nullable: true
          description: Notes regarding the status of the brand
        approved_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time when the brand was approved
        approved_by:
          type: integer
          nullable: true
          description: ID of the user who approved the brand
        approved_by_user:
          type: object
          description: Details of the user who approved the brand
          properties:
            id:
              type: integer
              description: User ID
            uuid:
              type: string
              format: uuid
              description: UUID of the user
            email:
              type: string
              description: Email of the user
            username:
              type: string
              description: Username of the user
        registered_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time when the brand was registered
        registered_by:
          type: integer
          nullable: true
          description: ID of the user who registered the brand
        registered_by_user:
          type: object
          description: Details of the user who registered the brand
          properties:
            id:
              type: integer
              description: User ID
            uuid:
              type: string
              format: uuid
              description: UUID of the user
            email:
              type: string
              description: Email of the user
            username:
              type: string
              description: Username of the user
        created_at:
          type: string
          format: date-time
          description: Date and time when the brand was created
        created_by:
          type: integer
          description: ID of the user who created the brand
        updated_at:
          type: string
          format: date-time
          description: Date and time when the brand was last updated
        updated_by:
          type: integer
          description: ID of the user who last updated the brand
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time when the brand was deleted
        deleted_by:
          type: integer
          nullable: true
          description: ID of the user who deleted the brand
        products:
          type: array
          description: List of products associated with the brand
          items:
            type: object
            properties:
              id:
                type: integer
                description: Unique identifier of the product
              name:
                type: string
                description: Name of the product
              slug:
                type: string
                description: Slug for the product
              vh_st_brand_id:
                type: integer
                description: Brand ID associated with the product
              vh_st_store_id:
                type: integer
                description: Store ID associated with the product
              store:
                type: object
                description: Details of the store associated with the product
                properties:
                  id:
                    type: integer
                    description: Unique identifier of the store
                  name:
                    type: string
                    description: Name of the store
                  slug:
                    type: string
                    description: Slug for the store
                  is_default:
                    type: integer
                    nullable: true
                    description: Indicates if the store is default (1 = default, 0 = not default)
    Attribute:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the attribute.
          example: 2
        uuid:
          type: string
          format: uuid
          description: UUID of the attribute.
          example: 7412ffaa-2e95-4ee4-a470-8450f7fe9359
        name:
          type: string
          description: Name of the attribute.
          example: Attribute B
        slug:
          type: string
          description: Slug for the attribute, used for SEO-friendly URLs.
          example: attribute-b
        description:
          type: string
          nullable: true
          description: Detailed description of the attribute.
          example: Et esse explicabo eos ut nemo ratione.
        type:
          type: string
          description: Type of the attribute (e.g., Size, Color, etc.).
          example: Size
        is_active:
          type: integer
          description: Status of the attribute (1 = active, 0 = inactive).
          example: 1
        meta:
          type: string
          nullable: true
          description: Additional metadata or information related to the attribute.
          example: null
        created_at:
          type: string
          format: date-time
          description: Timestamp when the attribute was created.
          example: '2024-10-04 10:36:56'
        created_by:
          type: integer
          description: ID of the user who created the attribute.
          example: 1
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the attribute was last updated.
          example: '2024-10-04 10:36:56'
        updated_by:
          type: integer
          description: ID of the user who last updated the attribute.
          example: 1
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the attribute was deleted, if applicable.
          example: null
        deleted_by:
          type: integer
          nullable: true
          description: ID of the user who deleted the attribute, if applicable.
          example: null
    AttributeGroup:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the attribute group.
        uuid:
          type: string
          description: The universally unique identifier (UUID) for the attribute group.
        name:
          type: string
          description: The name of the attribute group.
        slug:
          type: string
          description: The slug, a URL-friendly version of the name.
        description:
          type: string
          description: A brief description of the attribute group.
        is_active:
          type: integer
          description: Indicates if the attribute group is active (1 for active, 0 for inactive).
        created_at:
          type: string
          format: date-time
          description: The date and time when the attribute group was created.
        created_by:
          type: integer
          description: The ID of the user who created the attribute group.
        updated_at:
          type: string
          format: date-time
          description: The date and time when the attribute group was last updated.
        updated_by:
          type: integer
          description: The ID of the user who last updated the attribute group.
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the attribute group was deleted, if applicable.
        deleted_by:
          type: integer
          nullable: true
          description: The ID of the user who deleted the attribute group, if applicable.
        attributes_list:
          type: array
          description: A list of attributes associated with the attribute group.
          items:
            type: object
            properties:
              id:
                type: integer
                description: The unique identifier for the attribute.
              name:
                type: string
                description: The name of the attribute.
              type:
                type: string
                description: The type or category of the attribute.
              deleted_at:
                type: string
                format: date-time
                nullable: true
                description: The date and time when the attribute was deleted, if applicable.
              pivot:
                type: object
                description: Pivot information linking the attribute to the attribute group.
                properties:
                  vh_st_attribute_group_id:
                    type: integer
                    description: The ID of the attribute group.
                  vh_st_attribute_id:
                    type: integer
                    description: The ID of the attribute.
    Address:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the address.
        uuid:
          type: string
          description: The universally unique identifier for the address.
        vh_user_id:
          type: integer
          description: The ID of the user associated with the address.
        name:
          type: string
          description: The name of the person or entity associated with the address.
        address:
          type: string
          description: The complete address.
        address_line_1:
          type: string
          description: The first line of the address.
        address_line_2:
          type: string
          nullable: true
          description: The second line of the address, if available.
        city:
          type: string
          description: The city of the address.
        state:
          type: string
          description: The state of the address.
        pin_code:
          type: string
          description: The postal code or ZIP code for the address.
        country:
          type: string
          description: The country of the address.
        phone:
          type: string
          description: The phone number associated with the address.
        address_type:
          type: object
          description: The type of address, such as Billing or Shipping.
          properties:
            id:
              type: integer
              description: The unique identifier for the address type.
            name:
              type: string
              description: The name of the address type.
            slug:
              type: string
              description: The slug for the address type.
        status:
          type: object
          description: The current status of the address.
          properties:
            id:
              type: integer
              description: The unique identifier for the address status.
            name:
              type: string
              description: The name of the address status.
            slug:
              type: string
              description: The slug for the address status.
        is_default:
          type: integer
          nullable: true
          description: Indicates if this is the default address.
        status_notes:
          type: string
          nullable: true
          description: Additional notes about the status of the address.
        created_at:
          type: string
          format: date-time
          description: The date and time when the address was created.
        updated_at:
          type: string
          format: date-time
          description: The date and time when the address was last updated.
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the address was deleted, if applicable.
        created_by:
          type: integer
          nullable: true
          description: The ID of the user who created the address.
        updated_by:
          type: integer
          nullable: true
          description: The ID of the user who last updated the address.
        deleted_by:
          type: integer
          nullable: true
          description: The ID of the user who deleted the address.
        user:
          type: object
          description: The user associated with the address.
          properties:
            id:
              type: integer
              description: The unique identifier for the user.
            uuid:
              type: string
              description: The universally unique identifier for the user.
            first_name:
              type: string
              description: The first name of the user.
            email:
              type: string
              description: The email address of the user.
            avatar:
              type: string
              description: The avatar URL of the user.
            deleted_at:
              type: string
              format: date-time
              nullable: true
              description: The date and time when the user was deleted, if applicable.
    Wishlist:
      type: object
      properties:
        id:
          type: integer
          description: ID of the wishlist.
        uuid:
          type: string
          description: Unique identifier of the wishlist.
        name:
          type: string
          description: Name of the wishlist.
        slug:
          type: string
          description: Slugified version of the wishlist name.
        created_at:
          type: string
          format: date-time
          description: The timestamp when the wishlist was created.
        updated_at:
          type: string
          format: date-time
          description: The timestamp when the wishlist was last updated.
        created_by:
          type: integer
          description: ID of the user who created the wishlist.
        updated_by:
          type: integer
          description: ID of the user who last updated the wishlist.
        deleted_at:
          type: string
          format: date-time
          description: The timestamp when the wishlist was deleted (if applicable).
        is_default:
          type: integer
          description: Indicates if this is the default wishlist for the user.
        meta:
          type: object
          description: Additional metadata associated with the wishlist.
        status:
          type: object
          description: Status of the wishlist.
          properties:
            id:
              type: integer
              description: ID of the wishlist status.
            name:
              type: string
              description: Name of the status.
            slug:
              type: string
              description: Slug of the status.
            status_notes:
              type: string
              description: Notes associated with the status.
        taxonomy_id_whishlists_status:
          type: integer
          description: Taxonomy ID for the wishlist status.
        taxonomy_id_whishlists_types:
          type: integer
          description: Taxonomy ID for the wishlist type (if applicable).
        type:
          type: string
          description: Type of wishlist (if applicable).
        products:
          type: array
          description: List of products in the wishlist.
          items:
            type: object
            properties:
              id:
                type: integer
                description: ID of the product.
              name:
                type: string
                description: Name of the product.
              pivot:
                type: object
                properties:
                  vh_st_wishlist_id:
                    type: integer
                    description: ID of the wishlist associated with this product.
                  vh_st_product_id:
                    type: integer
                    description: ID of the product associated with this wishlist.
        user:
          type: object
          description: User who owns the wishlist.
          properties:
            id:
              type: integer
              description: ID of the user.
            first_name:
              type: string
              description: First name of the user.
            username:
              type: string
              description: Username of the user.
            avatar:
              type: string
              description: Avatar image URL of the user.
            uuid:
              type: string
              description: Unique identifier of the user.
    Customer:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the customer.
        uuid:
          type: string
          description: Universally unique identifier (UUID) for the customer.
        email:
          type: string
          description: Email address of the customer.
        activated_at:
          type: string
          format: date-time
          description: Timestamp when the customer was activated.
          nullable: true
        active_roles_count:
          type: integer
          description: Number of active roles the customer has.
        affiliate_code:
          type: string
          description: Affiliate code of the customer.
        affiliate_code_used_at:
          type: string
          format: date-time
          description: Timestamp when the affiliate code was used.
          nullable: true
        alternate_email:
          type: string
          description: Alternate email address of the customer.
        avatar:
          type: string
          description: URL to the customer's avatar.
        avatar_url:
          type: string
          description: Alternative URL for the customer's avatar.
        bio:
          type: string
          description: Biography or description of the customer.
        birth:
          type: string
          format: date
          description: Customer's date of birth.
        country:
          type: string
          description: Country where the customer is located.
        country_calling_code:
          type: integer
          description: Country calling code for the customer.
        country_code:
          type: string
          description: ISO country code of the customer's location.
        created_at:
          type: string
          format: date-time
          description: Timestamp when the customer record was created.
        created_by:
          type: integer
          description: ID of the user who created the customer record.
        created_ip:
          type: string
          description: IP address of the user who created the customer record.
        customer_groups:
          type: array
          description: Array of customer groups the customer belongs to.
          items:
            type: object
        deleted_at:
          type: string
          format: date-time
          description: Timestamp when the customer record was deleted.
          nullable: true
        deleted_by:
          type: integer
          description: ID of the user who deleted the customer record.
          nullable: true
        designation:
          type: string
          description: Customer's designation or title.
        display_name:
          type: string
          description: Display name of the customer.
        first_name:
          type: string
          description: Customer's first name.
        foreign_user_id:
          type: integer
          description: Foreign ID for external systems.
        gender:
          type: string
          description: Gender of the customer.
        is_active:
          type: integer
          description: Indicates if the customer account is active.
        last_login_at:
          type: string
          format: date-time
          description: Timestamp when the customer last logged in.
          nullable: true
        last_login_ip:
          type: string
          description: IP address of the customer's last login.
        last_name:
          type: string
          description: Customer's last name.
        meta:
          type: object
          description: Additional metadata about the customer.
          properties:
            custom_fields:
              type: object
              description: Custom fields related to the customer.
              properties:
                state:
                  type: string
                  description: Custom field for customer state.
        mfa_methods:
          type: string
          description: Multi-factor authentication methods used by the customer.
        middle_name:
          type: string
          description: Customer's middle name.
        name:
          type: string
          description: Customer's full name.
        phone:
          type: integer
          description: Customer's phone number.
        registration_id:
          type: integer
          description: Registration ID associated with the customer.
          nullable: true
        reset_password_code_sent_at:
          type: string
          format: date-time
          description: Timestamp when the reset password code was sent.
          nullable: true
        reset_password_code_used_at:
          type: string
          format: date-time
          description: Timestamp when the reset password code was used.
          nullable: true
        security_code:
          type: string
          description: Security code for the customer.
        security_code_expired_at:
          type: string
          format: date-time
          description: Timestamp when the security code expires.
          nullable: true
        status:
          type: string
          description: Status of the customer.
        timezone:
          type: string
          description: Timezone of the customer.
        title:
          type: string
          description: Title of the customer (e.g., Mr, Mrs, Miss).
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the customer record was last updated.
        updated_by:
          type: integer
          description: ID of the user who last updated the customer record.
        username:
          type: string
          description: Username of the customer.
        website:
          type: string
          description: Customer's website URL.
    CustomerGroup:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the customer group.
        uuid:
          type: string
          description: The universally unique identifier for the customer group.
        taxonomy_id_customer_groups_status:
          type: integer
          description: The identifier for the status of the customer group.
        created_at:
          type: string
          format: date-time
          description: The timestamp when the customer group was created.
        created_by:
          type: integer
          description: The identifier of the user who created the customer group.
        updated_at:
          type: string
          format: date-time
          description: The timestamp when the customer group was last updated.
        updated_by:
          type: integer
          description: The identifier of the user who last updated the customer group.
        deleted_at:
          type: string
          nullable: true
          description: The timestamp when the customer group was deleted, if applicable.
        deleted_by:
          type: integer
          nullable: true
          description: The identifier of the user who deleted the customer group, if applicable.
        name:
          type: string
          description: The name of the customer group.
        slug:
          type: string
          description: A URL-friendly version of the customer group's name.
        status:
          type: object
          properties:
            id:
              type: integer
              description: The unique identifier for the status of the customer group.
            name:
              type: string
              description: The name of the status of the customer group.
            slug:
              type: string
              description: A URL-friendly version of the status name.
        status_notes:
          type: string
          description: Additional notes regarding the status of the customer group.
        customers:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: The unique identifier for the customer.
              first_name:
                type: string
                description: The first name of the customer.
              last_name:
                type: string
                description: The last name of the customer.
              display_name:
                type: string
                description: The display name of the customer.
              avatar:
                type: string
                format: uri
                description: The URL of the customer's avatar image.
              pivot:
                type: object
                properties:
                  vh_st_customer_group_id:
                    type: integer
                    description: The identifier for the customer group in the pivot table.
                  vh_st_user_id:
                    type: integer
                    description: The identifier for the user in the pivot table.
        meta:
          type: object
          nullable: true
          description: Additional metadata associated with the customer group.
    PaymentMethod:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the payment method.
        uuid:
          type: string
          description: Universally Unique Identifier for the payment method.
        name:
          type: string
          description: Name of the payment method.
        slug:
          type: string
          description: A URL-friendly version of the payment method's name.
        is_active:
          type: integer
          description: Status indicating if the payment method is active (1) or inactive (0).
        created_at:
          type: string
          format: date-time
          description: Timestamp when the payment method was created.
        created_by:
          type: integer
          description: Identifier of the user who created the payment method.
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the payment method was last updated.
        updated_by:
          type: integer
          description: Identifier of the user who last updated the payment method.
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the payment method was deleted (if applicable).
        deleted_by:
          type: integer
          nullable: true
          description: Identifier of the user who deleted the payment method (if applicable).
        meta:
          type: object
          nullable: true
          description: Additional metadata related to the payment method (optional).
    Shipment:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the shipment.
        uuid:
          type: string
          format: uuid
          description: Universally unique identifier for the shipment.
        taxonomy_id_shipment_status:
          type: integer
          description: Identifier for the shipment status taxonomy.
        name:
          type: string
          description: Name of the product associated with the shipment.
        tracking_url:
          type: string
          format: uri
          description: URL for tracking the shipment.
        tracking_key:
          type: string
          description: Key used for tracking the shipment.
        tracking_value:
          type: string
          description: Value or description related to the tracking of the shipment.
        is_trackable:
          type: integer
          description: Indicates whether the shipment is trackable (1 for true, 0 for false).
        created_at:
          type: string
          format: date-time
          description: Timestamp when the shipment was created.
        created_by:
          type: integer
          description: Identifier for the user who created the shipment.
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the shipment was deleted, if applicable.
        deleted_by:
          type: integer
          nullable: true
          description: Identifier for the user who deleted the shipment, if applicable.
        meta:
          type: object
          nullable: true
          description: Additional metadata related to the shipment.
        orders_count:
          type: integer
          description: Number of orders associated with the shipment.
        status:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for the shipment status.
            parent_id:
              type: integer
              nullable: true
              description: Identifier for the parent status, if applicable.
            vh_taxonomy_type_id:
              type: integer
              description: Identifier for the taxonomy type of the shipment status.
            is_active:
              type: integer
              description: Indicates whether the shipment status is active (1 for true, 0 for false).
            name:
              type: string
              description: Name of the shipment status.
            slug:
              type: string
              description: URL-friendly version of the shipment status name.

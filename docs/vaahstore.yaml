openapi: 3.0.0
info:
  title: VaahStore
  description: |
    The VaahStore is an example OpenAPI specification for user authentication and store management.
    Get started by [signing up](#tag/Authentication/POST/user/signup).
  version: 1.0.0
  contact:
    name: webreinvent team
    url: https://webreinvent.com/
    email: we@webreinvent.com
servers:
  - url: http://127.0.0.1:8000/api
security:
  - bearerAuth: []
  - basicAuth: []
tags:
  - name: Stores
    description: Everything about Stores
  - name: Products
    description: Everything about Products in VaahStore

paths:
  '/store/stores':
    $ref: './stores/stores.yaml'  # Reference to the stores file

  /store/stores/{id}/action/{action}:
    $ref: './stores/storeAction.yaml'  # Reference to the stores file

  /store/stores/{id}:
    $ref: './stores/storeUpdate.yaml'  # Reference to the stores file

  /store/stores/action/{action}:
    $ref: './stores/storeListAction.yaml'  # Reference to the stores file

  '/store/products':
    $ref: './products/products.yaml'  # Reference to the create products file

  '/store/products/{id}':
    $ref: './products/productUpdate.yaml'  # Reference to the create products file

  '/store/products/{id}/action/{action}':
    $ref: './products/productAction.yaml'  # Reference to the create products file

  '/store/products/action/{action}':
    $ref: './products/productListAction.yaml'  # Reference to the create products file

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    basicAuth:
      type: http
      scheme: basic
  parameters:
    limit:
      name: limit
      in: query
      description: The number of items to return
      required: false
      schema:
        type: integer
        format: int64
        default: 10
    offset:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result set
      required: false
      schema:
        type: integer
        format: int64
        default: 0
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/Error'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/Error'
    RecordNotExist:
      description: Record does not exist
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Record does not exist"
    Error:
      description: Generic Error Response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "An error occurred"
  schemas:

    NewUser:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          examples:
            - Marc
        email:
          type: string
          format: email
          examples:
            - marc@scalar.com
        password:
          type: string
          minLength: 8
          examples:
            - i-love-scalar
    User:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
        name:
          type: string
          examples:
            - Marc
        email:
          type: string
          format: email
          examples:
            - marc@scalar.com
    Credentials:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          examples:
            - marc@scalar.com
        password:
          type: string
          examples:
            - i-love-scalar
    Token:
      type: object
      properties:
        token:
          type: string
          examples:
            - eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    Store:
      type: object
      required:
        - id
        - name
        - taxonomy_id_store_status
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Store Name"
        slug:
          type: string
          example: "store-name"
        status:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        description:
          type: string
          example: "Description of the store"
    Product:
      type: object
      required:
        - id
        - name
        - store
      properties:
        id:
          type: integer
          format: int64
          example: 1
        uuid:
          type: string
          example: "8952d982-4aca-462e-8e90-2f8340a22582"
        name:
          type: string
          example: "My Product"
        store:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        available_at:
          type: string
          format: date-time
          example: "2024-10-23T00:00:00Z"
        brand:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: "Nike"
        product_categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 213
              name:
                type: string
                example: "Electronics"
        product_price_range:
          type: object
          properties:
            price_range:
              type: array
              items:
                type: number
              example: [ 0, 1 ]
            quantity:
              type: string
              example: "7"
        status:
          type: object
          properties:
            id:
              type: integer
              example: 17
            name:
              type: string
              example: "Approved"
        updated_at:
          type: string
          format: date-time
          example: "2024-09-17T10:45:06Z"


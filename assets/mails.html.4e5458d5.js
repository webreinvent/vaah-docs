import{_ as o,r as i,o as l,c,a,b as n,w as t,d as e,e as p}from"./app.096e9617.js";const d={},r=a("h1",{id:"mails",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#mails","aria-hidden":"true"},"#"),e(" Mails")],-1),u={class:"table-of-contents"},m=p(`<h2 id="setup-laravel-queues-for-vaahcms" tabindex="-1"><a class="header-anchor" href="#setup-laravel-queues-for-vaahcms" aria-hidden="true">#</a> Setup Laravel Queues for VaahCMS</h2><p>Follow the following steps:</p><ol><li><p>Set <code>QUEUE_CONNECTION</code> to <code>database</code> in your active <code>env</code> file</p></li><li><p>Visit <code>Setting &gt; General &gt; Site Settings &gt; Laravel Queues</code> in your <code>backend dashboard</code> and enable it.</p></li><li><p>Run or setup <code>cron/daemon</code> job for</p><p><code>php artisan queue:work --queue=high,medium,low,default --env=env_filename</code></p><p>If you want to run without cache use following command:</p><p><code>php artisan queue:listen --queue=high,medium,low,default --env=env_filename</code> eg:</p><p><code>php artisan queue:listen --queue=high,medium,low,default --env=develop</code></p></li></ol><p>If you make any changes in code of your <code>Job</code> class, then you must restart the <code>queue:work</code> command.</p><hr><h2 id="send-mails-with-laravel-queues" tabindex="-1"><a class="header-anchor" href="#send-mails-with-laravel-queues" aria-hidden="true">#</a> Send mails with Laravel Queues</h2><p>By default <code>VaahCMS</code> does not use Laravel queues/jobs to schedule the mail. Hence, mails will be send immediately.</p><h3 id="send-a-generic-mail" tabindex="-1"><a class="header-anchor" href="#send-a-generic-mail" aria-hidden="true">#</a> Send a generic mail:</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">VaahMail</span><span class="token operator">::</span><span class="token function">dispatchGenericMail</span><span class="token punctuation">(</span><span class="token variable">$subject</span><span class="token punctuation">,</span> <span class="token variable">$message</span><span class="token punctuation">,</span> <span class="token variable">$to</span><span class="token punctuation">,</span> <span class="token variable">$from_email</span><span class="token punctuation">,</span> 
                              <span class="token variable">$from_name</span><span class="token punctuation">,</span> <span class="token variable">$cc</span><span class="token punctuation">,</span> <span class="token variable">$bcc</span><span class="token punctuation">,</span> <span class="token variable">$priority</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>$subject</code></td><td>Subject of the email</td></tr><tr><td><code>$message</code></td><td>Content of the message, it can have <code>html</code> tags</td></tr><tr><td><code>$to</code></td><td>List of recipients in array format.</td></tr><tr><td><code>$from_email</code></td><td>From email, if it&#39;s not set, then it will try to get the <code>domain</code> from <code>APP_URL</code> and add <code>noreply</code>. Eg: <code>noreply@&lt;domain&gt;</code></td></tr><tr><td><code>$from_name</code></td><td>From name, if it&#39;s not set, the name will be taken from <code>APP_NAME</code></td></tr><tr><td><code>$cc</code></td><td>List of <code>cc</code> recipients in array format.</td></tr><tr><td><code>$bcc</code></td><td>List of <code>bcc</code> recipients in array format.</td></tr></tbody></table><p>Eg: An example of <code>$to</code> , <code>$cc</code> and <code>$bcc</code> is following:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$contacts</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;email@example.com&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;email2@example.com&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="send-laravel-mails" tabindex="-1"><a class="header-anchor" href="#send-laravel-mails" aria-hidden="true">#</a> Send Laravel mails</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">VaahMail</span><span class="token operator">::</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token variable">$mail</span><span class="token punctuation">,</span> <span class="token variable">$to</span><span class="token punctuation">,</span> <span class="token variable">$cc</span><span class="token punctuation">,</span> <span class="token variable">$bcc</span><span class="token punctuation">,</span> <span class="token variable">$priority</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p><code>$mail</code> should an instance of Laravel Mail <code>Illuminate\\Mail\\Mailable</code> class.</p></li><li><p><code>$to</code> is the array of recipient:</p></li><li><p><code>$priority</code> it is the order of execution of the jobs. You can provide following values <code>high</code>, <code>medium</code> <code>low</code> &amp; <code>default</code></p></li></ul><hr><h3 id="send-mail-to-a-user" tabindex="-1"><a class="header-anchor" href="#send-mail-to-a-user" aria-hidden="true">#</a> Send mail to a user:</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">VaahMail</span><span class="token operator">::</span><span class="token function">dispatchToUser</span><span class="token punctuation">(</span><span class="token variable">$mail</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$cc</span><span class="token punctuation">,</span> <span class="token variable">$bcc</span><span class="token punctuation">,</span> <span class="token variable">$priority</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>$user</code> is an instance of <code>WebReinvent\\VaahCms\\Entities\\User</code></li></ul><hr><h3 id="send-a-mail-to-super-administrators" tabindex="-1"><a class="header-anchor" href="#send-a-mail-to-super-administrators" aria-hidden="true">#</a> Send a mail to Super Administrators</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">notifySuperAdmins</span><span class="token punctuation">(</span><span class="token variable">$subject</span><span class="token punctuation">,</span> <span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="send-mails-without-laravel-queues" tabindex="-1"><a class="header-anchor" href="#send-mails-without-laravel-queues" aria-hidden="true">#</a> Send mails without Laravel Queues</h3><p>If you want to send the mails without Laravel queues, you can use following code</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">VaahMail</span><span class="token operator">::</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token variable">$mail</span><span class="token punctuation">,</span> <span class="token variable">$to</span><span class="token punctuation">,</span> <span class="token variable">$cc</span><span class="token punctuation">,</span> <span class="token variable">$bcc</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="customizing-the-templates" tabindex="-1"><a class="header-anchor" href="#customizing-the-templates" aria-hidden="true">#</a> Customizing The Templates</h2><p>To customize the default Laravel mail &amp; notification template you must publish the asset, using following commands:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>php artisan vendor<span class="token punctuation">:</span>publish <span class="token operator">--</span>tag<span class="token operator">=</span>laravel<span class="token operator">-</span>mail
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>php artisan vendor<span class="token punctuation">:</span>publish <span class="token operator">--</span>tag<span class="token operator">=</span>laravel<span class="token operator">-</span>notifications
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This will publish files under <code>resources/views/vendor/mail</code> directory. To update the UI of the VaahCMS <code>Mails</code>, you can edit following file:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>resources/views/vendor/mail/html/header.blade.php
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>resources/views/vendor/mail/html/footer.blade.php
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>resources/views/vendor/mail/html/themes/default.css
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr>`,36);function h(v,k){const s=i("router-link");return l(),c("div",null,[r,a("nav",u,[a("ul",null,[a("li",null,[n(s,{to:"#setup-laravel-queues-for-vaahcms"},{default:t(()=>[e("Setup Laravel Queues for VaahCMS")]),_:1})]),a("li",null,[n(s,{to:"#send-mails-with-laravel-queues"},{default:t(()=>[e("Send mails with Laravel Queues")]),_:1}),a("ul",null,[a("li",null,[n(s,{to:"#send-a-generic-mail"},{default:t(()=>[e("Send a generic mail:")]),_:1})]),a("li",null,[n(s,{to:"#send-laravel-mails"},{default:t(()=>[e("Send Laravel mails")]),_:1})]),a("li",null,[n(s,{to:"#send-mail-to-a-user"},{default:t(()=>[e("Send mail to a user:")]),_:1})]),a("li",null,[n(s,{to:"#send-a-mail-to-super-administrators"},{default:t(()=>[e("Send a mail to Super Administrators")]),_:1})]),a("li",null,[n(s,{to:"#send-mails-without-laravel-queues"},{default:t(()=>[e("Send mails without Laravel Queues")]),_:1})])])]),a("li",null,[n(s,{to:"#customizing-the-templates"},{default:t(()=>[e("Customizing The Templates")]),_:1})])])]),m])}const g=o(d,[["render",h],["__file","mails.html.vue"]]);export{g as default};

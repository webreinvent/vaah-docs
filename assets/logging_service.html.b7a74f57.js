import{_ as c,r as o,o as r,c as p,a as n,d as s,b as a,w as e,e as l}from"./app.62b9cc5c.js";const u={},d=n("h1",{id:"logging-service",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#logging-service","aria-hidden":"true"},"#"),s(" Logging Service")],-1),g=n("div",{class:"custom-container warning"},[n("p",{class:"custom-container-title"},"Dependencies"),n("p",null,"None")],-1),v={class:"custom-container danger"},k=n("p",{class:"custom-container-title"},"Developer Guide",-1),m={class:"table-of-contents"},h=l('<h2 id="log-types" tabindex="-1"><a class="header-anchor" href="#log-types" aria-hidden="true">#</a> Log types</h2><p>Currently, three types of logging functions are there in abstract class <code>LoggingService</code>.</p><ol><li>event</li><li>exception</li><li>transaction</li></ol><ul><li>event is used to for log, info, success, and warning.</li><li>exception is used to for logging exceptions.</li><li>transaction is used to for logging transactions.</li></ul><h2 id="loggingservice" tabindex="-1"><a class="header-anchor" href="#loggingservice" aria-hidden="true">#</a> LoggingService</h2>',5),_=n("li",null,[n("p",null,"This service is abstract class and is used to implement different cloud services. e.g. Sentry, Google CrashAnalytics, etc.")],-1),b=n("code",null,"LoggingService",-1),y=l(`<div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;../models/log.dart&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">LoggingService</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">logEvent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    required <span class="token class-name">String</span> message<span class="token punctuation">,</span>
    required <span class="token class-name">EventType</span> type<span class="token punctuation">,</span>
    <span class="token class-name">Object</span><span class="token operator">?</span> data<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span>
      <span class="token class-name">UnimplementedError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">static</span> <span class="token function">logException</span><span class="token punctuation">(</span>
    <span class="token keyword">dynamic</span> throwable<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token keyword">dynamic</span> stackTrace<span class="token punctuation">,</span>
    <span class="token keyword">dynamic</span> hint<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span>
      <span class="token class-name">UnimplementedError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">static</span> <span class="token function">logTransaction</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    required <span class="token class-name">Function</span> execute<span class="token punctuation">,</span>
    required <span class="token class-name">TransactionDetails</span> details<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">=</span><span class="token operator">&gt;</span>
      <span class="token class-name">UnimplementedError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function f(w,x){const t=o("RouterLink"),i=o("router-link");return r(),p("div",null,[d,g,n("div",v,[k,n("ul",null,[n("li",null,[s("Developer should never use this service directly, use "),a(t,{to:"/vaahflutter/directory_structure/vaahextendflutter/services/logging_library/logging_library.html"},{default:e(()=>[s("Logging Library")]),_:1}),s(" instead.")])])]),n("nav",m,[n("ul",null,[n("li",null,[a(i,{to:"#log-types"},{default:e(()=>[s("Log types")]),_:1})]),n("li",null,[a(i,{to:"#loggingservice"},{default:e(()=>[s("LoggingService")]),_:1})])])]),h,n("ul",null,[_,n("li",null,[n("p",null,[s("Check "),a(t,{to:"/vaahflutter/directory_structure/vaahextendflutter/services/logging_library/logging_library.html#how-to-add-new-cloud-service"},{default:e(()=>[s("here")]),_:1}),s(" how can you add new cloud logging service.")])]),n("li",null,[n("p",null,[s("This service defines basic structure for services which implements "),b,s(" so when different services are used in "),a(t,{to:"/vaahflutter/directory_structure/vaahextendflutter/services/logging_library/logging_library.html"},{default:e(()=>[s("logging_library")]),_:1}),s(", they do provide basic functions needed.")])])]),y])}const S=c(u,[["render",f],["__file","logging_service.html.vue"]]);export{S as default};

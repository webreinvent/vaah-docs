(self.webpackChunkvuepress=self.webpackChunkvuepress||[]).push([[4110],{5632:(e,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>o});const o={key:"v-3db3ab63",path:"/vaahcms/basic/setting/manage-env.html",title:"Manage Env Variables",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"vaahcms/basic/setting/manage-env.md",git:{updatedTime:1627122338e3}}},2568:(e,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>m});var o=a(6252);const t=(0,o.uE)('<h1 id="manage-env-variables" tabindex="-1"><a class="header-anchor" href="#manage-env-variables" aria-hidden="true">#</a> Manage Env Variables</h1><p>Env file contains various settings, one row â€“ one KEY=VALUE pair. And then, within your project code you can get those environment variables with function <code>env(&#39;KEY&#39;)</code>.</p><p>The <code>.env</code> file stores configuration variables for your application and <code>.env.example</code> is simply an example of what might be in the <code>.env</code> file! You can easily rename <code>.env.example</code> to <code>.env</code> to get started.</p><p>The <code>.env</code> file also contains your app key which is used for encryption in your app. In Laravel, you can maintain separate configuration from your application. For example:- Your local dev environment has different database credentials than production environment. For more detail, view Laravel Documentation.</p>',4),i={href:"https://laravel.com/docs/8.x/configuration#environment-configuration",target:"_blank",rel:"noopener noreferrer"},r=(0,o.Uk)("Read Documentation"),l=(0,o.uE)('<hr><h5 id="configure-env-from-backend" tabindex="-1"><a class="header-anchor" href="#configure-env-from-backend" aria-hidden="true">#</a> Configure Env from Backend</h5><p><code>VaahCms</code> provide us different <code>env</code> file for different environment or for different <code>Developers</code>. You can also create a <code>env</code> file of <code>custom</code> name. For example:- env.local, env.production, env.username</p><p>It will automatically detect your <code>env</code> file by App Url. If App url not found then it will fetch <code>.env</code> file.</p><p>Visit following url you will see the <code>Env Variables</code> section:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;project-url&gt;/backend#/vaah/settings/env-variables\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',6),c=(0,o.Wm)("p",null,[(0,o.Uk)("You can "),(0,o.Wm)("code",null,"add"),(0,o.Uk)(" and "),(0,o.Wm)("code",null,"update"),(0,o.Uk)(" env variables directly from here.")],-1),d=(0,o.Wm)("p",null,[(0,o.Uk)("After click on "),(0,o.Wm)("code",null,"Save"),(0,o.Uk)(" button, you will see a "),(0,o.Wm)("code",null,"Pop-up"),(0,o.Uk)(" that is for confirmation.")],-1),s=(0,o.Wm)("p",null,[(0,o.Uk)("When you click on "),(0,o.Wm)("code",null,"Proceed"),(0,o.Uk)(", You will be "),(0,o.Wm)("code",null,"logout"),(0,o.Uk)(" and "),(0,o.Wm)("code",null,"redirected"),(0,o.Uk)(" to login page.")],-1),u=(0,o.Wm)("hr",null,null,-1),m={render:function(e,n){const a=(0,o.up)("OutboundLink");return(0,o.wg)(),(0,o.j4)(o.HY,null,[t,(0,o.Wm)("p",null,[(0,o.Wm)("a",i,[r,(0,o.Wm)(a)])]),l,(0,o.Wm)("img",{src:e.$withBase("/images/manage-env-1.png"),alt:"manage-env-1"},null,8,["src"]),(0,o.Wm)("img",{src:e.$withBase("/images/manage-env-2.png"),alt:"manage-env-2"},null,8,["src"]),c,d,(0,o.Wm)("img",{src:e.$withBase("/images/manage-env-3.png"),alt:"manage-env-3"},null,8,["src"]),s,u],64)}}}}]);
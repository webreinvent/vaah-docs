(self.webpackChunkvuepress=self.webpackChunkvuepress||[]).push([[2688],{9827:(t,e,a)=>{"use strict";a.r(e),a.d(e,{data:()=>n});const n={key:"v-00608dd4",path:"/vaahcms/cms/content-type.html",title:"Content Types",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"vaahcms/cms/content-type.md",git:{updatedTime:1627055118e3}}},1325:(t,e,a)=>{"use strict";a.r(e),a.d(e,{default:()=>r});var n=a(6252);const s=(0,n.uE)('<h1 id="content-types" tabindex="-1"><a class="header-anchor" href="#content-types" aria-hidden="true">#</a> Content Types</h1><p>This section provides information about the <code>Content Types</code> in <code>CMS</code> modules</p><p>Content Type is the structure or blueprint of a page or a section that your Web Page will display. It lets you define the overall schema of this blueprint by adding fields and setting its properties. Content Type is a pre-defined collection of data types (Fields).</p><p>In essence, creating a content type is like creating a mold or cast that lets you create several objects (entries) of the same nature and pattern. Content types, however, should be created after you model your content appropriately.</p><h5 id="content-type-structure-in-the-cms" tabindex="-1"><a class="header-anchor" href="#content-type-structure-in-the-cms" aria-hidden="true">#</a> Content Type structure in the CMS</h5>',5),d=(0,n.uE)('<p>Here is the structure of a “Blog” Content Type that has a “Title,” “Thumbnail Image,” “Content,” and “SEO Meta Tags” fields. Once this content type is ready, you can create an entry for it.</p><hr><h5 id="adding-fields-to-a-content-type" tabindex="-1"><a class="header-anchor" href="#adding-fields-to-a-content-type" aria-hidden="true">#</a> Adding fields to a content type</h5><p>If you create <code>Content Types</code>, you will continue on to <code>Content Structure</code> page where you can determine what information you wish to collect. This creates a form which they can complete and when saved will display the information on your Frontend site.</p><h5 id="add-a-new-field" tabindex="-1"><a class="header-anchor" href="#add-a-new-field" aria-hidden="true">#</a> Add a new field</h5><p>You can drag the fields from <code>Content Fields</code> to <code>Content Structure</code> Page. Enter the name for the field. You can only use numbers, lower-case letters and the underscore character (_).</p><p>In the field type list, select one of the following types:</p><table><thead><tr><th>Field Name</th><th>Description</th></tr></thead><tbody><tr><td>Address</td><td>Has seven text fields (Address Line 1, Address Line 2, Landmark, City, State, Country, Zip Code)</td></tr><tr><td>Boolean</td><td>Has one of two values (for example: &quot;yes/no&quot; or &quot;true/false&quot;)</td></tr><tr><td>Currency Code</td><td>Has dropdown contain currency code</td></tr><tr><td>Date</td><td>A date</td></tr><tr><td>Date Time</td><td>A date with time</td></tr><tr><td>Editor</td><td>Long text with html tag</td></tr><tr><td>Email</td><td>Input Field of type email</td></tr><tr><td>Facebook Card</td><td>Social meta fields</td></tr><tr><td>Image</td><td>Add image file such as GIF, JPG, PNG</td></tr><tr><td>Image Group</td><td>Add multiple image file such as GIF, JPG, PNG</td></tr><tr><td>Json</td><td>Text in json format</td></tr><tr><td>List</td><td>Add text in list format</td></tr><tr><td>Markdown</td><td>Add text in markdown format</td></tr><tr><td>Media</td><td>Add file</td></tr><tr><td>Number</td><td>A number that allows exact decimal values; often used for price or cost</td></tr><tr><td>Password</td><td>Input Field of type Password</td></tr><tr><td>Phone Number</td><td>Input Field of type Number</td></tr><tr><td>Price</td><td>A number that allows exact decimal values; often used for price or cost</td></tr><tr><td>Relation</td><td>Relation between two field</td></tr><tr><td>Slug</td><td>Slug text (no space)</td></tr><tr><td>SEO Meta tags</td><td>SEO meta field</td></tr><tr><td>Select</td><td>Select Field (Add Option in Field Option)</td></tr><tr><td>Tags</td><td>Tag input field</td></tr><tr><td>Text</td><td>Short text such as a name (limited to 255 characters)</td></tr><tr><td>Textarea</td><td>Long, multi-line alphanumeric text such as a biography</td></tr><tr><td>Time</td><td>A Time field</td></tr><tr><td>Title</td><td>Short text such as a name (limited to 255 characters)</td></tr><tr><td>Twitter Card</td><td>Twitter meta fields</td></tr><tr><td>UUID</td><td>Unique code field</td></tr><tr><td>Visual Editor</td><td>Visual Editor</td></tr></tbody></table><hr><h5 id="terminologies" tabindex="-1"><a class="header-anchor" href="#terminologies" aria-hidden="true">#</a> Terminologies</h5><ul><li><strong>Entry</strong>: After you define a content type, you can add data to your content type by creating an entry.</li><li><strong>Fields</strong>: These are the building blocks/component of your structured content. You can control which data you want to add by configuring fields and its properties in a content type.</li></ul><hr><h5 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h5><ol><li>If you want to create a simple blog page on your site, you will define a “Blog” content type that has “title,” “date,” and “body” fields.</li><li>If you want to create the homepage of your site, you will define a “Pages” content type that has “header,” “footer,” “banner-image,” “title,” and “body” fields.</li></ol><hr><h5 id="customizing-a-content-type" tabindex="-1"><a class="header-anchor" href="#customizing-a-content-type" aria-hidden="true">#</a> Customizing a Content Type</h5><ul><li>CMS allows you to customize a content type to meet your requirements. If you want to create a Content Type for your webpage(s), you can define the content types in seeds.</li><li>You can divide the fields in to different groups.</li></ul><hr><h1 id="contents" tabindex="-1"><a class="header-anchor" href="#contents" aria-hidden="true">#</a> Contents</h1><hr><h5 id="placing-content-of-a-given-content-type-on-a-page" tabindex="-1"><a class="header-anchor" href="#placing-content-of-a-given-content-type-on-a-page" aria-hidden="true">#</a> Placing Content of a Given Content Type on a Page</h5>',21),o=(0,n.uE)('<p>In Contents, There are two types fields:</p><p><strong>Content Fields</strong></p><p>These fields can be managed from &quot;Content Types&quot; sections.</p><p><strong>Template Fields</strong></p><p>Templates can be used to specify which Content Types will be allowed in different areas on a Page. You can add some fields that means that fields are template specific and will be shown when you select that Template</p><p>In Pages, they have a different different structures, and we can&#39;t create different content types for each page. So in that case, we use other groups of field called Templates. Templates can be create through seeds.</p><h5 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h5><p>Contents will be fetch on frontend by two Codes:</p><h5 id="by-content-field" tabindex="-1"><a class="header-anchor" href="#by-content-field" aria-hidden="true">#</a> By Content Field</h5><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span> <span class="token function">get_field</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="by-template-name" tabindex="-1"><a class="header-anchor" href="#by-template-name" aria-hidden="true">#</a> By Template name</h5><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span> <span class="token function">get_field</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;header&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;template&#39;</span><span class="token punctuation">)</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>You have to paste these codes in Web Pages.</p>',13),r={render:function(t,e){return(0,n.wg)(),(0,n.j4)(n.HY,null,[s,(0,n.Wm)("img",{src:t.$withBase("/images/content-types-structure-1.png"),alt:"content-types-structure-1"},null,8,["src"]),(0,n.Wm)("img",{src:t.$withBase("/images/content-types-structure-2.png"),alt:"content-types-structure-2"},null,8,["src"]),d,(0,n.Wm)("img",{src:t.$withBase("/images/content-types-structure-3.png"),alt:"content-types-structure-3"},null,8,["src"]),o],64)}}}}]);
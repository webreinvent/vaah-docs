import{r as p,o,c,a as n,d as t,w as e,F as i,b as s,e as l}from"./app.bb26673a.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},k=n("h1",{id:"notifications",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#notifications","aria-hidden":"true"},"#"),s(" Notifications")],-1),d={class:"table-of-contents"},b=s("Setup Laravel Queues for VaahCMS"),m=s("How to create new notification?"),g=s("Sending without Laravel Queues"),f=s("Sending notifications with Laravel Queues"),h=l(`<h3 id="setup-laravel-queues-for-vaahcms" tabindex="-1"><a class="header-anchor" href="#setup-laravel-queues-for-vaahcms" aria-hidden="true">#</a> Setup Laravel Queues for VaahCMS</h3><p>Follow the following steps:</p><ol><li><p>Set <code>QUEUE_CONNECTION</code> to <code>database</code> in your active <code>env</code> file</p></li><li><p>Visit <code>Setting &gt; General &gt; Site Settings &gt; Laravel Queues</code> in your <code>backend dashboard</code> and enable it.</p></li><li><p>Run or setup cron job for</p><p><code>php artisan queue:work --queue=high,medium,low,default --env=env_filename</code></p><p>If you want to run without cache use following command:</p><p><code>php artisan queue:listen --queue=high,medium,low,default --env=env_filename</code> eg:</p><p><code>php artisan queue:listen --queue=high,medium,low,default --env=develop</code></p></li></ol><p>If you make any changes in code of your <code>Job</code> class, then you must restart the <code>queue:work</code> command.</p><h3 id="how-to-create-new-notification" tabindex="-1"><a class="header-anchor" href="#how-to-create-new-notification" aria-hidden="true">#</a> How to create new notification?</h3><p>There are two way to create notifications:</p><ol><li>Using <code>Backend &gt; Settings &gt; Notifications</code></li><li>Use <code>Seeds</code></li></ol><h4 id="_1-create-notification-from-backend" tabindex="-1"><a class="header-anchor" href="#_1-create-notification-from-backend" aria-hidden="true">#</a> 1. Create notification from Backend</h4><p>Login to <code>Backend Administrator Control Panel</code> (<code>&lt;public-url</code>/backend), then navigate to <code>Settings &gt; Notifications</code>.</p><p>Here you will be able create new <code>notifications</code> which can be used in your code.</p><h4 id="_2-create-notification-via-seeds" tabindex="-1"><a class="header-anchor" href="#_2-create-notification-via-seeds" aria-hidden="true">#</a> 2. Create notification via Seeds</h4><p>You need to create <strong>two</strong> <code>json </code> files in your <code>module</code> or <code>theme</code> at following locations:</p><p><code>&lt;theme-or-module-path&gt;/Database/Seeders/json/notifications.json</code> with following content:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;notification-name&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_mail&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_sms&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_push&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_backend&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_frontend&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>You can choose the various <code>via</code> by which you want to send the <code>notification</code>.</p><p><code>&lt;theme-or-module-path&gt;/Database/Seeders/json/notification_contents.json</code></p><p>In this file <code>slug</code> is coming from the <code>&lt;notification-name&gt;</code> and each <code>{}</code> object represent the a <code>line</code> for the notification.</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;notification-name-slug&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mail&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;subject&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Welcome Email&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;notification-name-slug&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mail&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;from&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#!ENV:MAIL_FROM_NAME!#&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#!ENV:MAIL_FROM_ADDRESS!#&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;notification-name-slug&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mail&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;line&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Hello #!USER:NAME!#&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;notification-name-slug&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;backend&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;content&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Lorem ipsum #!ENV:APP_NAME!#. Thanks!&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;notification-name-slug&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;backend&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;action&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Click&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;action&quot;</span><span class="token operator">:</span><span class="token string">&quot;#!ROUTE:VH.VERIFICATION!#&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>slug</code></td><td>It is the slug of the notification name.</td></tr><tr><td><code>via</code></td><td>Represent that this <code>{}</code> object belong to how the notification will be sent.</td></tr><tr><td><code>sort</code></td><td>Index or sequence of the each object.</td></tr><tr><td><code>key</code></td><td>This represent the type of object.<br><strong>mail</strong> can have following keys : <code>greeting</code>, <code>line</code>, <code>action</code>, <code>from</code>, <code>subject</code><br><strong>backend</strong> can have following keys: <code>content</code>, <code>action</code></td></tr><tr><td><code>value</code></td><td>Value contain the actual content of the <code>key</code>. This can have dynamic values like <code>#!ENV:APP_NAME!#</code> will be replace by the <code>APP_NAME</code></td></tr><tr><td>meta</td><td>Any additional information required. Eg: For key <code>action</code> it requires <code>Label</code> and <code>Link</code> like a hyperlink requires a <code>Label</code> and <code>Link</code></td></tr></tbody></table><p>Now to these notification should be created, whenever the <code>module</code> or <code>theme</code> gets activated. So, now we need to use <code>DatabaseTableSeeder.php</code> , add following methods to seed these notifications:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token operator">...</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">seedNotifications</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">seedNotificationContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">seedNotifications</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$list</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>VaahSeeder</span><span class="token operator">::</span><span class="token function">getListFromJson</span><span class="token punctuation">(</span><span class="token constant">__DIR__</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;/json/notifications.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>VaahSeeder</span><span class="token operator">::</span><span class="token function">storeSeedsWithUuid</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;vh_notifications&#39;</span><span class="token punctuation">,</span> <span class="token variable">$list</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">seedNotificationContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$list</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>VaahSeeder</span><span class="token operator">::</span><span class="token function">getListFromJson</span><span class="token punctuation">(</span><span class="token constant">__DIR__</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;notification_contents.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$list</span> <span class="token keyword">as</span> <span class="token variable">$item</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$notification</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;vh_notifications&#39;</span> <span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">,</span> <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$exist</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;vh_notification_contents&#39;</span> <span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;vh_notification_id&#39;</span><span class="token punctuation">,</span> <span class="token variable">$notification</span><span class="token operator">-&gt;</span><span class="token property">id</span> <span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sort&#39;</span><span class="token punctuation">,</span>  <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;sort&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;via&#39;</span><span class="token punctuation">,</span>  <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;via&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;vh_notification_id&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$notification</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;meta&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;meta&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;meta&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$exist</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;vh_notification_contents&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;vh_notification_contents&#39;</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;vh_notification_id&#39;</span><span class="token punctuation">,</span> <span class="token variable">$notification</span><span class="token operator">-&gt;</span><span class="token property">id</span> <span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sort&#39;</span><span class="token punctuation">,</span>  <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;sort&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;via&#39;</span><span class="token punctuation">,</span>  <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;via&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><h3 id="sending-without-laravel-queues" tabindex="-1"><a class="header-anchor" href="#sending-without-laravel-queues" aria-hidden="true">#</a> Sending without Laravel Queues</h3><p>If you want to send the notification without Laravel queues, you can use following code</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$notification</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&lt;notification-slug&gt;&quot;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$notification</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">send</span><span class="token punctuation">(</span>
    	<span class="token variable">$notification</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$inputs</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="sending-notifications-with-laravel-queues" tabindex="-1"><a class="header-anchor" href="#sending-notifications-with-laravel-queues" aria-hidden="true">#</a> Sending notifications with Laravel Queues</h3><p><strong>Note:</strong> By default <code>VaahCMS</code> does not use Laravel queues/jobs to send the notification. You must enable it, read <code>Setup Notifications with queues</code> section to know more</p><p>To send notification with Laravel Queues, you can use following code:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$notification</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&lt;notification-slug&gt;&quot;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$notification</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">dispatch</span><span class="token punctuation">(</span>
    	<span class="token variable">$notification</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$inputs</span><span class="token punctuation">,</span> <span class="token variable">$priority</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>$notification</code></td><td>is the instance of <code>WebReinvent\\VaahCms\\Entities\\Notification</code></td></tr><tr><td><code>$user</code></td><td>is the instance of <code>WebReinvent\\VaahCms\\Entities\\User</code></td></tr><tr><td><code>$inputs</code></td><td>is the a data array contain values of strings. <br>Eg. If the notification contains <code>#!USER:NAME!#</code> string and then the <code>$input</code> array must be: <code>$inputs = [ &quot;user&quot; =&gt; [ &quot;name&quot; =&gt; &quot;John&quot; ] ]</code> This will replace the string with value provided in the inputs.</td></tr><tr><td><code>$priority</code></td><td>it is the order of execution of the jobs. You can provide following values: <code>high</code> ,<code>medium</code>, <code>low</code>, &amp; <code>default</code></td></tr></tbody></table>`,29);function q(v,y){const a=p("RouterLink");return o(),c(i,null,[k,n("nav",d,[n("ul",null,[n("li",null,[t(a,{to:"#setup-laravel-queues-for-vaahcms"},{default:e(()=>[b]),_:1})]),n("li",null,[t(a,{to:"#how-to-create-new-notification"},{default:e(()=>[m]),_:1})]),n("li",null,[t(a,{to:"#sending-without-laravel-queues"},{default:e(()=>[g]),_:1})]),n("li",null,[t(a,{to:"#sending-notifications-with-laravel-queues"},{default:e(()=>[f]),_:1})])])]),h],64)}var $=u(r,[["render",q]]);export{$ as default};

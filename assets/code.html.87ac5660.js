import{r as e,o,c,a as n,b as t,w as p,F as l,d as s,e as u}from"./app.b0b04a6a.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const r={},k=n("h1",{id:"code",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#code","aria-hidden":"true"},"#"),s(" Code")],-1),d={class:"table-of-contents"},b=s("Introduction"),g=s("Naming conventions"),m=s("Variables"),f=s("Constants"),h=s("Functions"),q=s("Classes"),v=s("Response"),_=u(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>This is a guide to maintain a consistent and industry stand coding practices.</p><h2 id="naming-conventions" tabindex="-1"><a class="header-anchor" href="#naming-conventions" aria-hidden="true">#</a> Naming conventions</h2><h3 id="variables" tabindex="-1"><a class="header-anchor" href="#variables" aria-hidden="true">#</a> Variables</h3><ul><li>Meaningful / Predictable</li><li>Small letters</li><li>2 letter much be joined with <code>underscore</code> (<code>_</code>)</li></ul><p><strong>Wrong Examples:</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$temp_name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$my_name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$n1</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$var</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$n</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$na</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$tempName</span><span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$firstName</span><span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$FirstName</span><span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$getFirstName</span><span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$getfirstname</span><span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$get_first_name</span><span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>Correct Examples:</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$first_name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$last_name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Leo&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$amount</span> <span class="token operator">=</span> <span class="token number">34</span><span class="token punctuation">;</span>
<span class="token variable">$price</span> <span class="token operator">=</span> <span class="token number">643</span><span class="token punctuation">;</span>
<span class="token variable">$total</span> <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="constants" tabindex="-1"><a class="header-anchor" href="#constants" aria-hidden="true">#</a> Constants</h3><ul><li>Meaningful / Predictable</li><li>All capital letters</li><li>2 letter much be joined with <code>underscore</code> (<code>_</code>)</li></ul><p><strong>Wrong Examples:</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;db_HOST&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;localhost&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DBUSER&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;db_user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DB_pASS&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;password$%@#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;db_name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;db_app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>Correct Examples:</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DB_HOST&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;localhost&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DB_USER&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;db_user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DB_PASS&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;password$%@#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DB_NAME&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;db_app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> Functions</h3><ul><li>Meaningful / Predictable</li><li>Camel Cased</li><li>Naming <code>&lt;action&gt;&lt;entity&gt;</code> eg: <code>deleteUser</code></li></ul><p><strong>Wrong Examples:</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">GetUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">Get_Url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">get_Url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">get_Url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">get_url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">geturl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">getu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">namesList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">namesList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>Correct Examples:</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">setName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">storeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h3><ul><li>Meaningful / Predictable</li><li>Studly Caps / PascalCase</li></ul><p><strong>Wrong Examples:</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">cart_total</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">cartTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">cart_Total</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">Carttotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">Cart_total</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>Correct Examples:</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">CartTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">Role</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="response" tabindex="-1"><a class="header-anchor" href="#response" aria-hidden="true">#</a> Response</h3><p>Each <code>function</code> or <code>method</code> or <code>api</code> must return response in following format:</p><h4 id="success" tabindex="-1"><a class="header-anchor" href="#success" aria-hidden="true">#</a> Success</h4><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;success&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;messages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Action was success&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Add more records&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;articles&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Article 1&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Article 2&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="fail" tabindex="-1"><a class="header-anchor" href="#fail" aria-hidden="true">#</a> Fail</h4><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;messages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Something went wrong&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Try again&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;hint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Details to debug the response. Eg: role with slug &#39;admin&#39; does note exist &quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">404</span><span class="token punctuation">,</span>
  <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,33);function y(x,w){const a=e("RouterLink");return o(),c(l,null,[k,n("nav",d,[n("ul",null,[n("li",null,[t(a,{to:"#introduction"},{default:p(()=>[b]),_:1})]),n("li",null,[t(a,{to:"#naming-conventions"},{default:p(()=>[g]),_:1}),n("ul",null,[n("li",null,[t(a,{to:"#variables"},{default:p(()=>[m]),_:1})]),n("li",null,[t(a,{to:"#constants"},{default:p(()=>[f]),_:1})]),n("li",null,[t(a,{to:"#functions"},{default:p(()=>[h]),_:1})]),n("li",null,[t(a,{to:"#classes"},{default:p(()=>[q]),_:1})]),n("li",null,[t(a,{to:"#response"},{default:p(()=>[v]),_:1})])])])])]),_],64)}var N=i(r,[["render",y]]);export{N as default};

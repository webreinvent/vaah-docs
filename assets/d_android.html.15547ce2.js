import{_ as t,r as d,o as i,c as r,a as e,b as n,w as s,d as o,e as c}from"./app.096e9617.js";const l={},h=e("h1",{id:"android",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#android","aria-hidden":"true"},"#"),o(" Android")],-1),f={class:"table-of-contents"},u=c('<h2 id="what-is-this-directory-about" tabindex="-1"><a class="header-anchor" href="#what-is-this-directory-about" aria-hidden="true">#</a> What is this directory about</h2><p>The Android folder contains files and folders required for running the application on an Android operating system. These files and folders are autogenerated during the creation of the flutter project. It’s recommended that these folders and files are left as is.</p><p>We modify this directory/files if we need to in some scenerios such as, adding flavors, adding store keys, etc.</p><p>The android folder’s primary sub-folders are the res folder and AndroidManifest.xml file. The res folder contains non-programmable resources required for the application, like icons, images, and fonts, while the AndroidManifest.xml file contains information needed by the application SDK.</p><p><code>build.gradle</code> in <code>android/app</code> It contains the <code>applicationId</code> that is required when submitting to Google Play Store. Make sure, this value matches the value you specify in Google Play Console before uploading your app. ❗ Be sure to check the path! There is another build.gradle file in the android subfolder.</p><p><code>AndroidManifest.xml</code> in <code>android/app/src/main</code> Here you can specify <code>intents</code> or <code>capabilities</code> that your app is going to use. When using 3rd party packages, their installation instructions usually include detailed information on what needs to be added here. ❗ Again be sure to check the path because there are other manifest files at <code>android/app/src/debug</code> and <code>android/app/src/profile</code>! if needed you edit <code>manifest</code> files from <code>debug</code> and <code>profile</code>.</p>',6);function p(m,_){const a=d("router-link");return i(),r("div",null,[h,e("nav",f,[e("ul",null,[e("li",null,[n(a,{to:"#what-is-this-directory-about"},{default:s(()=>[o("What is this directory about")]),_:1})])])]),u])}const y=t(l,[["render",p],["__file","d_android.html.vue"]]);export{y as default};

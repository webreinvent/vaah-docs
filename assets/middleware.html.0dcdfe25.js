import{_ as e,r as t,o as p,c as o,a as n,d as s,b as c,w as i,e as l}from"./app.62b9cc5c.js";const u={},r=n("h1",{id:"middleware",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#middleware","aria-hidden":"true"},"#"),s(" Middleware")],-1),d=n("nav",{class:"table-of-contents"},[n("ul")],-1),k={class:"custom-container warning"},m=n("p",{class:"custom-container-title"},"Dependencies",-1),v=n("code",null,"routes.dart",-1),g=l(`<p>Route middleware is used to check if route exists or not, and show the page accordingly.</p><p>As of now we have <code>middleware.dart</code> file in routes directory</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flutter/material.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;./routes.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;../views/pages/not_found.dart&#39;</span></span><span class="token punctuation">;</span>

<span class="token class-name">Route</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span><span class="token operator">?</span> <span class="token function">routeMiddleware</span><span class="token punctuation">(</span><span class="token class-name">RouteSettings</span> route<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>routes<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">NotFoundPage</span><span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> routes<span class="token punctuation">[</span>route<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you&#39;ve not cloned the whole repo and are using modules onlt, then to use <code>routeMiddleware</code> in your app, you need to assign <code>routeMiddleware</code> to <code>onGenerateRoute</code>.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">MaterialApp</span><span class="token punctuation">(</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  onGenerateRoute<span class="token punctuation">:</span> routeMiddleware<span class="token punctuation">,</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>if you need central permission handler then you can implement it in middleware. check below example:</p><div class="custom-container danger"><p class="custom-container-title">Note:</p><p>Each project will need to configure permission handling mechanism saperatly because every project might have different End points, Asset Controllers, User types. the following example is a demo for Vaah permission handling.</p></div><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flutter/material.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:example/models/user.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:example/routes/routes.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:example/view/pages/not_found.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:example/view/pages/permission_denied.dart&#39;</span></span><span class="token punctuation">;</span>

<span class="token class-name">Route</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span><span class="token operator">?</span> <span class="token function">routeMiddleware</span><span class="token punctuation">(</span><span class="token class-name">RouteSettings</span> route<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>routes<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">NotFoundPage</span><span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;can-access-</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">route<span class="token punctuation">.</span>name</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">PermissionDeniedPage</span><span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> routes<span class="token punctuation">[</span>route<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The same thing can be implemented in each page individually (in their route methods, check the example below). So permission will be checked everytime when we push the route. Also, please keep above note in mind.</p><p><code>home.dart</code></p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">DetailsPage</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token class-name">String</span> routeName <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;/details&#39;</span></span><span class="token punctuation">;</span>

  <span class="token keyword">static</span> <span class="token class-name">Route</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span> <span class="token function">route</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;can-access-details-page&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token class-name">PermissionDenied</span><span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>
      settings<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">RouteSettings</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;/details&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">const</span> <span class="token class-name">DetailsPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function b(w,h){const a=t("RouterLink");return p(),o("div",null,[r,d,n("div",k,[m,n("p",null,[s("Depends on "),c(a,{to:"/vaahflutter/directory_structure/lib/routes/routes.html"},{default:i(()=>[v]),_:1}),s(" and pages/not_found.dart (You need to create a new page if you are not extending this whole repo).")])]),g])}const f=e(u,[["render",b],["__file","middleware.html.vue"]]);export{f as default};

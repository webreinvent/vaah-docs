import{_ as r,r as c,o as l,c as u,a as n,d as a,b as s,w as e,e as i}from"./app.62b9cc5c.js";const d={},h=n("h1",{id:"performance-monitoring",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#performance-monitoring","aria-hidden":"true"},"#"),a(" Performance Monitoring")],-1),k={class:"custom-container warning"},m=n("p",{class:"custom-container-title"},"Dependencies",-1),f={href:"https://pub.dev/packages/sentry_flutter",target:"_blank",rel:"noopener noreferrer"},v={class:"table-of-contents"},b=i('<h2 id="use-cases" tabindex="-1"><a class="header-anchor" href="#use-cases" aria-hidden="true">#</a> Use cases</h2><ul><li><p>To enable/ disable all kind of tracking, switch <code>enableAutoPerformanceTracking</code></p></li><li><p>Record cold startup time and warm startup time</p></li><li><p>Observe Navigation</p></li><li><p>Capture User Interactions</p></li><li><p>Capture Assets Performance</p></li><li><p>Observe transactions</p></li><li><p>Record Slow and Frozen frames (Yet to implement)</p></li></ul><h3 id="auto-performance-tracking" tabindex="-1"><a class="header-anchor" href="#auto-performance-tracking" aria-hidden="true">#</a> Auto Performance Tracking</h3><ul><li>When <code>enableAutoPerformanceTracking</code> flag is set to <code>false</code> nothing will be monitored.</li></ul><h3 id="startup-time" tabindex="-1"><a class="header-anchor" href="#startup-time" aria-hidden="true">#</a> Startup time</h3>',5),g=n("li",null,[n("p",null,[a("To record cold startup time and warm startup time. Set "),n("code",null,"autoAppStart"),a(" to "),n("code",null,"true"),a(".")])],-1),_=n("li",null,[n("p",null,"Provides insight into how long your application takes to launch.")],-1),y=i('<h3 id="capture-user-interactions" tabindex="-1"><a class="header-anchor" href="#capture-user-interactions" aria-hidden="true">#</a> Capture User Interactions</h3><ul><li><p>To capture User Interactions set <code>enableUserInteractionTracing</code> to <code>true</code>.</p></li><li><p>The UI instrumentation, once enabled, captures transactions and adds breadcrumbs for a set of different user interactions, which include clicks, long clicks, taps, and so on. The SDK composes the transaction name from the key of the Widget that captured the user interaction (for example, login_button). The transaction operation is set to ui.action.click.</p></li><li><p>If the view doesn&#39;t have the key assigned, the transaction and the breadcrumb won&#39;t be captured because it can&#39;t be uniquely identified otherwise.</p></li><li><p>The key value should be unique across the whole application because the transactions are grouped by its name.</p></li></ul><h3 id="capture-assets-performance" tabindex="-1"><a class="header-anchor" href="#capture-assets-performance" aria-hidden="true">#</a> Capture Assets Performance</h3><ul><li><p>To capture Assets Performance set <code>enableAssetsInstrumentation</code> to <code>true</code>.</p></li><li><p>provides insight into how long your app takes to load its assets, such as files.</p></li></ul><h3 id="observe-transactions" tabindex="-1"><a class="header-anchor" href="#observe-transactions" aria-hidden="true">#</a> Observe Transactions</h3>',5),w=n("h3",{id:"record-slow-and-frozen-frames-yet-to-implement",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#record-slow-and-frozen-frames-yet-to-implement","aria-hidden":"true"},"#"),a(" Record Slow and Frozen frames (Yet to implement)")],-1),T=n("h2",{id:"configuration",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#configuration","aria-hidden":"true"},"#"),a(" Configuration")],-1),A={href:"https://youtu.be/LWc67Vja5YA",target:"_blank",rel:"noopener noreferrer"},C=i('<li><p>To disable all kind of tracing set <code>enableAutoPerformanceTracking</code> to <code>false</code>.</p></li><li><p>To record cold startup time and warm startup time set <code>autoAppStart</code> to <code>true</code>, check <a href="#startup-time">this</a> section.</p></li><li><p>To record User Interaction set <code>enableUserInteractionTracing</code> to <code>true</code>, check <a href="#capture-user-interactions">this</a> section.</p></li><li><p>To enable assets instrumentation set <code>enableAssetsInstrumentation</code> to <code>true</code>.</p></li>',4),x=i(`<h2 id="how-to-use" tabindex="-1"><a class="header-anchor" href="#how-to-use" aria-hidden="true">#</a> How to use?</h2><p>Just toogle environment flags to enable/ disable monitoring.</p><h2 id="where-is-the-code-that-handles-this" tabindex="-1"><a class="header-anchor" href="#where-is-the-code-that-handles-this" aria-hidden="true">#</a> Where is the code that handles this?</h2><p>base_controller handles everything. So if developer is building on our app or has similar code of <code>base_controller</code> in their <code>core_controller or main</code> then they are good to go.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">final</span> <span class="token class-name">EnvironmentConfig</span> config <span class="token operator">=</span> <span class="token class-name">EnvironmentConfig</span><span class="token punctuation">.</span><span class="token function">getEnvConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> config<span class="token punctuation">.</span>sentryConfig <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>sentryConfig<span class="token operator">!</span><span class="token punctuation">.</span>dsn<span class="token punctuation">.</span>isNotEmpty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token class-name">SentryFlutter</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> options
        <span class="token punctuation">.</span><span class="token punctuation">.</span>dsn <span class="token operator">=</span> config<span class="token punctuation">.</span>sentryConfig<span class="token operator">!</span><span class="token punctuation">.</span>dsn
        <span class="token punctuation">.</span><span class="token punctuation">.</span>autoAppStart <span class="token operator">=</span> config<span class="token punctuation">.</span>sentryConfig<span class="token operator">!</span><span class="token punctuation">.</span>autoAppStart
        <span class="token punctuation">.</span><span class="token punctuation">.</span>tracesSampleRate <span class="token operator">=</span> config<span class="token punctuation">.</span>sentryConfig<span class="token operator">!</span><span class="token punctuation">.</span>tracesSampleRate
        <span class="token punctuation">.</span><span class="token punctuation">.</span>enableAutoPerformanceTracking <span class="token operator">=</span> config<span class="token punctuation">.</span>sentryConfig<span class="token operator">!</span><span class="token punctuation">.</span>enableAutoPerformanceTracking
        <span class="token punctuation">.</span><span class="token punctuation">.</span>enableUserInteractionTracing <span class="token operator">=</span> config<span class="token punctuation">.</span>sentryConfig<span class="token operator">!</span><span class="token punctuation">.</span>enableUserInteractionTracing
        <span class="token punctuation">.</span><span class="token punctuation">.</span>environment <span class="token operator">=</span> config<span class="token punctuation">.</span>envType<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Widget</span> child <span class="token operator">=</span> app<span class="token punctuation">;</span> <span class="token comment">// Main (Material) App</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>sentryConfig<span class="token operator">!</span><span class="token punctuation">.</span>enableUserInteractionTracing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        child <span class="token operator">=</span> <span class="token class-name">SentryUserInteractionWidget</span><span class="token punctuation">(</span>
            child<span class="token punctuation">:</span> child<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>sentryConfig<span class="token operator">!</span><span class="token punctuation">.</span>enableAssetsInstrumentation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        child <span class="token operator">=</span> <span class="token class-name">DefaultAssetBundle</span><span class="token punctuation">(</span>
            bundle<span class="token punctuation">:</span> <span class="token class-name">SentryAssetBundle</span><span class="token punctuation">(</span>
                enableStructuredDataTracing<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">,</span>
            child<span class="token punctuation">:</span> child<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">runApp</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">runApp</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>As you can see depending on environment variables we apply different performance monitoring mechanisms.</p><p>So to set those environment variables you need to pass something like shown below</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>sentryConfig<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">SentryConfig</span><span class="token punctuation">(</span>
    dsn<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;&#39;</span></span><span class="token punctuation">,</span>
    enableAutoPerformanceTracking<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    autoAppStart<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    enableUserInteractionTracing<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    enableAssetsInstrumentation<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    tracesSampleRate<span class="token punctuation">:</span> <span class="token number">0.6</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function S(I,U){const p=c("ExternalLinkIcon"),t=c("router-link"),o=c("RouterLink");return l(),u("div",null,[h,n("div",k,[m,n("ul",null,[n("li",null,[n("a",f,[a("sentry_flutter"),s(p)])])])]),n("nav",v,[n("ul",null,[n("li",null,[s(t,{to:"#use-cases"},{default:e(()=>[a("Use cases")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#auto-performance-tracking"},{default:e(()=>[a("Auto Performance Tracking")]),_:1})]),n("li",null,[s(t,{to:"#startup-time"},{default:e(()=>[a("Startup time")]),_:1})]),n("li",null,[s(t,{to:"#capture-user-interactions"},{default:e(()=>[a("Capture User Interactions")]),_:1})]),n("li",null,[s(t,{to:"#capture-assets-performance"},{default:e(()=>[a("Capture Assets Performance")]),_:1})]),n("li",null,[s(t,{to:"#observe-transactions"},{default:e(()=>[a("Observe Transactions")]),_:1})]),n("li",null,[s(t,{to:"#record-slow-and-frozen-frames-yet-to-implement"},{default:e(()=>[a("Record Slow and Frozen frames (Yet to implement)")]),_:1})])])]),n("li",null,[s(t,{to:"#configuration"},{default:e(()=>[a("Configuration")]),_:1})]),n("li",null,[s(t,{to:"#how-to-use"},{default:e(()=>[a("How to use?")]),_:1})]),n("li",null,[s(t,{to:"#where-is-the-code-that-handles-this"},{default:e(()=>[a("Where is the code that handles this?")]),_:1})])])]),b,n("ul",null,[g,_,n("li",null,[n("p",null,[a("Startup time is attached to first transaction that happens in app, so if app has no transaction nothing will be recorded. Learn about transactions "),s(o,{to:"/vaahflutter/directory_structure/vaahextendflutter/services/logging_library/logging_library.html#log-transactions"},{default:e(()=>[a("here")]),_:1}),a(".")])])]),y,n("ul",null,[n("li",null,[a("Learn more about transactions "),s(o,{to:"/vaahflutter/directory_structure/vaahextendflutter/services/logging_library/logging_library.html#log-transactions"},{default:e(()=>[a("here")]),_:1}),a(".")])]),w,T,n("ul",null,[n("li",null,[n("p",null,[a("To configure sentry for your project you just have to pass sentryConfig in "),s(o,{to:"/vaahflutter/directory_structure/vaahextendflutter/env.html"},{default:e(()=>[a("environment config")]),_:1}),a(".")])]),n("li",null,[n("p",null,[a("Check "),n("a",A,[a("this"),s(p)]),a(" video for, how to get config values.")])]),C]),x,n("p",null,[a("Learn more about those environment variables "),s(o,{to:"/vaahflutter/directory_structure/vaahextendflutter/env.html"},{default:e(()=>[a("here")]),_:1}),a(".")])])}const R=r(d,[["render",S],["__file","performance_monitoring.html.vue"]]);export{R as default};

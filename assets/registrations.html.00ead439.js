import{o as e,c as p,a as n,F as o,e as t,b as s}from"./app.0127057a.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const l={},r=t(`<h1 id="registrations" tabindex="-1"><a class="header-anchor" href="#registrations" aria-hidden="true">#</a> Registrations</h1><p>Registration and authentication are mandatory in any application when you have little concern about privacy.</p><p>In VaahCms, the purpose of <code>Registration</code> is to prevent <code>duplicate</code> entries in <code>Users</code> table.</p><hr><h5 id="create-registration" tabindex="-1"><a class="header-anchor" href="#create-registration" aria-hidden="true">#</a> Create Registration</h5><p>Visit following url you will see the Registration section:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;project-url&gt;/backend#/vaah/registrations/
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,7),i=["src"],u=n("p",null,[s("Now you have to create a "),n("code",null,"Registration Entry"),s(" by click on "),n("code",null,"Create"),s(" button. You will see a create page with following field.")],-1),k=["src"],b=n("p",null,[s("Fill all Fields. Click on "),n("code",null,"Save"),s(" button.")],-1),d=["src"],m=t(`<p>Now you can see the detail in <code>View</code> Page.</p><hr><h5 id="function-to-call-to-create-registration" tabindex="-1"><a class="header-anchor" href="#function-to-call-to-create-registration" aria-hidden="true">#</a> Function to call to Create Registration</h5><p>You can create a <code>Registration</code> by call the <code>postCreate()</code>method of <code>RegistrationController</code> at <code>WebReinvent\\VaahCms\\Http\\Controllers</code>.</p><p>RegistrationController.php</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Routing<span class="token punctuation">\\</span>Controller</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Registration</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">RegistrationsController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>
<span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token variable">$theme</span><span class="token punctuation">;</span>

    <span class="token comment">//----------------------------------------------------------</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">theme</span> <span class="token operator">=</span> <span class="token function">vh_get_backend_theme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//----------------------------------------------------------</span>
    <span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span>
    <span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span>
    <span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span>
    <span class="token comment">//----------------------------------------------------------</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">postCreate</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Auth</span><span class="token operator">::</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;can-create-registrations&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;failed&#39;</span><span class="token punctuation">;</span>
            <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;errors&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">trans</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;vaahcms::messages.permission_denied&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token class-name static-context">Registration</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;success&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$list</span> <span class="token operator">=</span> <span class="token class-name static-context">Registration</span><span class="token operator">::</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;list&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$list</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;list&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//----------------------------------------------------------</span>

<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><hr>`,7);function g(a,h){return e(),p(o,null,[r,n("img",{src:a.$withBase("/images/registration-1.png"),alt:"registration"},null,8,i),u,n("img",{src:a.$withBase("/images/registration-2.png"),alt:"registration"},null,8,k),b,n("img",{src:a.$withBase("/images/registration-3.png"),alt:"registration"},null,8,d),m],64)}var y=c(l,[["render",g]]);export{y as default};

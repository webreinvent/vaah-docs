import{r as o,o as c,c as l,a as s,d as p,w as t,F as r,e,b as n}from"./app.bb26673a.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},k=e(`<h1 id="access-control-list-acl" tabindex="-1"><a class="header-anchor" href="#access-control-list-acl" aria-hidden="true">#</a> Access Control List (ACL)</h1><p>An access control list (ACL) contains rules that grant or deny access to certain digital environments. A list of permissions associated with an object. The list specifies who or what is allowed to access the object and what operations are allowed to be performed on the object.</p><hr><h5 id="acl-in-controller" tabindex="-1"><a class="header-anchor" href="#acl-in-controller" aria-hidden="true">#</a> ACL in Controller</h5><p>VaahCms provide a method in Controller to check the User&#39;s access. You can call this method before execute an action.</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getList</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Auth</span><span class="token operator">::</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;has-access-of-users-section&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;failed&#39;</span><span class="token punctuation">;</span>
            <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;errors&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">trans</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;vaahcms::messages.permission_denied&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><hr><h5 id="acl-in-view" tabindex="-1"><a class="header-anchor" href="#acl-in-view" aria-hidden="true">#</a> ACL in View</h5><p>You can call the Controller method inside view file</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>@<span class="token function">section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span>


        @<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Auth</span><span class="token operator">::</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;has-access-of-users-section&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

            <span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span>
            <span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span>
            <span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span>

        @<span class="token keyword">endif</span>
                
    
@endsection
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><hr><h5 id="acl-in-vue" tabindex="-1"><a class="header-anchor" href="#acl-in-vue" aria-hidden="true">#</a> ACL in Vue</h5><p>In Vue, you can not call the Controller method directly. So for ACL, you will need to get the list of Permissions from Controller.</p><p>There is a function in <code>root.js</code> at <code>VaahCms/..../Vue/store/modules/</code> of name <code>getPermissions</code>. If you don&#39;t found any function like this, then you can create in <code>root.js</code>.</p><p>root.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ToastProgrammatic <span class="token keyword">as</span> Toast <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;buefy&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>VaahHelper <span class="token keyword">as</span> Vaah<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../../vaahvue/helpers/VaahHelper&quot;</span><span class="token punctuation">;</span>

<span class="token comment">//---------Variables</span>
<span class="token keyword">let</span> base_url <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;base&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> current_url <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;current_url&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> debug <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;debug&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//---------/Variables</span>

<span class="token keyword">let</span> assets_path <span class="token operator">=</span> base_url<span class="token operator">+</span><span class="token string">&quot;/vaahcms/backend/themes/vaahone/assets&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> assets_image_path <span class="token operator">=</span> assets_path<span class="token operator">+</span><span class="token string">&quot;/images&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> json_url <span class="token operator">=</span> base_url<span class="token operator">+</span><span class="token string">&quot;/backend/json&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> ajax_url <span class="token operator">=</span> base_url<span class="token operator">+</span><span class="token string">&quot;/backend&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">namespaced</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">//=========================================================================</span>
    <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">debug</span><span class="token operator">:</span> debug<span class="token punctuation">,</span>
        <span class="token literal-property property">base_url</span><span class="token operator">:</span> base_url<span class="token punctuation">,</span>
        <span class="token literal-property property">assets_path</span><span class="token operator">:</span> assets_path<span class="token punctuation">,</span>
        <span class="token literal-property property">assets_image_path</span><span class="token operator">:</span> assets_image_path<span class="token punctuation">,</span>
        <span class="token literal-property property">current_url</span><span class="token operator">:</span> current_url<span class="token punctuation">,</span>
        <span class="token literal-property property">ajax_url</span><span class="token operator">:</span> ajax_url<span class="token punctuation">,</span>
        <span class="token literal-property property">json_url</span><span class="token operator">:</span> json_url<span class="token punctuation">,</span>
        <span class="token literal-property property">permissions</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token literal-property property">permissions_reload</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span>
        <span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span>
        <span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">//=========================================================================</span>
    <span class="token literal-property property">mutations</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token function-variable function">updateState</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            state<span class="token punctuation">[</span>payload<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> payload<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">//-----------------------------------------------------------------</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">//=========================================================================</span>
    <span class="token literal-property property">actions</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token comment">//-----------------------------------------------------------------</span>
        <span class="token keyword">async</span> <span class="token function">getAssets</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> state<span class="token punctuation">,</span> commit<span class="token punctuation">,</span> dispatch<span class="token punctuation">,</span> getters <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span>
            <span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span>
            <span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span>

        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">//-----------------------------------------------------------------</span>
        <span class="token function-variable function">reloadAssets</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> state<span class="token punctuation">,</span> commit<span class="token punctuation">,</span> dispatch<span class="token punctuation">,</span> getters <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span>
            <span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span>
            <span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span>

        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">//-----------------------------------------------------------------</span>
        <span class="token keyword">async</span> <span class="token function">getPermissions</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> state<span class="token punctuation">,</span> commit<span class="token punctuation">,</span> dispatch<span class="token punctuation">,</span> getters <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>state<span class="token punctuation">.</span>permissions <span class="token operator">||</span> state<span class="token punctuation">.</span>permissions_reload <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">let</span> url <span class="token operator">=</span> state<span class="token punctuation">.</span>ajax_url<span class="token operator">+</span><span class="token string">&#39;/json/permissions&#39;</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> Vaah<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">let</span> payload <span class="token operator">=</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;permissions&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">value</span><span class="token operator">:</span> data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>list
                <span class="token punctuation">}</span><span class="token punctuation">;</span>

                <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;updateState&#39;</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>

                payload <span class="token operator">=</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;permissions_reload&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token boolean">false</span>
                <span class="token punctuation">}</span><span class="token punctuation">;</span>

                <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;updateState&#39;</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">//-----------------------------------------------------------------</span>
        <span class="token function-variable function">reloadPermissions</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> state<span class="token punctuation">,</span> commit<span class="token punctuation">,</span> dispatch<span class="token punctuation">,</span> getters <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> payload <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;permissions_reload&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;updateState&#39;</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;getPermissions&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">//-----------------------------------------------------------------</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">//=========================================================================</span>
    <span class="token literal-property property">getters</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token function">state</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> state<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">permissions</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> state<span class="token punctuation">.</span>permissions<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span>
        <span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span><span class="token string">&#39;&#39;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br></div></div><p>Now, you can call this function in <code>Vue Route Middleware</code> or in <code>Vue Component</code></p><h5 id="vue-route-middleware" tabindex="-1"><a class="header-anchor" href="#vue-route-middleware" aria-hidden="true">#</a> Vue Route Middleware</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>GetBackendAssets<span class="token punctuation">.</span>js<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> file located at </span><span class="token template-punctuation string">\`</span></span>VaahCms<span class="token operator">/</span><span class="token operator">...</span><span class="token punctuation">.</span><span class="token operator">/</span>Vue<span class="token operator">/</span>routes<span class="token operator">/</span>middleware<span class="token operator">/</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>GetBackendAssets.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>VaahHelper <span class="token keyword">as</span> Vaah<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../../vaahvue/helpers/VaahHelper&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">GetBackendAssets</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next<span class="token punctuation">,</span> store <span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token comment">//--------------Redirect to Sign in</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>store<span class="token punctuation">.</span>getters<span class="token punctuation">[</span><span class="token string">&#39;root/state&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>is_logged_in<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;sign.in&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//--------------/Redirect to Sign in</span>

    <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;root/getAssets&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;root/getPermissions&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>routes.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> routes<span class="token punctuation">;</span>
<span class="token keyword">let</span> routes_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>


routes<span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>



<span class="token comment">//----------Middleware</span>

<span class="token keyword">import</span> GetBackendAssets <span class="token keyword">from</span> <span class="token string">&#39;./middleware/GetBackendAssets&#39;</span>
<span class="token comment">//----------Middleware</span>

<span class="token keyword">import</span> LayoutBackend <span class="token keyword">from</span> <span class="token string">&quot;./../layouts/Backend.vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> routes_backend <span class="token operator">=</span>     <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/vaah&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> LayoutBackend<span class="token punctuation">,</span>
    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">middleware</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            GetBackendAssets
            <span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

routes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>routes_backend<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">export</span> <span class="token keyword">default</span> routes<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h5 id="vue-component" tabindex="-1"><a class="header-anchor" href="#vue-component" aria-hidden="true">#</a> Vue Component</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>        <span class="token comment">//---------------------------------------------------------------------</span>
        <span class="token keyword">async</span> <span class="token function">getPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span>namespace<span class="token operator">+</span><span class="token string">&#39;/getPermissions&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">//---------------------------------------------------------------------</span>
        
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>In Controller, you have to write this code to get permissions list.</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getPermissions</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>


        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Auth</span><span class="token operator">::</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;failed&#39;</span><span class="token punctuation">;</span>
            <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;errors&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;success&#39;</span><span class="token punctuation">;</span>
        <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;list&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Auth</span><span class="token operator">::</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">permissions</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token comment">//----------------------------------------------------------</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,27),b=n("In Vue, there is a "),m=n("VaahHelper"),d=n(" function that is used to check "),g=s("code",null,"User",-1),y=n(" access."),h=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>        <span class="token comment">//---------------------------------------------------------------------</span>
        <span class="token function-variable function">hasPermission</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">slug</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$vaah<span class="token punctuation">.</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>permissions<span class="token punctuation">,</span> slug<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">//---------------------------------------------------------------------</span>
        
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>To know about <code>VaahHelper</code>.</p>`,2),f=n("Read Documentation");function v(w,_){const a=o("RouterLink");return c(),l(r,null,[k,s("p",null,[b,p(a,{to:"/vaahcms/vaahvue/helpers.html"},{default:t(()=>[m]),_:1}),d,g,y]),h,s("p",null,[p(a,{to:"/vaahcms/vaahvue/helpers.html"},{default:t(()=>[f]),_:1})])],64)}var x=u(i,[["render",v]]);export{x as default};

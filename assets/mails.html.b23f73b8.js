import{r as o,o as l,c as p,a,d as n,w as t,F as i,b as s,e as c}from"./app.bb26673a.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},d=a("h1",{id:"mails",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#mails","aria-hidden":"true"},"#"),s(" Mails")],-1),m={class:"table-of-contents"},h=s("Setup Laravel Queues for VaahCMS"),g=s("Send mails with Laravel Queues"),v=s("Send mails without Laravel Queues"),b=s("Customizing The Templates"),k=c(`<h3 id="setup-laravel-queues-for-vaahcms" tabindex="-1"><a class="header-anchor" href="#setup-laravel-queues-for-vaahcms" aria-hidden="true">#</a> Setup Laravel Queues for VaahCMS</h3><p>Follow the following steps:</p><ol><li><p>Set <code>QUEUE_CONNECTION</code> to <code>database</code> in your active <code>env</code> file</p></li><li><p>Visit <code>Setting &gt; General &gt; Site Settings &gt; Laravel Queues</code> in your <code>backend dashboard</code> and enable it.</p></li><li><p>Run or setup cron job for</p><p><code>php artisan queue:work --queue=high,medium,low,default --env=env_filename</code></p><p>If you want to run without cache use following command:</p><p><code>php artisan queue:listen --queue=high,medium,low,default --env=env_filename</code> eg:</p><p><code>php artisan queue:listen --queue=high,medium,low,default --env=develop</code></p></li></ol><p>If you make any changes in code of your <code>Job</code> class, then you must restart the <code>queue:work</code> command.</p><h3 id="send-mails-with-laravel-queues" tabindex="-1"><a class="header-anchor" href="#send-mails-with-laravel-queues" aria-hidden="true">#</a> Send mails with Laravel Queues</h3><p>By default <code>VaahCMS</code> does not use laravel queues/jobs to schedule the mail. Hence, mails will be send immediately.</p><p><strong>To send mail you can use following code:</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">VaahMail</span><span class="token operator">::</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token variable">$mail</span><span class="token punctuation">,</span> <span class="token variable">$to</span><span class="token punctuation">,</span> <span class="token variable">$priority</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><p><code>$mail</code> should an instance of Laravel Mail class.</p></li><li><p><code>$to</code> is the array of recipient:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$inputs</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;email@example.com&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;email2@example.com&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;name 2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p><code>$priority</code> it is the order of execution of the jobs. You can provide following values high medium low default</p></li></ul><hr><p><strong>To send mail to a user you can use following code:</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">VaahMail</span><span class="token operator">::</span><span class="token function">dispatchToUser</span><span class="token punctuation">(</span><span class="token variable">$mail</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$priority</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><code>$user</code> is an instance of <code>WebReinvent\\VaahCms\\Entities\\User</code></li></ul><hr><p><strong>To send a generic mail to a user you can use following code:</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">VaahMail</span><span class="token operator">::</span><span class="token function">dispatchGenericMail</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$priority</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><code>$content</code> is the html code you want to send to the user</li><li><code>$user</code> is an instance of <code>WebReinvent\\VaahCms\\Entities\\User</code></li></ul><h3 id="send-mails-without-laravel-queues" tabindex="-1"><a class="header-anchor" href="#send-mails-without-laravel-queues" aria-hidden="true">#</a> Send mails without Laravel Queues</h3><p>If you want to send the mails without Laravel queues, you can use following code</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">VaahMail</span><span class="token operator">::</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token variable">$mail</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$inputs</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="customizing-the-templates" tabindex="-1"><a class="header-anchor" href="#customizing-the-templates" aria-hidden="true">#</a> Customizing The Templates</h3><p>To customize the default Laravel mail &amp; notification template you must publish the asset, using following commands:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>php artisan vendor<span class="token punctuation">:</span>publish <span class="token operator">--</span>tag<span class="token operator">=</span>laravel<span class="token operator">-</span>mail
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>php artisan vendor<span class="token punctuation">:</span>publish <span class="token operator">--</span>tag<span class="token operator">=</span>laravel<span class="token operator">-</span>notifications
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>This will publish files under <code>resources/views/vendor/mail</code> directory. To affect the VaahCMS <code>Mails</code>, you can edit following file:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>resources/views/vendor/mail/html/header.blade.php
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>resources/views/vendor/mail/html/footer.blade.php
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>resources/views/vendor/mail/html/themes/default.css
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><hr>`,29);function f(w,x){const e=o("RouterLink");return l(),p(i,null,[d,a("nav",m,[a("ul",null,[a("li",null,[n(e,{to:"#setup-laravel-queues-for-vaahcms"},{default:t(()=>[h]),_:1})]),a("li",null,[n(e,{to:"#send-mails-with-laravel-queues"},{default:t(()=>[g]),_:1})]),a("li",null,[n(e,{to:"#send-mails-without-laravel-queues"},{default:t(()=>[v]),_:1})]),a("li",null,[n(e,{to:"#customizing-the-templates"},{default:t(()=>[b]),_:1})])])]),k],64)}var y=u(r,[["render",f]]);export{y as default};

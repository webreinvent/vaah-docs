import{_ as o,r as p,o as i,c,a as n,b as e,w as t,d as s,e as l}from"./app.62b9cc5c.js";const u={},r=n("h1",{id:"code",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#code","aria-hidden":"true"},"#"),s(" Code")],-1),d={class:"table-of-contents"},k=l(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>This is a guide to maintain a consistent and industry stand coding practices.</p><h2 id="naming-conventions" tabindex="-1"><a class="header-anchor" href="#naming-conventions" aria-hidden="true">#</a> Naming conventions</h2><h3 id="variables" tabindex="-1"><a class="header-anchor" href="#variables" aria-hidden="true">#</a> Variables</h3><ul><li>Variable names must be short, descriptive, predictable and <code>snake_cased</code></li></ul><p><strong>Wrong Examples:</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$temp_name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$my_name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$n1</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$var</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$n</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$na</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$tempName</span><span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$firstName</span><span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$FirstName</span><span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$getFirstName</span><span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$getfirstname</span><span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$get_first_name</span><span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Correct Examples:</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$first_name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$last_name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Leo&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$amount</span> <span class="token operator">=</span> <span class="token number">34</span><span class="token punctuation">;</span>
<span class="token variable">$price</span> <span class="token operator">=</span> <span class="token number">643</span><span class="token punctuation">;</span>
<span class="token variable">$total</span> <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="constants" tabindex="-1"><a class="header-anchor" href="#constants" aria-hidden="true">#</a> Constants</h3><ul><li>Constants must be <code>short</code>, <code>meaningful</code>, <code>descriptive</code> and in <code>SCREAMING_SNAKE_CASE</code><ul><li>SCREAMING_SNAKE_CASE: <ul><li><code>snake_case</code> but with all capital letters</li><li>2 words are joined with <code>underscore</code> (<code>_</code>)</li></ul></li></ul></li></ul><p><strong>Wrong Examples:</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;db_HOST&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;localhost&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DBUSER&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;db_user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DB_pASS&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;password$%@#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;db_name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;db_app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Correct Examples:</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DB_HOST&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;localhost&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DB_USER&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;db_user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DB_PASS&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;password$%@#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DB_NAME&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;db_app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> Functions</h3><ul><li>Function/Method names must be <code>short</code>, <code>meaningful</code>, <code>predictable</code> and <code>camelCased</code></li></ul><p><strong>Wrong Examples:</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">GetUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">Get_Url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">get_Url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">get_Url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">get_url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">geturl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">getu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">namesList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">namesList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Correct Examples:</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">setName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">storeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h3><ul><li>Class manes must be <code>meaningful</code>, <code>singlular</code> and <code>PascalCased</code>.</li></ul><p><strong>Wrong Examples:</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">cart_total</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">cartTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">cart_Total</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">Carttotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">Cart_total</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Correct Examples:</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">CartTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">Role</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="controllers" tabindex="-1"><a class="header-anchor" href="#controllers" aria-hidden="true">#</a> Controllers</h4><ul><li>Controller names must be <code>meaningful</code>, <code>singular</code> and have <code>Controller</code> suffix.</li><li>Controllers for page must be named after the page</li><li>Controllers for resources must be named after the page</li></ul><p><strong>Bad Examples</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>ArticlePageController<span class="token operator">.</span>php
ArticlesController<span class="token operator">.</span>php
article<span class="token operator">.</span>php
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Correct Example</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>ArticleController<span class="token operator">.</span>php
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="model" tabindex="-1"><a class="header-anchor" href="#model" aria-hidden="true">#</a> Model</h4><ul><li>A model name should be &#39;singular<code>,</code>PascalCase/CapitalCase\` and should describe the table it is representing.</li></ul><p><strong>Bad Examples</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>customer_roles
customerRoles
CustomerRoles
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Correct Example</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>CustomerRole
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="table" tabindex="-1"><a class="header-anchor" href="#table" aria-hidden="true">#</a> Table</h4><ul><li>Table name must be <code>snake_case</code> and <code>plural</code>.</li></ul><p><strong>Bad Examples</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>article_comment<span class="token punctuation">,</span> 
articleComments
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Correct Example</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>article_comments
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="table-column-names" tabindex="-1"><a class="header-anchor" href="#table-column-names" aria-hidden="true">#</a> Table Column names</h4><ul><li>Table Column names must be <code>snake_case</code> without model name</li></ul><p><strong>Bad Examples</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>MetaTitle 
article_meta_title
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Correct Examples</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>meta_title
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="http-request-json-response" tabindex="-1"><a class="header-anchor" href="#http-request-json-response" aria-hidden="true">#</a> HTTP Request - JSON Response</h2><p>Each <code>function</code> or <code>method</code> or <code>api</code> must return response in following format:</p><h4 id="success-response" tabindex="-1"><a class="header-anchor" href="#success-response" aria-hidden="true">#</a> Success Response</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;success&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;messages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Action was success&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Add more records&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;articles&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Article 1&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Article 2&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="fail-response" tabindex="-1"><a class="header-anchor" href="#fail-response" aria-hidden="true">#</a> Fail Response</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;success&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;errors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Something went wrong&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Try again&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="optional-response-variables" tabindex="-1"><a class="header-anchor" href="#optional-response-variables" aria-hidden="true">#</a> Optional Response Variables</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;hint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Details to debug the response. Eg: role with slug &#39;admin&#39; does note exist &quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">404</span><span class="token punctuation">,</span>
  <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,59);function v(m,g){const a=p("router-link");return i(),c("div",null,[r,n("nav",d,[n("ul",null,[n("li",null,[e(a,{to:"#introduction"},{default:t(()=>[s("Introduction")]),_:1})]),n("li",null,[e(a,{to:"#naming-conventions"},{default:t(()=>[s("Naming conventions")]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#variables"},{default:t(()=>[s("Variables")]),_:1})]),n("li",null,[e(a,{to:"#constants"},{default:t(()=>[s("Constants")]),_:1})]),n("li",null,[e(a,{to:"#functions"},{default:t(()=>[s("Functions")]),_:1})]),n("li",null,[e(a,{to:"#classes"},{default:t(()=>[s("Classes")]),_:1})])])]),n("li",null,[e(a,{to:"#http-request-json-response"},{default:t(()=>[s("HTTP Request - JSON Response")]),_:1})])])]),k])}const h=o(u,[["render",v],["__file","code.html.vue"]]);export{h as default};

import{_ as l,r as i,o as u,c as r,a as n,b as p,w as c,d as s,e as a}from"./app.62b9cc5c.js";const k={},d=n("h1",{id:"input-sliders",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#input-sliders","aria-hidden":"true"},"#"),s(" Input Sliders")],-1),v={class:"table-of-contents"},m=a(`<h2 id="simple-slider" tabindex="-1"><a class="header-anchor" href="#simple-slider" aria-hidden="true">#</a> Simple slider</h2><p>Pass <code>initialValue</code> for initial value, it cannot be less than minimum limit and cannot be greater than maximum limit.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">const</span> <span class="token class-name">InputSlider</span><span class="token punctuation">(</span>
    initialValue<span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Set <code>min</code> and <code>max</code> for starting and ending limit, default value of min is 0 and maximum is 1.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">const</span> <span class="token class-name">InputSlider</span><span class="token punctuation">(</span>
    initialValue<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
    min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    max<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pass <code>label</code> parameter for setting label. Note: label won&#39;t work if steps aren&#39;t there, also if you&#39;re not passing custom label and steps are there then it will show current value of slider.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">const</span> <span class="token class-name">InputSlider</span><span class="token punctuation">(</span>
    initialValue<span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">,</span>
    step<span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span>
    label<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;your label&#39;</span></span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),b=n("code",null,"precision",-1),g={href:"https://en.wikipedia.org/wiki/Floating-point_arithmetic",target:"_blank",rel:"noopener noreferrer"},h={href:"https://en.wikipedia.org/wiki/IEEE_754",target:"_blank",rel:"noopener noreferrer"},f={href:"https://stackoverflow.com/questions/588004/is-floating-point-math-broken",target:"_blank",rel:"noopener noreferrer"},w=a(`<div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">const</span> <span class="token class-name">InputSlider</span><span class="token punctuation">(</span>
    initialValue<span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">,</span>
    step<span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span>
    precision<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pass <code>activeColor</code>, <code>inactiveColor</code>, and <code>thumbColor</code> for changing appereance of slider.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">const</span> <span class="token class-name">InputSlider</span><span class="token punctuation">(</span>
    initialValue<span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">,</span>
    inactiveColor<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>orange<span class="token punctuation">.</span>shade200<span class="token punctuation">,</span>
    activeColor<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>orange<span class="token punctuation">,</span>
    thumbColor<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>orange<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pass <code>onChanged</code>, <code>onChangeStart</code>, and <code>onChangeEnd</code> functions to perform actions for respective changes.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">InputSlider</span><span class="token punctuation">(</span>
    initialValue<span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span>
    onChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> disableCloudLogging<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),y=["src"],S=a(`<p>Pass <code>forceInputBox</code> as true to make slider use input field also.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">const</span> <span class="token class-name">InputSlider</span><span class="token punctuation">(</span>
    min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    max<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    initialValue<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
    forceInputBox<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),x=["src"],_=a(`<p>Pass <code>step</code> argument to make slider increase / decrease value in steps only.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">const</span> <span class="token class-name">InputSlider</span><span class="token punctuation">(</span>
    min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    max<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    initialValue<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    step<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),C=["src"],T=a(`<p>You can pass <code>step</code> arg in decimal points for having decimal steps.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">InputSlider</span><span class="token punctuation">(</span>
    min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    max<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    initialValue<span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">,</span>
    step<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),I=["src"],R=a(`<p>Pass <code>forceVertical</code> as true to make slider vertical.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">const</span> <span class="token class-name">InputSlider</span><span class="token punctuation">(</span>
    initialValue<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    forceVertical<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),V=["src"],B=a(`<h2 id="range-slider" tabindex="-1"><a class="header-anchor" href="#range-slider" aria-hidden="true">#</a> Range slider</h2><div class="custom-container tip"><p class="custom-container-title">Common Properties</p><p>For Range Slider, <code>min</code> and <code>max</code>, <code>step</code>, <code>precision</code>, <code>activeColor</code>, <code>inactiveColor</code>, <code>thumbColor</code> properties are same like <a href="#simple-slider">Simple slider</a>.</p></div><p>Pass <code>initialValues</code> argument to pass initial values, and <code>labels</code> argument to show custom label.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">const</span> <span class="token class-name">InputRangeSlider</span><span class="token punctuation">(</span>
    min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    max<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    step<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    initialValues<span class="token punctuation">:</span> <span class="token class-name">RangeValues</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    labels<span class="token punctuation">:</span> <span class="token class-name">RangeLabels</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;your starting label&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;your ending label&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>onChanged</code>, <code>onChangeStart</code>, <code>onChangeEnd</code> works same like <a href="#simple-slider">Simple slider</a>, we just get <code>RangeValues</code> back instead of <code>double</code>.</p>`,5),E=["src"],A=a(`<h2 id="source-code" tabindex="-1"><a class="header-anchor" href="#source-code" aria-hidden="true">#</a> Source Code</h2><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flutter/material.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flutter/services.dart&#39;</span></span> <span class="token operator">as</span> services<span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:team/vaahextendflutter/app_theme.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:team/vaahextendflutter/helpers/constants.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:team/vaahextendflutter/widgets/atoms/input_text.dart&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">InputSlider</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>
  <span class="token keyword">final</span> double initialValue<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Function</span><span class="token punctuation">(</span>double<span class="token punctuation">)</span><span class="token operator">?</span> onChanged<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Function</span><span class="token punctuation">(</span>double<span class="token punctuation">)</span><span class="token operator">?</span> onChangeStart<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Function</span><span class="token punctuation">(</span>double<span class="token punctuation">)</span><span class="token operator">?</span> onChangeEnd<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double min<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double max<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double<span class="token operator">?</span> step<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">String</span><span class="token operator">?</span> label<span class="token punctuation">;</span>
  <span class="token keyword">final</span> int<span class="token operator">?</span> precision<span class="token punctuation">;</span>
  <span class="token keyword">final</span> bool forceVertical<span class="token punctuation">;</span>
  <span class="token keyword">final</span> bool forceInputBox<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Color</span><span class="token operator">?</span> activeColor<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Color</span><span class="token operator">?</span> inactiveColor<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Color</span><span class="token operator">?</span> thumbColor<span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token class-name">InputSlider</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>initialValue<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onChanged<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onChangeStart<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onChangeEnd<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>min <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>max <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>step<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>label<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>precision<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>forceVertical <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>forceInputBox <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>activeColor<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>inactiveColor<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>thumbColor<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token metadata function">@override</span>
  <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InputSlider</span><span class="token punctuation">&gt;</span></span> <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_InputSliderState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> _InputSliderState <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InputSlider</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token class-name">String</span><span class="token operator">?</span> err<span class="token punctuation">;</span>
  late double _value<span class="token punctuation">;</span>
  <span class="token class-name">String</span><span class="token operator">?</span> label<span class="token punctuation">;</span>
  int<span class="token operator">?</span> divisions<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">TextEditingController</span> controller <span class="token operator">=</span> <span class="token class-name">TextEditingController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token metadata function">@override</span>
  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _value <span class="token operator">=</span> widget<span class="token punctuation">.</span>initialValue<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_value <span class="token operator">&lt;</span> widget<span class="token punctuation">.</span>min<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      err <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;Initial value is less than minimum value.&#39;</span></span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_value <span class="token operator">&gt;</span> widget<span class="token punctuation">.</span>max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      err <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;Initial value is greater than maximum value.&#39;</span></span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    controller<span class="token punctuation">.</span>text <span class="token operator">=</span> _value<span class="token punctuation">.</span><span class="token function">toStringAsFixed</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span>precision <span class="token operator">?</span><span class="token operator">?</span> <span class="token class-name">AppTheme</span><span class="token punctuation">.</span>precision<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>step <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      divisions <span class="token operator">=</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>max <span class="token operator">-</span> widget<span class="token punctuation">.</span>min<span class="token punctuation">)</span> <span class="token operator">~/</span> widget<span class="token punctuation">.</span>step<span class="token operator">!</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token metadata function">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err <span class="token operator">!=</span> <span class="token keyword">null</span>
        <span class="token operator">?</span> <span class="token class-name">Padding</span><span class="token punctuation">(</span>
            padding<span class="token punctuation">:</span> bottomPadding8<span class="token punctuation">,</span>
            child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>err<span class="token operator">!</span><span class="token punctuation">,</span> style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">AppTheme</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;danger&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">)</span>
        <span class="token punctuation">:</span> <span class="token class-name">Builder</span><span class="token punctuation">(</span>
            builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">final</span> <span class="token class-name">SliderTheme</span> slider <span class="token operator">=</span> <span class="token class-name">SliderTheme</span><span class="token punctuation">(</span>
                data<span class="token punctuation">:</span> <span class="token class-name">SliderThemeData</span><span class="token punctuation">(</span>
                  trackShape<span class="token punctuation">:</span> <span class="token class-name">TrackShape</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">)</span><span class="token punctuation">,</span>
                child<span class="token punctuation">:</span> <span class="token class-name">Slider</span><span class="token punctuation">(</span>
                  value<span class="token punctuation">:</span> _value<span class="token punctuation">,</span>
                  onChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                      _value <span class="token operator">=</span> double<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>
                        value<span class="token punctuation">.</span><span class="token function">toStringAsFixed</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span>precision <span class="token operator">?</span><span class="token operator">?</span> <span class="token class-name">AppTheme</span><span class="token punctuation">.</span>precision<span class="token punctuation">)</span><span class="token punctuation">,</span>
                      <span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    controller<span class="token punctuation">.</span>text <span class="token operator">=</span> _value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>onChanged <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                      widget<span class="token punctuation">.</span>onChanged<span class="token operator">!</span><span class="token punctuation">(</span>_value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                  <span class="token punctuation">}</span><span class="token punctuation">,</span>
                  onChangeStart<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>onChangeStart<span class="token punctuation">,</span>
                  onChangeEnd<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>onChangeEnd<span class="token punctuation">,</span>
                  min<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>min<span class="token punctuation">,</span>
                  max<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>max<span class="token punctuation">,</span>
                  divisions<span class="token punctuation">:</span> divisions<span class="token punctuation">,</span>
                  label<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>label <span class="token operator">?</span><span class="token operator">?</span>
                      _value<span class="token punctuation">.</span><span class="token function">toStringAsFixed</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span>precision <span class="token operator">?</span><span class="token operator">?</span> <span class="token class-name">AppTheme</span><span class="token punctuation">.</span>precision<span class="token punctuation">)</span><span class="token punctuation">,</span>
                  activeColor<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>activeColor <span class="token operator">?</span><span class="token operator">?</span> <span class="token class-name">AppTheme</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;primary&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                  inactiveColor<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>inactiveColor <span class="token operator">?</span><span class="token operator">?</span> <span class="token class-name">AppTheme</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;primary&#39;</span></span><span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">.</span>shade200<span class="token punctuation">,</span>
                  thumbColor<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>thumbColor <span class="token operator">?</span><span class="token operator">?</span> <span class="token class-name">AppTheme</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;primary&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>forceVertical<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">RotatedBox</span><span class="token punctuation">(</span>
                  quarterTurns<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
                  child<span class="token punctuation">:</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>
                    mainAxisSize<span class="token punctuation">:</span> <span class="token class-name">MainAxisSize</span><span class="token punctuation">.</span>min<span class="token punctuation">,</span>
                    children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
                      slider<span class="token punctuation">,</span>
                    <span class="token punctuation">]</span><span class="token punctuation">,</span>
                  <span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>forceInputBox<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span>
                  alignment<span class="token punctuation">:</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>bottomCenter<span class="token punctuation">,</span>
                  children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>widget<span class="token punctuation">.</span>forceVertical <span class="token operator">&amp;&amp;</span> widget<span class="token punctuation">.</span>forceInputBox<span class="token punctuation">)</span>
                      <span class="token class-name">Container</span><span class="token punctuation">(</span>
                        margin<span class="token punctuation">:</span> verticalPadding24<span class="token punctuation">,</span>
                        child<span class="token punctuation">:</span> <span class="token class-name">InputText</span><span class="token punctuation">(</span>
                          controller<span class="token punctuation">:</span> controller<span class="token punctuation">,</span>
                          keyboardType<span class="token punctuation">:</span> <span class="token class-name">TextInputType</span><span class="token punctuation">.</span>number<span class="token punctuation">,</span>
                          onChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">final</span> double updatedValue <span class="token operator">=</span>
                                <span class="token punctuation">(</span>double<span class="token punctuation">.</span><span class="token function">tryParse</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">?</span><span class="token operator">?</span> widget<span class="token punctuation">.</span>initialValue<span class="token punctuation">)</span>
                                    <span class="token punctuation">.</span><span class="token function">clamp</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span>min<span class="token punctuation">,</span> widget<span class="token punctuation">.</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                              _value <span class="token operator">=</span> updatedValue<span class="token punctuation">;</span>
                            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                          <span class="token punctuation">}</span><span class="token punctuation">,</span>
                          <span class="token comment">// TODO: fix to allow negative input</span>
                          inputFormatters<span class="token punctuation">:</span> <span class="token punctuation">[</span>
                            <span class="token class-name"><span class="token namespace">services<span class="token punctuation">.</span></span>FilteringTextInputFormatter</span><span class="token punctuation">.</span><span class="token function">allow</span><span class="token punctuation">(</span>
                                <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">r&#39;^\\-?\\d+\\.?\\d{0,2}&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                          <span class="token punctuation">]</span><span class="token punctuation">,</span>
                        <span class="token punctuation">)</span><span class="token punctuation">,</span>
                      <span class="token punctuation">)</span><span class="token punctuation">,</span>
                    slider<span class="token punctuation">,</span>
                  <span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              <span class="token keyword">return</span> slider<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">InputRangeSlider</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>
  <span class="token keyword">final</span> <span class="token class-name">RangeValues</span> initialValues<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token class-name">RangeValues</span><span class="token punctuation">)</span><span class="token operator">?</span> onChanged<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token class-name">RangeValues</span><span class="token punctuation">)</span><span class="token operator">?</span> onChangeStart<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token class-name">RangeValues</span><span class="token punctuation">)</span><span class="token operator">?</span> onChangeEnd<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double min<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double max<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double<span class="token operator">?</span> step<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">RangeLabels</span><span class="token operator">?</span> labels<span class="token punctuation">;</span>
  <span class="token keyword">final</span> int<span class="token operator">?</span> precision<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Color</span><span class="token operator">?</span> activeColor<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Color</span><span class="token operator">?</span> inactiveColor<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Color</span><span class="token operator">?</span> thumbColor<span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token class-name">InputRangeSlider</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>initialValues<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onChanged<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onChangeStart<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onChangeEnd<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>min <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>max <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>step<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>labels<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>precision<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>activeColor<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>inactiveColor<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>thumbColor<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token metadata function">@override</span>
  <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InputRangeSlider</span><span class="token punctuation">&gt;</span></span> <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_InputRangeSliderState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> _InputRangeSliderState <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InputRangeSlider</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
  late <span class="token class-name">RangeValues</span> _values<span class="token punctuation">;</span>
  <span class="token class-name">RangeLabels</span><span class="token operator">?</span> _labels<span class="token punctuation">;</span>
  int<span class="token operator">?</span> divisions<span class="token punctuation">;</span>
  <span class="token class-name">String</span><span class="token operator">?</span> err<span class="token punctuation">;</span>

  <span class="token metadata function">@override</span>
  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    _values <span class="token operator">=</span> widget<span class="token punctuation">.</span>initialValues<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>step <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>step<span class="token operator">!</span> <span class="token operator">&lt;</span> widget<span class="token punctuation">.</span>max<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      divisions <span class="token operator">=</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>max <span class="token operator">-</span> widget<span class="token punctuation">.</span>min<span class="token punctuation">)</span> <span class="token operator">~/</span> widget<span class="token punctuation">.</span>step<span class="token operator">!</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_values<span class="token punctuation">.</span>start <span class="token operator">&lt;</span> widget<span class="token punctuation">.</span>min <span class="token operator">||</span> _values<span class="token punctuation">.</span>end <span class="token operator">&gt;</span> widget<span class="token punctuation">.</span>max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      err <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Failed assertion: &#39;values.start &gt;= min &amp;&amp; values.start &lt;= max&#39;: is not true.&quot;</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token metadata function">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> err <span class="token operator">!=</span> <span class="token keyword">null</span>
        <span class="token operator">?</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>err<span class="token operator">!</span><span class="token punctuation">,</span> style<span class="token punctuation">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">AppTheme</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;danger&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">:</span> <span class="token class-name">SliderTheme</span><span class="token punctuation">(</span>
            data<span class="token punctuation">:</span> <span class="token class-name">SliderThemeData</span><span class="token punctuation">(</span>
              rangeTrackShape<span class="token punctuation">:</span> <span class="token class-name">RangeTrackShape</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">,</span>
            child<span class="token punctuation">:</span> <span class="token class-name">RangeSlider</span><span class="token punctuation">(</span>
              values<span class="token punctuation">:</span> _values<span class="token punctuation">,</span>
              onChanged<span class="token punctuation">:</span> <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  _values <span class="token operator">=</span> <span class="token class-name">RangeValues</span><span class="token punctuation">(</span>
                    double<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>
                        values<span class="token punctuation">.</span>start<span class="token punctuation">.</span><span class="token function">toStringAsFixed</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span>precision <span class="token operator">?</span><span class="token operator">?</span> <span class="token class-name">AppTheme</span><span class="token punctuation">.</span>precision<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    double<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>
                        values<span class="token punctuation">.</span>end<span class="token punctuation">.</span><span class="token function">toStringAsFixed</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span>precision <span class="token operator">?</span><span class="token operator">?</span> <span class="token class-name">AppTheme</span><span class="token punctuation">.</span>precision<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                  <span class="token punctuation">)</span><span class="token punctuation">;</span>
                  _labels <span class="token operator">=</span> <span class="token class-name">RangeLabels</span><span class="token punctuation">(</span>
                    _values<span class="token punctuation">.</span>start<span class="token punctuation">.</span><span class="token function">toStringAsFixed</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span>precision <span class="token operator">?</span><span class="token operator">?</span> <span class="token class-name">AppTheme</span><span class="token punctuation">.</span>precision<span class="token punctuation">)</span><span class="token punctuation">,</span>
                    _values<span class="token punctuation">.</span>end<span class="token punctuation">.</span><span class="token function">toStringAsFixed</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span>precision <span class="token operator">?</span><span class="token operator">?</span> <span class="token class-name">AppTheme</span><span class="token punctuation">.</span>precision<span class="token punctuation">)</span><span class="token punctuation">,</span>
                  <span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>onChanged <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> widget<span class="token punctuation">.</span>onChanged<span class="token operator">!</span><span class="token punctuation">(</span>_values<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              onChangeStart<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>onChangeStart<span class="token punctuation">,</span>
              onChangeEnd<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>onChangeEnd<span class="token punctuation">,</span>
              min<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>min<span class="token punctuation">,</span>
              max<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>max<span class="token punctuation">,</span>
              labels<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>labels <span class="token operator">?</span><span class="token operator">?</span> _labels<span class="token punctuation">,</span>
              activeColor<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>activeColor<span class="token punctuation">,</span>
              inactiveColor<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>inactiveColor<span class="token punctuation">,</span>
              divisions<span class="token punctuation">:</span> divisions<span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">TrackShape</span> <span class="token keyword">extends</span> <span class="token class-name">RoundedRectSliderTrackShape</span> <span class="token punctuation">{</span>
  <span class="token metadata function">@override</span>
  <span class="token class-name">Rect</span> <span class="token function">getPreferredRect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    required <span class="token class-name">RenderBox</span> parentBox<span class="token punctuation">,</span>
    <span class="token class-name">Offset</span> offset <span class="token operator">=</span> <span class="token class-name">Offset</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span>
    required <span class="token class-name">SliderThemeData</span> sliderTheme<span class="token punctuation">,</span>
    bool isEnabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    bool isDiscrete <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> trackHeight <span class="token operator">=</span> sliderTheme<span class="token punctuation">.</span>trackHeight<span class="token punctuation">;</span>
    <span class="token keyword">final</span> trackLeft <span class="token operator">=</span> offset<span class="token punctuation">.</span>dx<span class="token punctuation">;</span>
    <span class="token keyword">final</span> trackTop <span class="token operator">=</span> offset<span class="token punctuation">.</span>dy <span class="token operator">+</span> <span class="token punctuation">(</span>parentBox<span class="token punctuation">.</span>size<span class="token punctuation">.</span>height <span class="token operator">-</span> trackHeight<span class="token operator">!</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> trackWidth <span class="token operator">=</span> parentBox<span class="token punctuation">.</span>size<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Rect</span><span class="token punctuation">.</span><span class="token function">fromLTWH</span><span class="token punctuation">(</span>trackLeft<span class="token punctuation">,</span> trackTop<span class="token punctuation">,</span> trackWidth<span class="token punctuation">,</span> trackHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">RangeTrackShape</span> <span class="token keyword">extends</span> <span class="token class-name">RoundedRectRangeSliderTrackShape</span> <span class="token punctuation">{</span>
  <span class="token metadata function">@override</span>
  <span class="token class-name">Rect</span> <span class="token function">getPreferredRect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    required <span class="token class-name">RenderBox</span> parentBox<span class="token punctuation">,</span>
    <span class="token class-name">Offset</span> offset <span class="token operator">=</span> <span class="token class-name">Offset</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span>
    required <span class="token class-name">SliderThemeData</span> sliderTheme<span class="token punctuation">,</span>
    bool isEnabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    bool isDiscrete <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> trackHeight <span class="token operator">=</span> sliderTheme<span class="token punctuation">.</span>trackHeight<span class="token punctuation">;</span>
    <span class="token keyword">final</span> trackLeft <span class="token operator">=</span> offset<span class="token punctuation">.</span>dx<span class="token punctuation">;</span>
    <span class="token keyword">final</span> trackTop <span class="token operator">=</span> offset<span class="token punctuation">.</span>dy <span class="token operator">+</span> <span class="token punctuation">(</span>parentBox<span class="token punctuation">.</span>size<span class="token punctuation">.</span>height <span class="token operator">-</span> trackHeight<span class="token operator">!</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> trackWidth <span class="token operator">=</span> parentBox<span class="token punctuation">.</span>size<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Rect</span><span class="token punctuation">.</span><span class="token function">fromLTWH</span><span class="token punctuation">(</span>trackLeft<span class="token punctuation">,</span> trackTop<span class="token punctuation">,</span> trackWidth<span class="token punctuation">,</span> trackHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function F(t,P){const e=i("router-link"),o=i("ExternalLinkIcon");return u(),r("div",null,[d,n("nav",v,[n("ul",null,[n("li",null,[p(e,{to:"#simple-slider"},{default:c(()=>[s("Simple slider")]),_:1})]),n("li",null,[p(e,{to:"#range-slider"},{default:c(()=>[s("Range slider")]),_:1})]),n("li",null,[p(e,{to:"#source-code"},{default:c(()=>[s("Source Code")]),_:1})])])]),m,n("p",null,[s("Pass "),b,s(" value to use that much of precision in all slider calculations and display. When using high precision (let's say greatear than 5), it might give wrong results. The reason for this is "),n("a",g,[s("floating-point arithmetic"),p(o)]),s(" and the fact that Dart uses the "),n("a",h,[s("IEEE 754 standard"),p(o)]),s(" as far as I am concerned. This happens for all languages that use floating-point arithmetic. "),n("a",f,[s("General question about floating-point arithmetic"),p(o)]),s(" in modern programming languages.")]),w,n("img",{src:t.$withBase("/images/flutter/atom-widgets/slider-basic.gif"),alt:"slider-basic"},null,8,y),S,n("img",{src:t.$withBase("/images/flutter/atom-widgets/slider-input.gif"),alt:"slider-input"},null,8,x),_,n("img",{src:t.$withBase("/images/flutter/atom-widgets/slider-step.gif"),alt:"slider-step"},null,8,C),T,n("img",{src:t.$withBase("/images/flutter/atom-widgets/slider-decimalsteps.gif"),alt:"slider-decimalsteps"},null,8,I),R,n("img",{src:t.$withBase("/images/flutter/atom-widgets/slider-vertical.gif"),alt:"slider-vertical"},null,8,V),B,n("img",{src:t.$withBase("/images/flutter/atom-widgets/slider-range.gif"),alt:"slider-range"},null,8,E),A])}const q=l(k,[["render",F],["__file","input-slider.html.vue"]]);export{q as default};

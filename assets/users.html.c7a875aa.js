import{_ as i,r as d,o as l,c,a as e,b as t,w as o,d as s,e as r}from"./app.096e9617.js";const u={},p=e("h1",{id:"users",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#users","aria-hidden":"true"},"#"),s(" Users")],-1),h={class:"table-of-contents"},m=r('<h2 id="purpose" tabindex="-1"><a class="header-anchor" href="#purpose" aria-hidden="true">#</a> Purpose</h2><p>A system for authenticating users and storing user information is called as user management. Currently, <code>VaahCMS</code> offers two login options: <code>Login via Password</code> and <code>Login via OTP</code>. You can manage every aspect of your user accounts in <code>VaahCMS</code>, including altering user properties, resetting passwords, enabling or disabling users, and more.</p><h2 id="features-demos" tabindex="-1"><a class="header-anchor" href="#features-demos" aria-hidden="true">#</a> Features &amp; Demos</h2><h5 id="user-listing" tabindex="-1"><a class="header-anchor" href="#user-listing" aria-hidden="true">#</a> User Listing</h5><p>Obtain a comprehensive list of all of your users, along with their associated data. All of your users&#39; information is contained in the Users table, and the <code>VaahCMS</code> offers all users&#39; administration tools at your fingertips. You have the ability to <code>add</code>, <code>edit</code>, and <code>remove</code> users. Additionally, you may alter user details and <code>roles</code> at the same location where you can <code>search</code>, <code>sort</code>, and <code>filters</code> your users&#39; data.</p>',5),g=e("figure",null,[e("iframe",{src:"https://img-v4.getdemo.dev/screenshot/msedge_TIKvbvuNdu.mp4",frameborder:"0",allowfullscreen:"true",style:{width:"100%","aspect-ratio":"16/9"}}," ")],-1),v=e("hr",null,null,-1),k=e("h5",{id:"create-a-user",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#create-a-user","aria-hidden":"true"},"#"),s(" Create a User")],-1),b=e("p",null,"You can view the video attached below to learn how to create a new user.",-1),f=e("figure",null,[e("iframe",{src:"https://img-v4.getdemo.dev/screenshot/msedge_f9KBTI8yTZ.mp4",frameborder:"0",allowfullscreen:"true",style:{width:"100%","aspect-ratio":"16/9"}}," ")],-1),_=e("hr",null,null,-1),y=e("h5",{id:"manage-user-roles",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#manage-user-roles","aria-hidden":"true"},"#"),s(" Manage User Roles")],-1),q=e("p",null,[s("You can assign roles to a user in "),e("code",null,"Users"),s(" section. By clicking on "),e("code",null,"Role"),s(" column, a page will open that contain list of Roles along with "),e("code",null,"Yes/No"),s(" Button.")],-1),w=e("figure",null,[e("iframe",{src:"https://img-v4.getdemo.dev/screenshot/msedge_IUIS4wUJh0.mp4",frameborder:"0",allowfullscreen:"true",style:{width:"100%","aspect-ratio":"16/9"}}," ")],-1),U=r('<h2 id="required-user-permissions-to-access-this-section" tabindex="-1"><a class="header-anchor" href="#required-user-permissions-to-access-this-section" aria-hidden="true">#</a> Required User Permissions To Access This Section</h2><table><thead><tr><th>Permissions</th><th>Description</th></tr></thead><tbody><tr><td>Has Access Of Users Section</td><td>This will allow user to see the link of user section.</td></tr><tr><td>Can Create Users</td><td>This will allow user to add anything in the user section.</td></tr><tr><td>Can Read Users</td><td>This will allow user to view anything in the user section.</td></tr><tr><td>Can Update Users</td><td>This will allow user to edit anything in the user section.</td></tr><tr><td>Can Delete Users</td><td>This will allow user to delete anything in the user section.</td></tr><tr><td>Can Manage Users</td><td>This will allow user to manage anything in the user section.</td></tr><tr><td>Can See Users Contact Details</td><td>This will allow user to view contact (email, mobile) detail in the user section.</td></tr></tbody></table><h2 id="files" tabindex="-1"><a class="header-anchor" href="#files" aria-hidden="true">#</a> Files</h2><ul><li>Laravel Route: <code>vaahcms/Routes/backend/route-users.php</code></li><li>Laravel Controller: <code>vaahcms/Http/Controllers/Backend/UsersController.php</code></li><li>Laravel Model: <code>vaahcms/Models/User.php</code></li><li>Vue Route: <code>vaahcms/Vue/routes/vue-routes-users.js</code></li><li>Vue Store: <code>vaahcms/Vue/stores/store-users.js</code></li><li>Vue Page Directory: <code>vaahcms/Vue/pages/users</code></li></ul><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h6 id="accessors" tabindex="-1"><a class="header-anchor" href="#accessors" aria-hidden="true">#</a> Accessors</h6>',6),x=e("code",null,"Accessors",-1),A={href:"https://laravel.com/docs/9.x/eloquent-mutators#defining-an-accessor",target:"_blank",rel:"noopener noreferrer"},R=e("thead",null,[e("tr",null,[e("th",null,"Method Name"),e("th",null,"Description")])],-1),T=e("td",null,"getAvatarAttribute",-1),$=e("code",null,"avatar_url",-1),C=e("code",null,"Gravatar",-1),S={href:"https://en.gravatar.com/",target:"_blank",rel:"noopener noreferrer"},M=e("tr",null,[e("td",null,"getMetaAttribute"),e("td",null,[s("Get value of "),e("code",null,"meta"),s(" column in JSON")])],-1),P=e("tr",null,[e("td",null,"getNameAttribute"),e("td",null,[s("Get value of "),e("code",null,"display_name"),s(" column or joined string of "),e("code",null,"first_name"),s(", "),e("code",null,"middle_name"),s(" and "),e("code",null,"last_name"),s(" column from database.")])],-1),B=e("hr",null,null,-1),L=e("h6",{id:"mutators",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#mutators","aria-hidden":"true"},"#"),s(" Mutators")],-1),N=e("code",null,"Mutators",-1),D={href:"https://laravel.com/docs/9.x/eloquent-mutators#defining-a-mutator",target:"_blank",rel:"noopener noreferrer"},V=r('<table><thead><tr><th>Method Name</th><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td>setMetaAttribute</td><td><code>$value</code></td><td>Set json encoded value in <code>meta</code> column</td></tr><tr><td>setFirstNameAttribute</td><td><code>$value</code></td><td>Set first character of First Name capitalized</td></tr><tr><td>setMiddleNameAttribute</td><td><code>$value</code></td><td>Set first character of Middle Name capitalized</td></tr><tr><td>setLastNameAttribute</td><td><code>$value</code></td><td>Set first character of Last Name capitalized</td></tr><tr><td>setPasswordAttribute</td><td><code>$value</code></td><td>Hashing of Password. <code>prevent_password_attr_set</code> This variable is defined to ignore this mutator.</td></tr><tr><td>setLoginOtpAttribute</td><td><code>$value</code></td><td>Hashing of Login OTP code</td></tr></tbody></table><hr><h6 id="scopes" tabindex="-1"><a class="header-anchor" href="#scopes" aria-hidden="true">#</a> Scopes</h6>',3),I=e("code",null,"Scopes",-1),O={href:"https://laravel.com/docs/9.x/eloquent#dynamic-scopes",target:"_blank",rel:"noopener noreferrer"},j=r('<table><thead><tr><th>Method Name</th><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td>scopeIsActive</td><td><code>$query</code></td><td>Return Active User (is-active == 1)</td></tr><tr><td>scopeBetweenDates</td><td><code>$query</code> <code>$from</code> <code>$to</code></td><td>Return User which is created between <code>$from</code> date &amp; <code>$to</code> date</td></tr><tr><td>scopeExclude</td><td><code>$query</code> <code>$columns</code></td><td>The array in <code>$columns</code> parameter is exclude from select query.</td></tr></tbody></table><hr><h6 id="relationships" tabindex="-1"><a class="header-anchor" href="#relationships" aria-hidden="true">#</a> Relationships</h6>',3),F=e("code",null,"Relationships",-1),E={href:"https://laravel.com/docs/9.x/eloquent-relationships#defining-relationships",target:"_blank",rel:"noopener noreferrer"},G=r(`<table><thead><tr><th>Method Name</th><th>Description</th></tr></thead><tbody><tr><td>createdByUser</td><td>Return data of <code>User</code> model that has an id which matches the <code>created_by</code> column of User.</td></tr><tr><td>updatedByUser</td><td>Return data of <code>User</code> model that has an id which matches the <code>updated_by</code> column of User.</td></tr><tr><td>deletedByUser</td><td>Return data of <code>User</code> model that has an id which matches the <code>deleted_by</code> column of User.</td></tr><tr><td>roles</td><td>Return data of <code>Role</code> model with <code>Pivot</code> that is assigned to Users.</td></tr></tbody></table><hr><h6 id="non-static" tabindex="-1"><a class="header-anchor" href="#non-static" aria-hidden="true">#</a> Non Static</h6><table><thead><tr><th>Method Name</th><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td>getTableColumns</td><td></td><td>Get array of all columns name in User table.</td></tr><tr><td>getFormFillableColumns</td><td></td><td>Get array of some column name in User table.</td></tr><tr><td>activeRoles</td><td></td><td>Return active Roles of User.</td></tr><tr><td>hasRole</td><td><code>$role_slug</code></td><td>Return <code>true</code> if role in <code>$role_slug</code> is active.</td></tr><tr><td>isAdmin</td><td></td><td>Return <code>true</code> if <code>Administrator</code> role is active.</td></tr><tr><td>hasPermission</td><td><code>$permission_slug</code> <code>$details</code></td><td>Return <code>true</code> if permission in <code>$permission_slug</code> is active and their associated role is active.</td></tr></tbody></table><hr><h6 id="static" tabindex="-1"><a class="header-anchor" href="#static" aria-hidden="true">#</a> Static</h6><table><thead><tr><th>Method Name</th><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td>User::findByUsername</td><td><code>$username</code> <code>$columns = array(&#39;*&#39;)</code></td><td>The <code>findByUsername</code> method find users only by the <code>username</code> and return given columns.</td></tr><tr><td>User::findByEmail</td><td><code>$email</code> <code>$columns = array(&#39;*&#39;)</code></td><td>The <code>findByEmail</code> method find users only by the <code>email</code> and return given columns.</td></tr><tr><td>User::countAdministrators</td><td></td><td>The <code>countAdministrators</code> method return number of users which has <code>Administrator</code> role.</td></tr><tr><td>User::getByRoles</td><td><code>$array_role_slugs</code></td><td>The <code>getByRoles</code> method return a list of the users which has a role exists in <code>$array_role_slugs</code>.</td></tr><tr><td>User::getByRolesOnlyIds</td><td><code>$array_role_slugs</code></td><td>The <code>getByRolesOnlyIds</code> method return only <code>id</code> of the users which has a role exists in <code>$array_role_slugs</code>.</td></tr><tr><td>User::getByRolesOnlyEmails</td><td><code>$array_role_slugs</code></td><td>The <code>getByRolesOnlyEmails</code> method return only <code>email</code> of the users which has a role exists in <code>$array_role_slugs</code>.</td></tr><tr><td>User::rulesAdminCreate</td><td></td><td>The <code>rulesAdminCreate</code> method return the array of validation rules for User.</td></tr><tr><td>User::isLastAdmin</td><td></td><td>The <code>isLastAdmin</code> method return <code>true</code> if Application has only one User of Administrator role.</td></tr><tr><td>User::getAvatarById</td><td><code>$id</code></td><td>The <code>getAvatarById</code> method find users only by the <code>id</code> and return avatar url.</td></tr><tr><td>User::getUsersForAssets</td><td></td><td>The <code>getUsersForAssets</code> method return list of <code>active</code> users with following columns: <code>id</code>, <code>first_name</code>, <code>middle_name</code>, <code>last_name</code></td></tr></tbody></table><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><p>VaahCMS has APIs for every method, allowing you to interact with <code>NuxJS</code> or other frameworks.</p><p>You can access APIs method from <code>vaachms/Http/Controllers/Api/UsersController.php</code> and routes from <code>vaahcms/Routes/api/api-routes-users.php</code></p><p>We mention some methods bellow which help you to understand the structure.</p><h6 id="create" tabindex="-1"><a class="header-anchor" href="#create" aria-hidden="true">#</a> create</h6><h5 id="method-post" tabindex="-1"><a class="header-anchor" href="#method-post" aria-hidden="true">#</a> Method: <code>POST</code></h5><h5 id="url-public-url-api-users-users" tabindex="-1"><a class="header-anchor" href="#url-public-url-api-users-users" aria-hidden="true">#</a> URL: <code>&lt;public-url&gt;/api/users/users/</code></h5><h5 id="sample-request" tabindex="-1"><a class="header-anchor" href="#sample-request" aria-hidden="true">#</a> Sample Request</h5><p><strong>Parameters:</strong> <code>$request</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$request</span> <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Request</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;new_item&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;alternate_email&#39;</span>       <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;avatar_url&#39;</span>            <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;bio&#39;</span>                   <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;birth&#39;</span>                 <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;country&#39;</span>               <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;country_calling_code&#39;</span>  <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;country_code&#39;</span>          <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;designation&#39;</span>           <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;display_name&#39;</span>          <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;email&#39;</span>                 <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>    <span class="token comment">// required</span>
        <span class="token string single-quoted-string">&#39;first_name&#39;</span>            <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>    <span class="token comment">// required</span>
        <span class="token string single-quoted-string">&#39;gender&#39;</span>                <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;is_active&#39;</span>             <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>    <span class="token comment">// required       //true:false:0:1</span>
        <span class="token string single-quoted-string">&#39;last_name&#39;</span>             <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;middle_name&#39;</span>           <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;password&#39;</span>              <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;phone&#39;</span>                 <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;status&#39;</span>                <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>    <span class="token comment">// required       //active:inactive</span>
        <span class="token string single-quoted-string">&#39;timezone&#39;</span>              <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;title&#39;</span>                 <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;username&#39;</span>              <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;website&#39;</span>               <span class="token operator">=&gt;</span> <span class="token constant">null</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Creates a new user for the database on which the method is run. <code>\\WebReinvent\\VaahCms\\Models\\User::create($request);</code> returns a duplicate user error if the email already exists in the <code>User</code> table.</p><h5 id="sample-response" tabindex="-1"><a class="header-anchor" href="#sample-response" aria-hidden="true">#</a> Sample Response</h5><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span>  <span class="token punctuation">{</span>
    <span class="token property">&quot;item&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      ...
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;messages&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Saved successfully.&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;success&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h5 id="get-list" tabindex="-1"><a class="header-anchor" href="#get-list" aria-hidden="true">#</a> Get List</h5><h5 id="method-get" tabindex="-1"><a class="header-anchor" href="#method-get" aria-hidden="true">#</a> Method: <code>GET</code></h5><h5 id="url-public-url-api-users-users-1" tabindex="-1"><a class="header-anchor" href="#url-public-url-api-users-users-1" aria-hidden="true">#</a> URL: <code>&lt;public-url&gt;/api/users/users/</code></h5><h5 id="sample-request-1" tabindex="-1"><a class="header-anchor" href="#sample-request-1" aria-hidden="true">#</a> Sample Request</h5><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>parameter <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;filter&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;q&#39;</span>            <span class="token comment">// for search queary (optionl)</span>
        <span class="token string single-quoted-string">&#39;trashed&#39;</span>      <span class="token comment">// for include or exclude trashed data (optionl)</span>
        <span class="token string single-quoted-string">&#39;is_active&#39;</span>    <span class="token comment">// for fetching only active or inactive data (optionl)</span>
        <span class="token string single-quoted-string">&#39;sort&#39;</span>         <span class="token comment">// for sorting the data (optionl)</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="sample-response-1" tabindex="-1"><a class="header-anchor" href="#sample-response-1" aria-hidden="true">#</a> Sample Response</h5><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      ...
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;success&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h6 id="validation" tabindex="-1"><a class="header-anchor" href="#validation" aria-hidden="true">#</a> validation</h6><p><strong>Parameters:</strong> <code>$inputs</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$inputs</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;first_name&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>    <span class="token comment">// required</span>
    <span class="token string single-quoted-string">&#39;email&#39;</span>      <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>    <span class="token comment">// required</span>
    <span class="token string single-quoted-string">&#39;is_active&#39;</span>  <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>    <span class="token comment">// required       //true:false:0:1</span>
    <span class="token string single-quoted-string">&#39;status&#39;</span>     <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>    <span class="token comment">// required       //active:inactive</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32),Y={href:"https://laravel.com/docs/9.x/validation#validation-quickstart",target:"_blank",rel:"noopener noreferrer"},H=e("code",null,"first_name",-1),z=e("code",null,"email",-1),J=e("code",null,"is_active",-1),K=e("code",null,"status",-1);function W(Z,Q){const n=d("router-link"),a=d("ExternalLinkIcon");return l(),c("div",null,[p,e("nav",h,[e("ul",null,[e("li",null,[t(n,{to:"#purpose"},{default:o(()=>[s("Purpose")]),_:1})]),e("li",null,[t(n,{to:"#features-demos"},{default:o(()=>[s("Features & Demos")]),_:1})]),e("li",null,[t(n,{to:"#required-user-permissions-to-access-this-section"},{default:o(()=>[s("Required User Permissions To Access This Section")]),_:1})]),e("li",null,[t(n,{to:"#files"},{default:o(()=>[s("Files")]),_:1})]),e("li",null,[t(n,{to:"#methods"},{default:o(()=>[s("Methods")]),_:1})]),e("li",null,[t(n,{to:"#api"},{default:o(()=>[s("API")]),_:1})])])]),m,g,v,k,b,f,_,y,q,w,U,e("p",null,[s("To know about "),x,s(", see "),e("a",A,[s("Laravel Documentation"),t(a)])]),e("table",null,[R,e("tbody",null,[e("tr",null,[T,e("td",null,[s("Get value of "),$,s(" column from database or "),C,s(" url. To know about Gravatar, "),e("a",S,[s("click here"),t(a)])])]),M,P])]),B,L,e("p",null,[s("To know about "),N,s(", see "),e("a",D,[s("Laravel Documentation"),t(a)])]),V,e("p",null,[s("To know about "),I,s(", see "),e("a",O,[s("Laravel Documentation"),t(a)])]),j,e("p",null,[s("To know about "),F,s(", see "),e("a",E,[s("Laravel Documentation"),t(a)])]),G,e("p",null,[s("This function uses the "),e("a",Y,[s("Laravel Validator"),t(a)]),s(" to validate the user's following columns: "),H,s(", "),z,s(", "),J,s(", and "),K,s(".")])])}const ee=i(u,[["render",W],["__file","users.html.vue"]]);export{ee as default};

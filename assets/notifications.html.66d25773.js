import{_ as i,r as c,o as l,c as u,a as n,b as t,w as e,d as s,e as p}from"./app.096e9617.js";const r={},d=n("h1",{id:"notifications",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#notifications","aria-hidden":"true"},"#"),s(" Notifications")],-1),k={class:"table-of-contents"},v=p('<h3 id="setup-laravel-queues-for-vaahcms" tabindex="-1"><a class="header-anchor" href="#setup-laravel-queues-for-vaahcms" aria-hidden="true">#</a> Setup Laravel Queues for VaahCMS</h3><p>Follow the following steps:</p><ol><li><p>Set <code>QUEUE_CONNECTION</code> to <code>database</code> in your active <code>env</code> file</p></li><li><p>Visit <code>Setting &gt; General &gt; Site Settings &gt; Laravel Queues</code> in your <code>backend dashboard</code> and enable it.</p></li><li><p>Run or setup <code>cron/daemon</code> job for</p><p><code>php artisan queue:work --queue=high,medium,low,default --env=env_filename</code></p><p>If you want to run without cache use following command:</p><p><code>php artisan queue:listen --queue=high,medium,low,default --env=env_filename</code> eg:</p><p><code>php artisan queue:listen --queue=high,medium,low,default --env=develop</code></p></li></ol><p>If you make any changes in code of your <code>Job</code> class, then you must restart the <code>queue:work</code> command.</p><p><strong>Note:</strong> When sending notifications, be sure to set the <code>MAIL_FROM_ADDRESS</code> and <code>MAIL_FROM_NAME</code> in your <code>env</code> file. This value will be used as the <code>sender</code> of the <code>email</code> and <code>name</code> of your mail notification messages.</p><h3 id="how-to-create-new-notification" tabindex="-1"><a class="header-anchor" href="#how-to-create-new-notification" aria-hidden="true">#</a> How to create new notification?</h3><p>There are two way to create notifications:</p><ol><li>Using <code>Backend &gt; Settings &gt; Notifications</code></li><li>Use <code>Seeds</code></li></ol><h4 id="_1-create-notification-from-backend" tabindex="-1"><a class="header-anchor" href="#_1-create-notification-from-backend" aria-hidden="true">#</a> 1. Create notification from Backend</h4><p>Login to <code>Backend Administrator Control Panel</code> (<code>&lt;public-url</code>/backend), then navigate to <code>Settings &gt; Notifications</code>.</p>',10),m=["src"],b=n("p",null,[s("Here you will be able create new "),n("code",null,"notifications"),s(" which can be used in your code.")],-1),g=["src"],q=p(`<h4 id="_2-create-notification-via-seeds" tabindex="-1"><a class="header-anchor" href="#_2-create-notification-via-seeds" aria-hidden="true">#</a> 2. Create notification via Seeds</h4><p>You need to create <strong>two</strong> <code>json </code> files in your <code>module</code> or <code>theme</code> at following locations:</p><p><code>&lt;theme-or-module-path&gt;/Database/Seeders/json/notifications.json</code> with following content:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;notification-name&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_mail&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_sms&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_push&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_backend&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_frontend&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can choose the various <code>via</code> by which you want to send the <code>notification</code>.</p><p><code>&lt;theme-or-module-path&gt;/Database/Seeders/json/notification_contents.json</code></p><p>In this file <code>slug</code> is coming from the <code>&lt;notification-name&gt;</code> and each <code>{}</code> object represent the a <code>line</code> for the notification.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;notification-name-slug&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mail&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;subject&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Welcome Email&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;notification-name-slug&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mail&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;from&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#!ENV:MAIL_FROM_NAME!#&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#!ENV:MAIL_FROM_ADDRESS!#&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;notification-name-slug&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mail&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;line&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Hello #!USER:NAME!#&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;notification-name-slug&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;backend&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;content&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Lorem ipsum #!ENV:APP_NAME!#. Thanks!&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;notification-name-slug&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;backend&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;action&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Click&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;action&quot;</span><span class="token operator">:</span><span class="token string">&quot;#!ROUTE:VH.VERIFICATION!#&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>slug</code></td><td>It is the slug of the notification name.</td></tr><tr><td><code>via</code></td><td>Represent that this <code>{}</code> object belong to how the notification will be sent.</td></tr><tr><td><code>sort</code></td><td>Index or sequence of the each object.</td></tr><tr><td><code>key</code></td><td>This represent the type of object.<br><strong>mail</strong> can have following keys : <code>greeting</code>, <code>line</code>, <code>action</code>, <code>from</code>, <code>subject</code><br><strong>backend</strong> can have following keys: <code>content</code>, <code>action</code></td></tr><tr><td><code>value</code></td><td>Value contain the actual content of the <code>key</code>. This can have dynamic values like <code>#!ENV:APP_NAME!#</code> will be replace by the <code>APP_NAME</code></td></tr><tr><td>meta</td><td>Any additional information required. Eg: For key <code>action</code> it requires <code>Label</code> and <code>Link</code> like a hyperlink requires a <code>Label</code> and <code>Link</code></td></tr></tbody></table><p>Now to these notification should be created, whenever the <code>module</code> or <code>theme</code> gets activated. So, now we need to use <code>DatabaseTableSeeder.php</code> , add following methods to seed these notifications:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">...</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">seedNotifications</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">seedNotificationContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">seedNotifications</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$list</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>VaahSeeder</span><span class="token operator">::</span><span class="token function">getListFromJson</span><span class="token punctuation">(</span><span class="token constant">__DIR__</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;/json/notifications.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>VaahSeeder</span><span class="token operator">::</span><span class="token function">storeSeedsWithUuid</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;vh_notifications&#39;</span><span class="token punctuation">,</span> <span class="token variable">$list</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">seedNotificationContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$list</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>VaahSeeder</span><span class="token operator">::</span><span class="token function">getListFromJson</span><span class="token punctuation">(</span><span class="token constant">__DIR__</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;notification_contents.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$list</span> <span class="token keyword">as</span> <span class="token variable">$item</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$notification</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;vh_notifications&#39;</span> <span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">,</span> <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$exist</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;vh_notification_contents&#39;</span> <span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;vh_notification_id&#39;</span><span class="token punctuation">,</span> <span class="token variable">$notification</span><span class="token operator">-&gt;</span><span class="token property">id</span> <span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sort&#39;</span><span class="token punctuation">,</span>  <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;sort&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;via&#39;</span><span class="token punctuation">,</span>  <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;via&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;vh_notification_id&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$notification</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;meta&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;meta&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;meta&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$exist</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;vh_notification_contents&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;vh_notification_contents&#39;</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;vh_notification_id&#39;</span><span class="token punctuation">,</span> <span class="token variable">$notification</span><span class="token operator">-&gt;</span><span class="token property">id</span> <span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sort&#39;</span><span class="token punctuation">,</span>  <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;sort&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;via&#39;</span><span class="token punctuation">,</span>  <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;via&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="how-to-show-notification-variables" tabindex="-1"><a class="header-anchor" href="#how-to-show-notification-variables" aria-hidden="true">#</a> How to show notification variables?</h3><p>If you want to show variables name in notification sidebar.</p>`,13),h=["src"],f=p(`<p>You need to add <code>getNotificationVariables</code> method in <code>ExtendController</code> of your <code>Theme</code> or <code>Module</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getNotificationVariables</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    
    <span class="token variable">$list</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;#!USER:NAME!#&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;details&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;Will be replaced with name.&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;#!USER:DISPLAY_NAME!#&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;details&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;Will be replaced with display name.&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;#!USER:EMAIL!#&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;details&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;Will be replaced with email.&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;#!USER:PHONE!#&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;details&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;Will be replaced with phone.&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;success&#39;</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;data&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$list</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token variable">$response</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="how-to-add-notification-actions" tabindex="-1"><a class="header-anchor" href="#how-to-add-notification-actions" aria-hidden="true">#</a> How to add notification actions?</h3><p>If you want to add action variables in notification.</p>`,4),y=["src"],w=p(`<p>You need to add <code>getNotificationActions</code> method in <code>ExtendController</code> of your <code>Theme</code> or <code>Module</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getNotificationActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    
    <span class="token variable">$list</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;#!ROUTE:VH.LOGIN!#&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;#!ROUTE:VH.REGISTER!#&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;#!ROUTE:VH.RESET!#&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;#!ROUTE:VH.VERIFICATION!#&#39;</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;success&#39;</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;data&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$list</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token variable">$response</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="how-to-use-variable-strings" tabindex="-1"><a class="header-anchor" href="#how-to-use-variable-strings" aria-hidden="true">#</a> How to use variable strings?</h3><p>There are three types of variable strings.</p><ol><li><p><code>#!USER:VARIABLE_NAME!#</code> : If the notification contains #!USER:NAME!# string and then the $input array must be: $inputs = [ &quot;user_id&quot; =&gt; X ]. This will replace the string with value provided in the User Entity.</p></li><li><p><code>#!PARAM:VARIABLE_NAME!#</code> : If the notification contains #!PARAM:NAME!# string and then the $input array must be: $inputs = [ &quot;name&quot; =&gt; &quot;John&quot; ]. This will replace the string with value provided in the inputs.</p></li><li><p><code>#!ROUTE:VARIABLE_NAME!#</code> : If the notification contains #!ROUTE:VH.LOGIN!# string. This will replace the string with <code>url</code> of that <code>route name</code> provided in the <code>PHP Routes</code>.</p></li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$notification</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&lt;notification-slug&gt;&quot;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$notification</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    
    <span class="token variable">$inputs</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string double-quoted-string">&quot;user_id&quot;</span> <span class="token operator">=&gt;</span> xxx<span class="token punctuation">,</span>
            <span class="token string double-quoted-string">&quot;notification_id&quot;</span> <span class="token operator">=&gt;</span> xxx<span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">send</span><span class="token punctuation">(</span>
    	<span class="token variable">$notification</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$inputs</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="how-to-add-custom-url" tabindex="-1"><a class="header-anchor" href="#how-to-add-custom-url" aria-hidden="true">#</a> How to add Custom Url?</h3><p>To add custom url, you need to add <code>param string</code> of custom url: <code>#!PARAM:CUSTOM_URL!#</code>.</p><p>You can add this param string in <code>Notification Actions</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getNotificationActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    
    <span class="token variable">$list</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;#!PARAM:CUSTOM_URL!#&#39;</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;success&#39;</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;data&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$list</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token variable">$response</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This is how you can add custom url in method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$notification</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&lt;notification-slug&gt;&quot;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$notification</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    
    <span class="token variable">$inputs</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string double-quoted-string">&quot;user_id&quot;</span> <span class="token operator">=&gt;</span> xxx<span class="token punctuation">,</span>
            <span class="token string double-quoted-string">&quot;notification_id&quot;</span> <span class="token operator">=&gt;</span> xxx<span class="token punctuation">,</span>
            <span class="token string double-quoted-string">&quot;custom_url&quot;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;https://custom-url&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">send</span><span class="token punctuation">(</span>
    	<span class="token variable">$notification</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$inputs</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sending-without-laravel-queues" tabindex="-1"><a class="header-anchor" href="#sending-without-laravel-queues" aria-hidden="true">#</a> Sending without Laravel Queues</h3><p>If you want to send the notification without Laravel queues, you can use following code</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$notification</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&lt;notification-slug&gt;&quot;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$notification</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    
    <span class="token variable">$inputs</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string double-quoted-string">&quot;user_id&quot;</span> <span class="token operator">=&gt;</span> xxx<span class="token punctuation">,</span>
            <span class="token string double-quoted-string">&quot;notification_id&quot;</span> <span class="token operator">=&gt;</span> xxx<span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    
    <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">send</span><span class="token punctuation">(</span>
    	<span class="token variable">$notification</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$inputs</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sending-notifications-with-laravel-queues" tabindex="-1"><a class="header-anchor" href="#sending-notifications-with-laravel-queues" aria-hidden="true">#</a> Sending notifications with Laravel Queues</h3><p><strong>Note:</strong> By default <code>VaahCMS</code> does not use Laravel queues/jobs to send the notification. You must enable it, read <code>Setup Notifications with queues</code> section to know more</p><p>To send notification with Laravel Queues, you can use following code:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$notification</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&lt;notification-slug&gt;&quot;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$notification</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

    <span class="token variable">$inputs</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string double-quoted-string">&quot;user_id&quot;</span> <span class="token operator">=&gt;</span> xxx<span class="token punctuation">,</span>
            <span class="token string double-quoted-string">&quot;notification_id&quot;</span> <span class="token operator">=&gt;</span> xxx<span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">dispatch</span><span class="token punctuation">(</span>
    	<span class="token variable">$notification</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$inputs</span><span class="token punctuation">,</span> <span class="token variable">$priority</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>$notification</code></td><td>is the instance of <code>WebReinvent\\VaahCms\\Entities\\Notification</code></td></tr><tr><td><code>$user</code></td><td>is the instance of <code>WebReinvent\\VaahCms\\Entities\\User</code></td></tr><tr><td><code>$inputs</code></td><td>is the a data array contain values of strings. <code>user_id</code> and <code>notification_id</code> are required params. <br>Eg. <br>1. If the notification contains <code>#!PARAM:NAME!#</code> string and then the <code>$input</code> array must be: <code>$inputs = [ &quot;name&quot; =&gt; &quot;John&quot; ]</code> This will replace the string with value provided in the inputs. <br>2. If the notification contains <code>#!USER:NAME!#</code> string and then the <code>$input</code> array must be: <code>$inputs = [ &quot;user_id&quot; =&gt; X ]</code> This will replace the string with value provided in the <code>User</code> Entity.</td></tr><tr><td><code>$priority</code></td><td>it is the order of execution of the jobs. You can provide following values: <code>high</code> ,<code>medium</code>, <code>low</code>, &amp; <code>default</code></td></tr></tbody></table><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h3><p>In this example, we register a greeting, a line of text, a call to action, and then another line of text.</p>`,22),_=["src"],$=p(`<h4 id="notification-seeds" tabindex="-1"><a class="header-anchor" href="#notification-seeds" aria-hidden="true">#</a> Notification Seeds</h4><p><code>notifications.json</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>
<span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Send Welcome Email&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_mail&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_sms&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_push&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_backend&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via_frontend&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>notification_contents.json</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>
<span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;send-welcome-email&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mail&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;subject&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Welcome Email&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;send-welcome-email&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mail&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;from&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#!ENV:MAIL_FROM_NAME!#&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#!ENV:MAIL_FROM_ADDRESS!#&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;send-welcome-email&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mail&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;line&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Hello #!USER:NAME!#&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;send-welcome-email&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mail&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;greetings&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Welcome to #!ENV:APP_NAME!#&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;send-welcome-email&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mail&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;line&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Thank you for signing up for #!ENV:APP_NAME!# services&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;send-welcome-email&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mail&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;action&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Click to Login&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;action&quot;</span><span class="token operator">:</span><span class="token string">&quot;#!ROUTE:VH.LOGIN!#&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;send-welcome-email&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;via&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mail&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
        <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;line&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;If your have any queries please contact this #!ENV:MAIL_FROM_ADDRESS!#&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Use following code to send a Notification.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$notification</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;send-welcome-email&quot;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$notification</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    
    <span class="token variable">$inputs</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string double-quoted-string">&quot;user_id&quot;</span> <span class="token operator">=&gt;</span> xxx<span class="token punctuation">,</span>
            <span class="token string double-quoted-string">&quot;notification_id&quot;</span> <span class="token operator">=&gt;</span> xxx<span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    
    <span class="token class-name class-name-fully-qualified static-context">WebReinvent<span class="token punctuation">\\</span>VaahCms<span class="token punctuation">\\</span>Entities<span class="token punctuation">\\</span>Notification</span><span class="token operator">::</span><span class="token function">send</span><span class="token punctuation">(</span>
    	<span class="token variable">$notification</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$inputs</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The notification channel will then translate the message components into a beautiful, responsive HTML email template with a plain-text counterpart. Here is an example of an email generated by the notification:</p>`,8),x=["src"],E=n("p",null,[n("strong",null,"Note:"),s(" When sending notifications, be sure to set the "),n("code",null,"APP_NAME"),s(" in your "),n("code",null,"env"),s(" file. This value will be used in the "),n("code",null,"header"),s(" and "),n("code",null,"footer"),s(" of your mail notification messages.")],-1);function N(o,A){const a=c("router-link");return l(),u("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[t(a,{to:"#setup-laravel-queues-for-vaahcms"},{default:e(()=>[s("Setup Laravel Queues for VaahCMS")]),_:1})]),n("li",null,[t(a,{to:"#how-to-create-new-notification"},{default:e(()=>[s("How to create new notification?")]),_:1})]),n("li",null,[t(a,{to:"#how-to-show-notification-variables"},{default:e(()=>[s("How to show notification variables?")]),_:1})]),n("li",null,[t(a,{to:"#how-to-add-notification-actions"},{default:e(()=>[s("How to add notification actions?")]),_:1})]),n("li",null,[t(a,{to:"#how-to-use-variable-strings"},{default:e(()=>[s("How to use variable strings?")]),_:1})]),n("li",null,[t(a,{to:"#how-to-add-custom-url"},{default:e(()=>[s("How to add Custom Url?")]),_:1})]),n("li",null,[t(a,{to:"#sending-without-laravel-queues"},{default:e(()=>[s("Sending without Laravel Queues")]),_:1})]),n("li",null,[t(a,{to:"#sending-notifications-with-laravel-queues"},{default:e(()=>[s("Sending notifications with Laravel Queues")]),_:1})]),n("li",null,[t(a,{to:"#example"},{default:e(()=>[s("Example")]),_:1})])])]),v,n("img",{src:o.$withBase("/images/notification-5.png"),alt:"notification-5"},null,8,m),b,n("img",{src:o.$withBase("/images/notification-6.png"),alt:"notification-6"},null,8,g),q,n("img",{src:o.$withBase("/images/notification-1.png"),alt:"notification-1"},null,8,h),f,n("img",{src:o.$withBase("/images/notification-2.png"),alt:"notification-2"},null,8,y),w,n("img",{src:o.$withBase("/images/notification-3.png"),alt:"notification-3"},null,8,_),$,n("img",{src:o.$withBase("/images/notification-4.png"),alt:"notification-4"},null,8,x),E])}const S=i(r,[["render",N],["__file","notifications.html.vue"]]);export{S as default};

import{_ as l,r as i,o as u,c as r,a as n,d as s,b as a,w as t,e as o}from"./app.62b9cc5c.js";const d={},k=n("h1",{id:"logging-library",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#logging-library","aria-hidden":"true"},"#"),s(" Logging library")],-1),v={class:"custom-container warning"},g=n("p",{class:"custom-container-title"},"Dependencies",-1),m={class:"table-of-contents"},b=n("h2",{id:"overview",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#overview","aria-hidden":"true"},"#"),s(" Overview")],-1),h=n("ul",null,[n("li",null,"This is the central logging library which handles cloud (e.g. sentry, crashanalytics) and local (e.g. Console/Terminal and Local Files For Device) Logs.")],-1),f={class:"custom-container tip"},y=n("p",{class:"custom-container-title"},"Cloud logging services",-1),w=n("code",null,"sentryConfig",-1),_=n("ul",null,[n("li",null,"So developer should never use individual service in their application, they should always use Logging library for logging any kind of content.")],-1),L=["src"],x=o(`<h2 id="use-cases" tabindex="-1"><a class="header-anchor" href="#use-cases" aria-hidden="true">#</a> Use cases</h2><div class="custom-container tip"><p class="custom-container-title">use cases</p><ul><li>To easily log content on cloud</li><li>To easily add another cloud logging service</li><li>To log transactions. e.g. I want to measure and log time of an api call</li><li>To see formatted (prettier) objects in the console easily readable by the human eye</li><li>To easily differentiate between different kinds of events.</li></ul></div><h2 id="log-types" tabindex="-1"><a class="header-anchor" href="#log-types" aria-hidden="true">#</a> Log types</h2><p>Currently, our logs are of six types.</p><ol><li>log</li><li>info</li><li>success</li><li>warning</li><li>exception</li><li>transaction</li></ol><p>For Local Logs: Different types will print logs in different colors. the log will be in grey, info in blue, success in green, warning in yellow, and exception will be in red.</p><h2 id="how-to-use" tabindex="-1"><a class="header-anchor" href="#how-to-use" aria-hidden="true">#</a> How to use</h2><h3 id="call-static-methods-of-the-log-class-to-log-the-events" tabindex="-1"><a class="header-anchor" href="#call-static-methods-of-the-log-class-to-log-the-events" aria-hidden="true">#</a> Call static methods of the Log class to log the events.</h3><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Log&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;info&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;success&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;warning&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token comment">// code snippet</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">,</span> stackTrace<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">exception</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> stackTrace<span class="token punctuation">:</span> stackTrace<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="log-transactions" tabindex="-1"><a class="header-anchor" href="#log-transactions" aria-hidden="true">#</a> Log Transactions</h3><p>When developer wants to measure performance of different operations they can use <code>logTransaction</code> funtion. Where developer will have to pass operation for which they wants to log as <code>execute</code> argument. e.g. API send receive requests, getting a file from local storage and parsing data, processing huge data, search queries, etc.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">logTransaction</span><span class="token punctuation">(</span>
  execute<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  details<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">TransactionDetails</span><span class="token punctuation">(</span>
    name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;idle transaction&#39;</span></span><span class="token punctuation">,</span>
    operation<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;idle&#39;</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">logTransaction</span><span class="token punctuation">(</span>
  execute<span class="token punctuation">:</span> <span class="token class-name">Api</span><span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;api.vaah.dev&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  details<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">TransactionDetails</span><span class="token punctuation">(</span>
    name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;get root route of vaah api&#39;</span></span><span class="token punctuation">,</span>
    operation<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;read&#39;</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="to-print-data-as-argument-pass-the-data" tabindex="-1"><a class="header-anchor" href="#to-print-data-as-argument-pass-the-data" aria-hidden="true">#</a> To print data, as argument pass the data</h3><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-literal"><span class="token string">&quot;first_key&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;value&quot;</span></span><span class="token punctuation">,</span>
  <span class="token string-literal"><span class="token string">&quot;second_key&quot;</span></span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&quot;key&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;value&quot;</span></span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&quot;key&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;updated_value&quot;</span></span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;data&#39;</span></span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Output:</p>`,16),S=["src"],C=o(`<h3 id="you-can-disable-local-and-cloud-logging-for-specific-log" tabindex="-1"><a class="header-anchor" href="#you-can-disable-local-and-cloud-logging-for-specific-log" aria-hidden="true">#</a> You can disable local and cloud logging for specific log</h3><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">exception</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;exception&#39;</span></span><span class="token punctuation">,</span> disableLocalLogging<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;log&#39;</span></span><span class="token punctuation">,</span> disableCloudLogging<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="for-exception-you-can-pass-two-extra-parameters-stacktrace-and-hint" tabindex="-1"><a class="header-anchor" href="#for-exception-you-can-pass-two-extra-parameters-stacktrace-and-hint" aria-hidden="true">#</a> For exception you can pass two extra parameters: <code>stackTrace</code> and <code>hint</code></h3><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">,</span> stackTrace<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">exception</span><span class="token punctuation">(</span>
        error<span class="token punctuation">,</span>
        stackTrace<span class="token punctuation">:</span> stackTrace<span class="token punctuation">,</span>
        hint<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;The exception is caught in ---&#39;</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="how-to-add-new-cloud-service" tabindex="-1"><a class="header-anchor" href="#how-to-add-new-cloud-service" aria-hidden="true">#</a> How to add new cloud service?</h3>`,6),T={id:"step-1-create-a-service-which-implements-loggingservice-example-of-implemented-service-sentry",tabindex:"-1"},E=n("a",{class:"header-anchor",href:"#step-1-create-a-service-which-implements-loggingservice-example-of-implemented-service-sentry","aria-hidden":"true"},"#",-1),q=o(`<h4 id="step-2-add-that-service-in-services-array-in-logging-library-dart" tabindex="-1"><a class="header-anchor" href="#step-2-add-that-service-in-services-array-in-logging-library-dart" aria-hidden="true">#</a> Step 2: Add that service in _services array, in <a href="#logging-library-dart-source-code">logging_library.dart</a></h4><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Type</span><span class="token punctuation">&gt;</span></span> _services <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token class-name">SentryLoggingService</span><span class="token punctuation">,</span>
    <span class="token class-name">FirebaseLoggingService</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="step-3-call-relavent-functions-of-that-new-service-in-logevent-and-exception-switch-cases" tabindex="-1"><a class="header-anchor" href="#step-3-call-relavent-functions-of-that-new-service-in-logevent-and-exception-switch-cases" aria-hidden="true">#</a> Step 3: Call relavent functions of that new service in <code>_logEvent</code> and <code>exception</code>, <a href="#logging-library-dart-source-code">switch cases</a></h4><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">_logEvent</span><span class="token punctuation">(</span>
    <span class="token class-name">String</span> text<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span><span class="token operator">?</span> data<span class="token punctuation">,</span>
    <span class="token class-name">EventType</span><span class="token operator">?</span> type<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> service <span class="token keyword">in</span> _services<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">switch</span> <span class="token punctuation">(</span>service<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token class-name">SentryLoggingService</span><span class="token punctuation">:</span>
          <span class="token class-name">SentryLoggingService</span><span class="token punctuation">.</span><span class="token function">logEvent</span><span class="token punctuation">(</span>
            message<span class="token punctuation">:</span> text<span class="token punctuation">,</span>
            level<span class="token punctuation">:</span> type<span class="token operator">?</span><span class="token punctuation">.</span>toSentryLevel<span class="token punctuation">,</span>
            data<span class="token punctuation">:</span> data<span class="token punctuation">,</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token class-name">FirebaseLoggingService</span><span class="token punctuation">:</span>
          <span class="token class-name">FirebaseLoggingService</span><span class="token punctuation">.</span><span class="token function">logEvent</span><span class="token punctuation">(</span>
            message<span class="token punctuation">:</span> text<span class="token punctuation">,</span>
            type<span class="token punctuation">:</span> type<span class="token punctuation">,</span>
            data<span class="token punctuation">:</span> data<span class="token punctuation">,</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token punctuation">:</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">exception</span><span class="token punctuation">(</span>
    <span class="token keyword">dynamic</span> throwable<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span><span class="token operator">?</span> data<span class="token punctuation">,</span>
    <span class="token keyword">dynamic</span> stackTrace<span class="token punctuation">,</span>
    <span class="token keyword">dynamic</span> hint<span class="token punctuation">,</span>
    bool disableLocalLogging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    bool disableCloudLogging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">EnvironmentConfig</span> config <span class="token operator">=</span> <span class="token class-name">EnvironmentConfig</span><span class="token punctuation">.</span><span class="token function">getEnvConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>enableLocalLogs <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>disableLocalLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">danger</span><span class="token punctuation">(</span>throwable<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>enableCloudLogs <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>disableCloudLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">final</span> hintWithData <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string-literal"><span class="token string">&#39;hint&#39;</span></span><span class="token punctuation">:</span> hint<span class="token punctuation">,</span>
        <span class="token string-literal"><span class="token string">&#39;data&#39;</span></span><span class="token punctuation">:</span> data<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> service <span class="token keyword">in</span> _services<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>service<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> <span class="token class-name">SentryLoggingService</span><span class="token punctuation">:</span>
            <span class="token class-name">SentryLoggingService</span><span class="token punctuation">.</span><span class="token function">logException</span><span class="token punctuation">(</span>
              throwable<span class="token punctuation">,</span>
              stackTrace<span class="token punctuation">:</span> stackTrace<span class="token punctuation">,</span>
              hint<span class="token punctuation">:</span> hintWithData<span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token class-name">FirebaseLoggingService</span><span class="token punctuation">:</span>
            <span class="token class-name">FirebaseLoggingService</span><span class="token punctuation">.</span><span class="token function">logException</span><span class="token punctuation">(</span>
              throwable<span class="token punctuation">,</span>
              stackTrace<span class="token punctuation">:</span> stackTrace<span class="token punctuation">,</span>
              hint<span class="token punctuation">:</span> hintWithData<span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
          <span class="token keyword">default</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="enviroment-variables-which-control-logging" tabindex="-1"><a class="header-anchor" href="#enviroment-variables-which-control-logging" aria-hidden="true">#</a> Enviroment variables which control logging</h2>`,6),F=n("code",null,"enableLocalLogs",-1),O=n("code",null,"enableCloudLogs",-1),D=n("code",null,"enableLocalLogs",-1),j=n("code",null,"false",-1),W=n("code",null,"enableCloudLogs",-1),A=n("code",null,"false",-1),B=o(`<h2 id="logging-library-dart-source-code" tabindex="-1"><a class="header-anchor" href="#logging-library-dart-source-code" aria-hidden="true">#</a> <code>logging_library.dart</code> Source code:</h2><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;./_cloud/firebase_logging_service.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;./_cloud/logging_service.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;./_cloud/sentry_logging_service.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;./_local/console_service.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;../../env.dart&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Log</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Type</span><span class="token punctuation">&gt;</span></span> _services <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token class-name">SentryLoggingService</span><span class="token punctuation">,</span>
    <span class="token comment">// FirebaseLoggingService,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">log</span><span class="token punctuation">(</span>
    <span class="token keyword">dynamic</span> text<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span><span class="token operator">?</span> data<span class="token punctuation">,</span>
    bool disableLocalLogging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    bool disableCloudLogging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">EnvironmentConfig</span> config <span class="token operator">=</span> <span class="token class-name">EnvironmentConfig</span><span class="token punctuation">.</span><span class="token function">getEnvConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>enableLocalLogs <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>disableLocalLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>enableCloudLogs <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>disableCloudLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">_logEvent</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> data<span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token class-name">EventType</span><span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">info</span><span class="token punctuation">(</span>
    <span class="token keyword">dynamic</span> text<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span><span class="token operator">?</span> data<span class="token punctuation">,</span>
    bool disableLocalLogging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    bool disableCloudLogging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">EnvironmentConfig</span> config <span class="token operator">=</span> <span class="token class-name">EnvironmentConfig</span><span class="token punctuation">.</span><span class="token function">getEnvConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>enableLocalLogs <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>disableLocalLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>enableCloudLogs <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>disableCloudLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">_logEvent</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> data<span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token class-name">EventType</span><span class="token punctuation">.</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">success</span><span class="token punctuation">(</span>
    <span class="token keyword">dynamic</span> text<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span><span class="token operator">?</span> data<span class="token punctuation">,</span>
    bool disableLocalLogging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    bool disableCloudLogging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">EnvironmentConfig</span> config <span class="token operator">=</span> <span class="token class-name">EnvironmentConfig</span><span class="token punctuation">.</span><span class="token function">getEnvConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>enableLocalLogs <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>disableLocalLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>enableCloudLogs <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>disableCloudLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">_logEvent</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> data<span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token class-name">EventType</span><span class="token punctuation">.</span>success<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">warning</span><span class="token punctuation">(</span>
    <span class="token keyword">dynamic</span> text<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span><span class="token operator">?</span> data<span class="token punctuation">,</span>
    bool disableLocalLogging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    bool disableCloudLogging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">EnvironmentConfig</span> config <span class="token operator">=</span> <span class="token class-name">EnvironmentConfig</span><span class="token punctuation">.</span><span class="token function">getEnvConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>enableLocalLogs <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>disableLocalLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>enableCloudLogs <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>disableCloudLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">_logEvent</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> data<span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token class-name">EventType</span><span class="token punctuation">.</span>warning<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">exception</span><span class="token punctuation">(</span>
    <span class="token keyword">dynamic</span> throwable<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span><span class="token operator">?</span> data<span class="token punctuation">,</span>
    <span class="token keyword">dynamic</span> stackTrace<span class="token punctuation">,</span>
    <span class="token keyword">dynamic</span> hint<span class="token punctuation">,</span>
    bool disableLocalLogging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    bool disableCloudLogging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">EnvironmentConfig</span> config <span class="token operator">=</span> <span class="token class-name">EnvironmentConfig</span><span class="token punctuation">.</span><span class="token function">getEnvConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>enableLocalLogs <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>disableLocalLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">danger</span><span class="token punctuation">(</span>throwable<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>enableCloudLogs <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>disableCloudLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">final</span> hintWithData <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string-literal"><span class="token string">&#39;hint&#39;</span></span><span class="token punctuation">:</span> hint<span class="token punctuation">,</span>
        <span class="token string-literal"><span class="token string">&#39;data&#39;</span></span><span class="token punctuation">:</span> data<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> service <span class="token keyword">in</span> _services<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>service<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> <span class="token class-name">SentryLoggingService</span><span class="token punctuation">:</span>
            <span class="token class-name">SentryLoggingService</span><span class="token punctuation">.</span><span class="token function">logException</span><span class="token punctuation">(</span>
              throwable<span class="token punctuation">,</span>
              stackTrace<span class="token punctuation">:</span> stackTrace<span class="token punctuation">,</span>
              hint<span class="token punctuation">:</span> hintWithData<span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token class-name">FirebaseLoggingService</span><span class="token punctuation">:</span>
            <span class="token class-name">FirebaseLoggingService</span><span class="token punctuation">.</span><span class="token function">logException</span><span class="token punctuation">(</span>
              throwable<span class="token punctuation">,</span>
              stackTrace<span class="token punctuation">:</span> stackTrace<span class="token punctuation">,</span>
              hint<span class="token punctuation">:</span> hintWithData<span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
          <span class="token keyword">default</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">_logEvent</span><span class="token punctuation">(</span>
    <span class="token class-name">String</span> text<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span><span class="token operator">?</span> data<span class="token punctuation">,</span>
    <span class="token class-name">EventType</span><span class="token operator">?</span> type<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> service <span class="token keyword">in</span> _services<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">switch</span> <span class="token punctuation">(</span>service<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token class-name">SentryLoggingService</span><span class="token punctuation">:</span>
          <span class="token class-name">SentryLoggingService</span><span class="token punctuation">.</span><span class="token function">logEvent</span><span class="token punctuation">(</span>
            message<span class="token punctuation">:</span> text<span class="token punctuation">,</span>
            level<span class="token punctuation">:</span> type<span class="token operator">?</span><span class="token punctuation">.</span>toSentryLevel<span class="token punctuation">,</span>
            data<span class="token punctuation">:</span> data<span class="token punctuation">,</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token class-name">FirebaseLoggingService</span><span class="token punctuation">:</span>
          <span class="token class-name">FirebaseLoggingService</span><span class="token punctuation">.</span><span class="token function">logEvent</span><span class="token punctuation">(</span>
            message<span class="token punctuation">:</span> text<span class="token punctuation">,</span>
            type<span class="token punctuation">:</span> type<span class="token punctuation">,</span>
            data<span class="token punctuation">:</span> data<span class="token punctuation">,</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token punctuation">:</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function H(c,N){const p=i("RouterLink"),e=i("router-link");return u(),r("div",null,[k,n("div",v,[g,n("ul",null,[n("li",null,[s("Log depends "),a(p,{to:"/vaahflutter/directory_structure/vaahextendflutter/env.html"},{default:t(()=>[s("EnvironmentConfig")]),_:1}),s(".")])])]),n("nav",m,[n("ul",null,[n("li",null,[a(e,{to:"#overview"},{default:t(()=>[s("Overview")]),_:1})]),n("li",null,[a(e,{to:"#use-cases"},{default:t(()=>[s("Use cases")]),_:1})]),n("li",null,[a(e,{to:"#log-types"},{default:t(()=>[s("Log types")]),_:1})]),n("li",null,[a(e,{to:"#how-to-use"},{default:t(()=>[s("How to use")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#call-static-methods-of-the-log-class-to-log-the-events"},{default:t(()=>[s("Call static methods of the Log class to log the events.")]),_:1})]),n("li",null,[a(e,{to:"#log-transactions"},{default:t(()=>[s("Log Transactions")]),_:1})]),n("li",null,[a(e,{to:"#to-print-data-as-argument-pass-the-data"},{default:t(()=>[s("To print data, as argument pass the data")]),_:1})]),n("li",null,[a(e,{to:"#you-can-disable-local-and-cloud-logging-for-specific-log"},{default:t(()=>[s("You can disable local and cloud logging for specific log")]),_:1})]),n("li",null,[a(e,{to:"#for-exception-you-can-pass-two-extra-parameters-stacktrace-and-hint"},{default:t(()=>[s("For exception you can pass two extra parameters: stackTrace and hint")]),_:1})]),n("li",null,[a(e,{to:"#how-to-add-new-cloud-service"},{default:t(()=>[s("How to add new cloud service?")]),_:1})])])]),n("li",null,[a(e,{to:"#enviroment-variables-which-control-logging"},{default:t(()=>[s("Enviroment variables which control logging")]),_:1})]),n("li",null,[a(e,{to:"#logging-library-dart-source-code"},{default:t(()=>[s("logging_library.dart Source code:")]),_:1})])])]),b,h,n("div",f,[y,n("ul",null,[n("li",null,[n("p",null,[s("As of now we have implemented "),a(p,{to:"/vaahflutter/directory_structure/vaahextendflutter/services/logging_library/_cloud/sentry_logging_service.html"},{default:t(()=>[s("Sentry")]),_:1}),s(" to log and measure performance. Any other service is not available yet. To setup Sentry please check "),a(p,{to:"/vaahflutter/directory_structure/vaahextendflutter/services/logging_library/_cloud/sentry_logging_service.html#configuration"},{default:t(()=>[s("this")]),_:1}),s(".")])]),n("li",null,[n("p",null,[s("You can check out more details about it here: "),a(p,{to:"/vaahflutter/directory_structure/vaahextendflutter/services/logging_library/_cloud/sentry_logging_service.html"},{default:t(()=>[s("Sentry")]),_:1}),s(" and "),a(p,{to:"/vaahflutter/directory_structure/vaahextendflutter/services/performance_monitoring.html"},{default:t(()=>[s("Performance")]),_:1})])]),n("li",null,[n("p",null,[s("Also to enable sentry; developer will have to pass "),w,s(" in "),a(p,{to:"/vaahflutter/directory_structure/vaahextendflutter/env.html"},{default:t(()=>[s("environment")]),_:1}),s(".")])])])]),_,n("img",{src:c.$withBase("/images/flutter/components/log/hierarchy.png"),alt:"hierarchy"},null,8,L),n("ul",null,[n("li",null,[s("To setup Sentry please check "),a(p,{to:"/vaahflutter/directory_structure/vaahextendflutter/services/logging_library/_cloud/sentry_logging_service.html#configuration"},{default:t(()=>[s("this")]),_:1}),s(".")])]),x,n("img",{src:c.$withBase("/images/flutter/components/log/prettier-log.png"),alt:"Output"},null,8,S),C,n("h4",T,[E,s(" Step 1: create a service which implements "),a(p,{to:"/vaahflutter/directory_structure/vaahextendflutter/services/logging_library/_cloud/logging_service.html"},{default:t(()=>[s("LoggingService")]),_:1}),s(", example of implemented service: "),a(p,{to:"/vaahflutter/directory_structure/vaahextendflutter/services/logging_library/_cloud/sentry_logging_service.html"},{default:t(()=>[s("Sentry")]),_:1})]),q,n("ul",null,[n("li",null,[s("depending on environment variables "),F,s(" and "),O,s(", the content is logged. e.g. if "),D,s(" in the "),a(p,{to:"/vaahflutter/directory_structure/vaahextendflutter/env.html"},{default:t(()=>[s("environment")]),_:1}),s(" is set to "),j,s(" then no local logs will be printed. if "),W,s(" is set to "),A,s(" then no local logs will be printed.")])]),B])}const Y=l(d,[["render",H],["__file","logging_library.html.vue"]]);export{Y as default};
